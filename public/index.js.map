{
  "version": 3,
  "sources": ["../node_modules/.pnpm/@firebase+util@1.9.6/node_modules/@firebase/util/src/constants.ts", "../node_modules/.pnpm/@firebase+util@1.9.6/node_modules/@firebase/util/src/assert.ts", "../node_modules/.pnpm/@firebase+util@1.9.6/node_modules/@firebase/util/src/crypt.ts", "../node_modules/.pnpm/@firebase+util@1.9.6/node_modules/@firebase/util/src/deepCopy.ts", "../node_modules/.pnpm/@firebase+util@1.9.6/node_modules/@firebase/util/src/global.ts", "../node_modules/.pnpm/@firebase+util@1.9.6/node_modules/@firebase/util/src/defaults.ts", "../node_modules/.pnpm/@firebase+util@1.9.6/node_modules/@firebase/util/src/deferred.ts", "../node_modules/.pnpm/@firebase+util@1.9.6/node_modules/@firebase/util/src/emulator.ts", "../node_modules/.pnpm/@firebase+util@1.9.6/node_modules/@firebase/util/src/environment.ts", "../node_modules/.pnpm/@firebase+util@1.9.6/node_modules/@firebase/util/src/errors.ts", "../node_modules/.pnpm/@firebase+util@1.9.6/node_modules/@firebase/util/src/json.ts", "../node_modules/.pnpm/@firebase+util@1.9.6/node_modules/@firebase/util/src/jwt.ts", "../node_modules/.pnpm/@firebase+util@1.9.6/node_modules/@firebase/util/src/obj.ts", "../node_modules/.pnpm/@firebase+util@1.9.6/node_modules/@firebase/util/src/promise.ts", "../node_modules/.pnpm/@firebase+util@1.9.6/node_modules/@firebase/util/src/query.ts", "../node_modules/.pnpm/@firebase+util@1.9.6/node_modules/@firebase/util/src/sha1.ts", "../node_modules/.pnpm/@firebase+util@1.9.6/node_modules/@firebase/util/src/subscribe.ts", "../node_modules/.pnpm/@firebase+util@1.9.6/node_modules/@firebase/util/src/validation.ts", "../node_modules/.pnpm/@firebase+util@1.9.6/node_modules/@firebase/util/src/utf8.ts", "../node_modules/.pnpm/@firebase+util@1.9.6/node_modules/@firebase/util/src/uuid.ts", "../node_modules/.pnpm/@firebase+util@1.9.6/node_modules/@firebase/util/src/exponential_backoff.ts", "../node_modules/.pnpm/@firebase+util@1.9.6/node_modules/@firebase/util/src/formatters.ts", "../node_modules/.pnpm/@firebase+util@1.9.6/node_modules/@firebase/util/src/compat.ts", "../node_modules/.pnpm/@firebase+component@0.6.7/node_modules/@firebase/component/src/component.ts", "../node_modules/.pnpm/@firebase+component@0.6.7/node_modules/@firebase/component/src/constants.ts", "../node_modules/.pnpm/@firebase+component@0.6.7/node_modules/@firebase/component/src/provider.ts", "../node_modules/.pnpm/@firebase+component@0.6.7/node_modules/@firebase/component/src/component_container.ts", "../node_modules/.pnpm/@firebase+logger@0.4.2/node_modules/@firebase/logger/src/logger.ts", "../node_modules/.pnpm/idb@7.1.1/node_modules/idb/build/wrap-idb-value.js", "../node_modules/.pnpm/idb@7.1.1/node_modules/idb/build/index.js", "../node_modules/.pnpm/@firebase+app@0.10.5/node_modules/@firebase/app/src/platformLoggerService.ts", "../node_modules/.pnpm/@firebase+app@0.10.5/node_modules/@firebase/app/src/logger.ts", "../node_modules/.pnpm/@firebase+app@0.10.5/node_modules/@firebase/app/src/constants.ts", "../node_modules/.pnpm/@firebase+app@0.10.5/node_modules/@firebase/app/src/internal.ts", "../node_modules/.pnpm/@firebase+app@0.10.5/node_modules/@firebase/app/src/errors.ts", "../node_modules/.pnpm/@firebase+app@0.10.5/node_modules/@firebase/app/src/firebaseApp.ts", "../node_modules/.pnpm/@firebase+app@0.10.5/node_modules/@firebase/app/src/firebaseServerApp.ts", "../node_modules/.pnpm/@firebase+app@0.10.5/node_modules/@firebase/app/src/api.ts", "../node_modules/.pnpm/@firebase+app@0.10.5/node_modules/@firebase/app/src/indexeddb.ts", "../node_modules/.pnpm/@firebase+app@0.10.5/node_modules/@firebase/app/src/heartbeatService.ts", "../node_modules/.pnpm/@firebase+app@0.10.5/node_modules/@firebase/app/src/registerCoreComponents.ts", "../node_modules/.pnpm/@firebase+app@0.10.5/node_modules/@firebase/app/src/index.ts", "../node_modules/.pnpm/firebase@10.12.2/node_modules/firebase/app/index.ts", "../client/option.ts", "../client/store.ts", "../node_modules/.pnpm/tslib@2.6.3/node_modules/tslib/tslib.es6.mjs", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/model/enum_maps.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/errors.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/util/log.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/util/assert.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/util/location.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/util/navigator.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/util/delay.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/util/emulator.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/util/fetch_provider.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/api/errors.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/api/index.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/platform_browser/recaptcha/recaptcha.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/api/authentication/recaptcha.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/api/account_management/account.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/util/time.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/user/id_token_result.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/user/invalidation.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/user/proactive_refresh.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/user/user_metadata.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/user/reload.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/api/authentication/token.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/user/token_manager.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/user/user_impl.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/util/instantiator.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/persistence/in_memory.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/persistence/persistence_user_manager.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/util/browser.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/util/version.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/auth/middleware.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/api/password_policy/get_password_policy.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/auth/password_policy_impl.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/auth/auth_impl.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/platform_browser/load_js.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/platform_browser/recaptcha/recaptcha_enterprise_verifier.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/auth/initialize.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/auth/emulator.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/credentials/auth_credential.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/api/account_management/email_and_password.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/api/authentication/email_and_password.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/api/authentication/email_link.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/credentials/email.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/api/authentication/idp.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/credentials/oauth.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/api/authentication/sms.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/credentials/phone.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/action_code_url.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/providers/email.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/providers/federated.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/providers/oauth.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/providers/facebook.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/providers/google.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/providers/github.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/credentials/saml.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/providers/saml.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/providers/twitter.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/api/authentication/sign_up.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/user/user_credential_impl.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/strategies/anonymous.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/mfa/mfa_error.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/util/providers.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/user/link_unlink.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/user/reauthenticate.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/strategies/credential.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/api/authentication/custom_token.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/strategies/custom_token.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/mfa/mfa_info.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/strategies/action_code_settings.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/strategies/email_and_password.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/strategies/email_link.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/api/authentication/create_auth_uri.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/strategies/email.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/api/account_management/profile.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/user/account_info.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/user/additional_user_info.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/index.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/mfa/mfa_session.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/mfa/mfa_resolver.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/api/account_management/mfa.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/mfa/mfa_user.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/persistence/index.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/platform_browser/persistence/browser.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/platform_browser/persistence/local_storage.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/platform_browser/persistence/session_storage.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/platform_browser/messagechannel/promise.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/platform_browser/messagechannel/receiver.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/util/event_id.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/platform_browser/messagechannel/sender.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/platform_browser/auth_window.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/platform_browser/util/worker.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/platform_browser/persistence/indexed_db.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/api/authentication/mfa.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/platform_browser/recaptcha/recaptcha_mock.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/platform_browser/recaptcha/recaptcha_loader.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/platform_browser/recaptcha/recaptcha_verifier.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/platform_browser/strategies/phone.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/platform_browser/providers/phone.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/util/resolver.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/strategies/idp.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/strategies/abstract_popup_redirect_operation.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/platform_browser/strategies/popup.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/strategies/redirect.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/platform_browser/strategies/redirect.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/auth/auth_event_manager.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/api/project_config/get_project_config.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/util/validate_origin.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/platform_browser/iframe/gapi.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/platform_browser/iframe/iframe.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/platform_browser/util/popup.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/util/handler.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/platform_browser/popup_redirect.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/mfa/mfa_assertion.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/platform_browser/mfa/assertions/phone.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/mfa/assertions/totp.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/auth/firebase_internal.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/core/auth/register.ts", "../node_modules/.pnpm/@firebase+auth@1.7.4_@firebase+app@0.10.5/node_modules/@firebase/auth/src/platform_browser/index.ts", "../node_modules/.pnpm/@lit+reactive-element@2.0.4/node_modules/@lit/reactive-element/src/css-tag.ts", "../node_modules/.pnpm/@lit+reactive-element@2.0.4/node_modules/@lit/reactive-element/src/reactive-element.ts", "../node_modules/.pnpm/lit-html@3.1.4/node_modules/lit-html/src/lit-html.ts", "../node_modules/.pnpm/lit-element@4.0.6/node_modules/lit-element/src/lit-element.ts", "../node_modules/.pnpm/@lit+reactive-element@2.0.4/node_modules/@lit/reactive-element/src/decorators/custom-element.ts", "../node_modules/.pnpm/@lit+reactive-element@2.0.4/node_modules/@lit/reactive-element/src/decorators/property.ts", "../node_modules/.pnpm/@lit+reactive-element@2.0.4/node_modules/@lit/reactive-element/src/decorators/state.ts", "../client/components/router.ts", "../node_modules/.pnpm/hanzi-writer@3.7.0/node_modules/hanzi-writer/src/utils.ts", "../node_modules/.pnpm/hanzi-writer@3.7.0/node_modules/hanzi-writer/src/RenderState.ts", "../node_modules/.pnpm/hanzi-writer@3.7.0/node_modules/hanzi-writer/src/geometry.ts", "../node_modules/.pnpm/hanzi-writer@3.7.0/node_modules/hanzi-writer/src/models/Stroke.ts", "../node_modules/.pnpm/hanzi-writer@3.7.0/node_modules/hanzi-writer/src/models/Character.ts", "../node_modules/.pnpm/hanzi-writer@3.7.0/node_modules/hanzi-writer/src/parseCharData.ts", "../node_modules/.pnpm/hanzi-writer@3.7.0/node_modules/hanzi-writer/src/Positioner.ts", "../node_modules/.pnpm/hanzi-writer@3.7.0/node_modules/hanzi-writer/src/strokeMatches.ts", "../node_modules/.pnpm/hanzi-writer@3.7.0/node_modules/hanzi-writer/src/models/UserStroke.ts", "../node_modules/.pnpm/hanzi-writer@3.7.0/node_modules/hanzi-writer/src/Mutation.ts", "../node_modules/.pnpm/hanzi-writer@3.7.0/node_modules/hanzi-writer/src/characterActions.ts", "../node_modules/.pnpm/hanzi-writer@3.7.0/node_modules/hanzi-writer/src/quizActions.ts", "../node_modules/.pnpm/hanzi-writer@3.7.0/node_modules/hanzi-writer/src/Quiz.ts", "../node_modules/.pnpm/hanzi-writer@3.7.0/node_modules/hanzi-writer/src/renderers/svg/svgUtils.ts", "../node_modules/.pnpm/hanzi-writer@3.7.0/node_modules/hanzi-writer/src/renderers/StrokeRendererBase.ts", "../node_modules/.pnpm/hanzi-writer@3.7.0/node_modules/hanzi-writer/src/renderers/svg/StrokeRenderer.ts", "../node_modules/.pnpm/hanzi-writer@3.7.0/node_modules/hanzi-writer/src/renderers/svg/CharacterRenderer.ts", "../node_modules/.pnpm/hanzi-writer@3.7.0/node_modules/hanzi-writer/src/renderers/svg/UserStrokeRenderer.ts", "../node_modules/.pnpm/hanzi-writer@3.7.0/node_modules/hanzi-writer/src/renderers/svg/HanziWriterRenderer.ts", "../node_modules/.pnpm/hanzi-writer@3.7.0/node_modules/hanzi-writer/src/renderers/RenderTargetBase.ts", "../node_modules/.pnpm/hanzi-writer@3.7.0/node_modules/hanzi-writer/src/renderers/svg/RenderTarget.ts", "../node_modules/.pnpm/hanzi-writer@3.7.0/node_modules/hanzi-writer/src/renderers/svg/index.ts", "../node_modules/.pnpm/hanzi-writer@3.7.0/node_modules/hanzi-writer/src/renderers/canvas/canvasUtils.ts", "../node_modules/.pnpm/hanzi-writer@3.7.0/node_modules/hanzi-writer/src/renderers/canvas/StrokeRenderer.ts", "../node_modules/.pnpm/hanzi-writer@3.7.0/node_modules/hanzi-writer/src/renderers/canvas/CharacterRenderer.ts", "../node_modules/.pnpm/hanzi-writer@3.7.0/node_modules/hanzi-writer/src/renderers/canvas/renderUserStroke.ts", "../node_modules/.pnpm/hanzi-writer@3.7.0/node_modules/hanzi-writer/src/renderers/canvas/HanziWriterRenderer.ts", "../node_modules/.pnpm/hanzi-writer@3.7.0/node_modules/hanzi-writer/src/renderers/canvas/RenderTarget.ts", "../node_modules/.pnpm/hanzi-writer@3.7.0/node_modules/hanzi-writer/src/renderers/canvas/index.ts", "../node_modules/.pnpm/hanzi-writer@3.7.0/node_modules/hanzi-writer/src/defaultCharDataLoader.ts", "../node_modules/.pnpm/hanzi-writer@3.7.0/node_modules/hanzi-writer/src/defaultOptions.ts", "../node_modules/.pnpm/hanzi-writer@3.7.0/node_modules/hanzi-writer/src/LoadingManager.ts", "../node_modules/.pnpm/hanzi-writer@3.7.0/node_modules/hanzi-writer/src/HanziWriter.ts", "../client/components/quiz.ts", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/iconStyles.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/account.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/add.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/announcement.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/apps.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/arrowDropDown.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/arrowDropUp.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/arrowRight.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/attachFile.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/attachment.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/autoAwesome.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/calendar.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/checkboxBlank.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/checkboxChecked.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/circle.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/circleBorder.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/clear.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/close.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/code.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/cookie.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/crop.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/delete.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/description.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/done.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/doubleArrowLeft.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/doubleArrowRight.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/download.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/east.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/edit.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/email.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/euro.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/favorite.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/filter.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/filterList.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/folder.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/folderZip.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/formatAlignCenter.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/formatAlignLeft.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/formatAlignRight.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/formatBold.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/formatColorText.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/formatIndentDecrease.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/formatIndentIncrease.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/formatItalic.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/formatListBulleted.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/formatListNumbered.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/formatQuote.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/formatUnderlined.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/help.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/home.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/image.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/info.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/insertLink.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/insertPhoto.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/label.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/lightbulb.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/linkOff.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/list.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/login.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/logout.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/more.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/moreVert.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/newReleases.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/notes.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/notifications.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/openWith.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/paid.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/palette.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/panTool.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/pdf.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/photoCamera.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/priorityHigh.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/questionAnswer.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/radioChecked.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/receipt.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/receiptLong.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/redo.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/refresh.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/rotateLeft.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/rotateRight.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/save.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/scale.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/search.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/settings.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/shoppingCart.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/sort.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/star.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/starBorder.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/starHalf.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/swap.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/switchLeft.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/textFields.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/thumbUp.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/thumbDown.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/timer.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/tune.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/undo.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/upload.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/videocam.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/warning.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/zoomIn.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/zoomOut.js", "../node_modules/.pnpm/@dile+icons@2.0.6/node_modules/@dile/icons/src/zoomOutMap.js", "../client/components/login.ts", "../node_modules/.pnpm/@dile+ui@2.1.4/node_modules/@dile/ui/components/card/src/DileCard.js", "../node_modules/.pnpm/@dile+ui@2.1.4/node_modules/@dile/ui/components/card/card.js", "../node_modules/.pnpm/@dile+ui@2.1.4/node_modules/@dile/ui/components/button/src/DileButton.js", "../node_modules/.pnpm/@dile+ui@2.1.4/node_modules/@dile/ui/components/button/button.js", "../node_modules/.pnpm/@dile+ui@2.1.4/node_modules/@dile/ui/components/icon/src/DileIcon.js", "../node_modules/.pnpm/@dile+ui@2.1.4/node_modules/@dile/ui/components/icon/icon.js", "../node_modules/.pnpm/@dile+ui@2.1.4/node_modules/@dile/ui/components/button/src/DileButtonIcon.js", "../node_modules/.pnpm/@dile+ui@2.1.4/node_modules/@dile/ui/components/button/button-icon.js", "../node_modules/.pnpm/@dile+ui@2.1.4/node_modules/@dile/ui/mixins/form/src/DileEmmitChange.js", "../node_modules/.pnpm/@dile+ui@2.1.4/node_modules/@dile/ui/components/input/src/message-styles.js", "../node_modules/.pnpm/@dile+ui@2.1.4/node_modules/@dile/ui/components/input/src/DileInput.js", "../node_modules/.pnpm/@dile+ui@2.1.4/node_modules/@dile/ui/components/input/input.js", "../client/index.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\n */\n\nexport const CONSTANTS = {\n  /**\n   * @define {boolean} Whether this is the client Node.js SDK.\n   */\n  NODE_CLIENT: false,\n  /**\n   * @define {boolean} Whether this is the Admin Node.js SDK.\n   */\n  NODE_ADMIN: false,\n\n  /**\n   * Firebase SDK Version\n   */\n  SDK_VERSION: '${JSCORE_VERSION}'\n};\n", "/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\n\n/**\n * Throws an error if the provided assertion is falsy\n */\nexport const assert = function (assertion: unknown, message: string): void {\n  if (!assertion) {\n    throw assertionError(message);\n  }\n};\n\n/**\n * Returns an Error object suitable for throwing.\n */\nexport const assertionError = function (message: string): Error {\n  return new Error(\n    'Firebase Database (' +\n      CONSTANTS.SDK_VERSION +\n      ') INTERNAL ASSERT FAILED: ' +\n      message\n  );\n};\n", "/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst stringToByteArray = function (str: string): number[] {\n  // TODO(user): Use native implementations if/when available\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (\n      (c & 0xfc00) === 0xd800 &&\n      i + 1 < str.length &&\n      (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00\n    ) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param bytes Array of numbers representing characters.\n * @return Stringification of the array.\n */\nconst byteArrayToString = function (bytes: number[]): string {\n  // TODO(user): Use native implementations if/when available\n  const out: string[] = [];\n  let pos = 0,\n    c = 0;\n  while (pos < bytes.length) {\n    const c1 = bytes[pos++];\n    if (c1 < 128) {\n      out[c++] = String.fromCharCode(c1);\n    } else if (c1 > 191 && c1 < 224) {\n      const c2 = bytes[pos++];\n      out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n    } else if (c1 > 239 && c1 < 365) {\n      // Surrogate Pair\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      const c4 = bytes[pos++];\n      const u =\n        (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n        0x10000;\n      out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n    } else {\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      out[c++] = String.fromCharCode(\n        ((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63)\n      );\n    }\n  }\n  return out.join('');\n};\n\ninterface Base64 {\n  byteToCharMap_: { [key: number]: string } | null;\n  charToByteMap_: { [key: string]: number } | null;\n  byteToCharMapWebSafe_: { [key: number]: string } | null;\n  charToByteMapWebSafe_: { [key: string]: number } | null;\n  ENCODED_VALS_BASE: string;\n  readonly ENCODED_VALS: string;\n  readonly ENCODED_VALS_WEBSAFE: string;\n  HAS_NATIVE_SUPPORT: boolean;\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string;\n  encodeString(input: string, webSafe?: boolean): string;\n  decodeString(input: string, webSafe: boolean): string;\n  decodeStringToByteArray(input: string, webSafe: boolean): number[];\n  init_(): void;\n}\n\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\n// Static lookup maps, lazily populated by init_()\nexport const base64: Base64 = {\n  /**\n   * Maps bytes to characters.\n   */\n  byteToCharMap_: null,\n\n  /**\n   * Maps characters to bytes.\n   */\n  charToByteMap_: null,\n\n  /**\n   * Maps bytes to websafe characters.\n   * @private\n   */\n  byteToCharMapWebSafe_: null,\n\n  /**\n   * Maps websafe characters to bytes.\n   * @private\n   */\n  charToByteMapWebSafe_: null,\n\n  /**\n   * Our default alphabet, shared between\n   * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n   */\n  ENCODED_VALS_BASE:\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n\n  /**\n   * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n   */\n  get ENCODED_VALS() {\n    return this.ENCODED_VALS_BASE + '+/=';\n  },\n\n  /**\n   * Our websafe alphabet.\n   */\n  get ENCODED_VALS_WEBSAFE() {\n    return this.ENCODED_VALS_BASE + '-_.';\n  },\n\n  /**\n   * Whether this browser supports the atob and btoa functions. This extension\n   * started at Mozilla but is now implemented by many browsers. We use the\n   * ASSUME_* variables to avoid pulling in the full useragent detection library\n   * but still allowing the standard per-browser compilations.\n   *\n   */\n  HAS_NATIVE_SUPPORT: typeof atob === 'function',\n\n  /**\n   * Base64-encode an array of bytes.\n   *\n   * @param input An array of bytes (numbers with\n   *     value in [0, 255]) to encode.\n   * @param webSafe Boolean indicating we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string {\n    if (!Array.isArray(input)) {\n      throw Error('encodeByteArray takes an array as a parameter');\n    }\n\n    this.init_();\n\n    const byteToCharMap = webSafe\n      ? this.byteToCharMapWebSafe_!\n      : this.byteToCharMap_!;\n\n    const output = [];\n\n    for (let i = 0; i < input.length; i += 3) {\n      const byte1 = input[i];\n      const haveByte2 = i + 1 < input.length;\n      const byte2 = haveByte2 ? input[i + 1] : 0;\n      const haveByte3 = i + 2 < input.length;\n      const byte3 = haveByte3 ? input[i + 2] : 0;\n\n      const outByte1 = byte1 >> 2;\n      const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n      let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\n      let outByte4 = byte3 & 0x3f;\n\n      if (!haveByte3) {\n        outByte4 = 64;\n\n        if (!haveByte2) {\n          outByte3 = 64;\n        }\n      }\n\n      output.push(\n        byteToCharMap[outByte1],\n        byteToCharMap[outByte2],\n        byteToCharMap[outByte3],\n        byteToCharMap[outByte4]\n      );\n    }\n\n    return output.join('');\n  },\n\n  /**\n   * Base64-encode a string.\n   *\n   * @param input A string to encode.\n   * @param webSafe If true, we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeString(input: string, webSafe?: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return btoa(input);\n    }\n    return this.encodeByteArray(stringToByteArray(input), webSafe);\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * @param input to decode.\n   * @param webSafe True if we should use the\n   *     alternative alphabet.\n   * @return string representing the decoded value.\n   */\n  decodeString(input: string, webSafe: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return atob(input);\n    }\n    return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * In base-64 decoding, groups of four characters are converted into three\n   * bytes.  If the encoder did not apply padding, the input length may not\n   * be a multiple of 4.\n   *\n   * In this case, the last group will have fewer than 4 characters, and\n   * padding will be inferred.  If the group has one or two characters, it decodes\n   * to one byte.  If the group has three characters, it decodes to two bytes.\n   *\n   * @param input Input to decode.\n   * @param webSafe True if we should use the web-safe alphabet.\n   * @return bytes representing the decoded value.\n   */\n  decodeStringToByteArray(input: string, webSafe: boolean): number[] {\n    this.init_();\n\n    const charToByteMap = webSafe\n      ? this.charToByteMapWebSafe_!\n      : this.charToByteMap_!;\n\n    const output: number[] = [];\n\n    for (let i = 0; i < input.length; ) {\n      const byte1 = charToByteMap[input.charAt(i++)];\n\n      const haveByte2 = i < input.length;\n      const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n      ++i;\n\n      const haveByte3 = i < input.length;\n      const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      const haveByte4 = i < input.length;\n      const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n        throw new DecodeBase64StringError();\n      }\n\n      const outByte1 = (byte1 << 2) | (byte2 >> 4);\n      output.push(outByte1);\n\n      if (byte3 !== 64) {\n        const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\n        output.push(outByte2);\n\n        if (byte4 !== 64) {\n          const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\n          output.push(outByte3);\n        }\n      }\n    }\n\n    return output;\n  },\n\n  /**\n   * Lazy static initialization function. Called before\n   * accessing any of the static map variables.\n   * @private\n   */\n  init_() {\n    if (!this.byteToCharMap_) {\n      this.byteToCharMap_ = {};\n      this.charToByteMap_ = {};\n      this.byteToCharMapWebSafe_ = {};\n      this.charToByteMapWebSafe_ = {};\n\n      // We want quick mappings back and forth, so we precompute two maps.\n      for (let i = 0; i < this.ENCODED_VALS.length; i++) {\n        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n        this.charToByteMap_[this.byteToCharMap_[i]] = i;\n        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n\n        // Be forgiving when decoding and correctly decode both encodings.\n        if (i >= this.ENCODED_VALS_BASE.length) {\n          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n        }\n      }\n    }\n  }\n};\n\n/**\n * An error encountered while decoding base64 string.\n */\nexport class DecodeBase64StringError extends Error {\n  readonly name = 'DecodeBase64StringError';\n}\n\n/**\n * URL-safe base64 encoding\n */\nexport const base64Encode = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  return base64.encodeByteArray(utf8Bytes, true);\n};\n\n/**\n * URL-safe base64 encoding (without \".\" padding in the end).\n * e.g. Used in JSON Web Token (JWT) parts.\n */\nexport const base64urlEncodeWithoutPadding = function (str: string): string {\n  // Use base64url encoding and remove padding in the end (dot characters).\n  return base64Encode(str).replace(/\\./g, '');\n};\n\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param str To be decoded\n * @return Decoded result, if possible\n */\nexport const base64Decode = function (str: string): string | null {\n  try {\n    return base64.decodeString(str, true);\n  } catch (e) {\n    console.error('base64Decode failed: ', e);\n  }\n  return null;\n};\n", "/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Do a deep-copy of basic JavaScript Objects or Arrays.\n */\nexport function deepCopy<T>(value: T): T {\n  return deepExtend(undefined, value) as T;\n}\n\n/**\n * Copy properties from source to target (recursively allows extension\n * of Objects and Arrays).  Scalar values in the target are over-written.\n * If target is undefined, an object of the appropriate type will be created\n * (and returned).\n *\n * We recursively copy all child properties of plain Objects in the source- so\n * that namespace- like dictionaries are merged.\n *\n * Note that the target can be a function, in which case the properties in\n * the source Object are copied onto it as static properties of the Function.\n *\n * Note: we don't merge __proto__ to prevent prototype pollution\n */\nexport function deepExtend(target: unknown, source: unknown): unknown {\n  if (!(source instanceof Object)) {\n    return source;\n  }\n\n  switch (source.constructor) {\n    case Date:\n      // Treat Dates like scalars; if the target date object had any child\n      // properties - they will be lost!\n      const dateValue = source as Date;\n      return new Date(dateValue.getTime());\n\n    case Object:\n      if (target === undefined) {\n        target = {};\n      }\n      break;\n    case Array:\n      // Always copy the array source and overwrite the target.\n      target = [];\n      break;\n\n    default:\n      // Not a plain Object - treat it as a scalar.\n      return source;\n  }\n\n  for (const prop in source) {\n    // use isValidKey to guard against prototype pollution. See https://snyk.io/vuln/SNYK-JS-LODASH-450202\n    if (!source.hasOwnProperty(prop) || !isValidKey(prop)) {\n      continue;\n    }\n    (target as Record<string, unknown>)[prop] = deepExtend(\n      (target as Record<string, unknown>)[prop],\n      (source as Record<string, unknown>)[prop]\n    );\n  }\n\n  return target;\n}\n\nfunction isValidKey(key: string): boolean {\n  return key !== '__proto__';\n}\n", "/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Polyfill for `globalThis` object.\n * @returns the `globalThis` object for the given environment.\n * @public\n */\nexport function getGlobal(): typeof globalThis {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('Unable to locate global object.');\n}\n", "/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { getGlobal } from './global';\n\n/**\n * Keys for experimental properties on the `FirebaseDefaults` object.\n * @public\n */\nexport type ExperimentalKey = 'authTokenSyncURL' | 'authIdTokenMaxAge';\n\n/**\n * An object that can be injected into the environment as __FIREBASE_DEFAULTS__,\n * either as a property of globalThis, a shell environment variable, or a\n * cookie.\n *\n * This object can be used to automatically configure and initialize\n * a Firebase app as well as any emulators.\n *\n * @public\n */\nexport interface FirebaseDefaults {\n  config?: Record<string, string>;\n  emulatorHosts?: Record<string, string>;\n  _authTokenSyncURL?: string;\n  _authIdTokenMaxAge?: number;\n  /**\n   * Override Firebase's runtime environment detection and\n   * force the SDK to act as if it were in the specified environment.\n   */\n  forceEnvironment?: 'browser' | 'node';\n  [key: string]: unknown;\n}\n\ndeclare global {\n  // Need `var` for this to work.\n  // eslint-disable-next-line no-var\n  var __FIREBASE_DEFAULTS__: FirebaseDefaults | undefined;\n}\n\nconst getDefaultsFromGlobal = (): FirebaseDefaults | undefined =>\n  getGlobal().__FIREBASE_DEFAULTS__;\n\n/**\n * Attempt to read defaults from a JSON string provided to\n * process(.)env(.)__FIREBASE_DEFAULTS__ or a JSON file whose path is in\n * process(.)env(.)__FIREBASE_DEFAULTS_PATH__\n * The dots are in parens because certain compilers (Vite?) cannot\n * handle seeing that variable in comments.\n * See https://github.com/firebase/firebase-js-sdk/issues/6838\n */\nconst getDefaultsFromEnvVariable = (): FirebaseDefaults | undefined => {\n  if (typeof process === 'undefined' || typeof process.env === 'undefined') {\n    return;\n  }\n  const defaultsJsonString = process.env.__FIREBASE_DEFAULTS__;\n  if (defaultsJsonString) {\n    return JSON.parse(defaultsJsonString);\n  }\n};\n\nconst getDefaultsFromCookie = (): FirebaseDefaults | undefined => {\n  if (typeof document === 'undefined') {\n    return;\n  }\n  let match;\n  try {\n    match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);\n  } catch (e) {\n    // Some environments such as Angular Universal SSR have a\n    // `document` object but error on accessing `document.cookie`.\n    return;\n  }\n  const decoded = match && base64Decode(match[1]);\n  return decoded && JSON.parse(decoded);\n};\n\n/**\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\n * (1) if such an object exists as a property of `globalThis`\n * (2) if such an object was provided on a shell environment variable\n * (3) if such an object exists in a cookie\n * @public\n */\nexport const getDefaults = (): FirebaseDefaults | undefined => {\n  try {\n    return (\n      getDefaultsFromGlobal() ||\n      getDefaultsFromEnvVariable() ||\n      getDefaultsFromCookie()\n    );\n  } catch (e) {\n    /**\n     * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due\n     * to any environment case we have not accounted for. Log to\n     * info instead of swallowing so we can find these unknown cases\n     * and add paths for them if needed.\n     */\n    console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);\n    return;\n  }\n};\n\n/**\n * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available\n * @public\n */\nexport const getDefaultEmulatorHost = (\n  productName: string\n): string | undefined => getDefaults()?.emulatorHosts?.[productName];\n\n/**\n * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a pair of hostname and port like `[\"::1\", 4000]` if available\n * @public\n */\nexport const getDefaultEmulatorHostnameAndPort = (\n  productName: string\n): [hostname: string, port: number] | undefined => {\n  const host = getDefaultEmulatorHost(productName);\n  if (!host) {\n    return undefined;\n  }\n  const separatorIndex = host.lastIndexOf(':'); // Finding the last since IPv6 addr also has colons.\n  if (separatorIndex <= 0 || separatorIndex + 1 === host.length) {\n    throw new Error(`Invalid host ${host} with no separate hostname and port!`);\n  }\n  // eslint-disable-next-line no-restricted-globals\n  const port = parseInt(host.substring(separatorIndex + 1), 10);\n  if (host[0] === '[') {\n    // Bracket-quoted `[ipv6addr]:port` => return \"ipv6addr\" (without brackets).\n    return [host.substring(1, separatorIndex - 1), port];\n  } else {\n    return [host.substring(0, separatorIndex), port];\n  }\n};\n\n/**\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\n * @public\n */\nexport const getDefaultAppConfig = (): Record<string, string> | undefined =>\n  getDefaults()?.config;\n\n/**\n * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties\n * prefixed by \"_\")\n * @public\n */\nexport const getExperimentalSetting = <T extends ExperimentalKey>(\n  name: T\n): FirebaseDefaults[`_${T}`] =>\n  getDefaults()?.[`_${name}`] as FirebaseDefaults[`_${T}`];\n", "/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<R> {\n  promise: Promise<R>;\n  reject: (value?: unknown) => void = () => {};\n  resolve: (value?: unknown) => void = () => {};\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve as (value?: unknown) => void;\n      this.reject = reject as (value?: unknown) => void;\n    });\n  }\n\n  /**\n   * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\n   * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\n   * and returns a node-style callback which will resolve or reject the Deferred's promise.\n   */\n  wrapCallback(\n    callback?: (error?: unknown, value?: unknown) => void\n  ): (error: unknown, value?: unknown) => void {\n    return (error, value?) => {\n      if (error) {\n        this.reject(error);\n      } else {\n        this.resolve(value);\n      }\n      if (typeof callback === 'function') {\n        // Attaching noop handler just in case developer wasn't expecting\n        // promises\n        this.promise.catch(() => {});\n\n        // Some of our callbacks don't expect a value and our own tests\n        // assert that the parameter length is 1\n        if (callback.length === 1) {\n          callback(error);\n        } else {\n          callback(error, value);\n        }\n      }\n    };\n  }\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64urlEncodeWithoutPadding } from './crypt';\n\n// Firebase Auth tokens contain snake_case claims following the JWT standard / convention.\n/* eslint-disable camelcase */\n\nexport type FirebaseSignInProvider =\n  | 'custom'\n  | 'email'\n  | 'password'\n  | 'phone'\n  | 'anonymous'\n  | 'google.com'\n  | 'facebook.com'\n  | 'github.com'\n  | 'twitter.com'\n  | 'microsoft.com'\n  | 'apple.com';\n\ninterface FirebaseIdToken {\n  // Always set to https://securetoken.google.com/PROJECT_ID\n  iss: string;\n\n  // Always set to PROJECT_ID\n  aud: string;\n\n  // The user's unique ID\n  sub: string;\n\n  // The token issue time, in seconds since epoch\n  iat: number;\n\n  // The token expiry time, normally 'iat' + 3600\n  exp: number;\n\n  // The user's unique ID. Must be equal to 'sub'\n  user_id: string;\n\n  // The time the user authenticated, normally 'iat'\n  auth_time: number;\n\n  // The sign in provider, only set when the provider is 'anonymous'\n  provider_id?: 'anonymous';\n\n  // The user's primary email\n  email?: string;\n\n  // The user's email verification status\n  email_verified?: boolean;\n\n  // The user's primary phone number\n  phone_number?: string;\n\n  // The user's display name\n  name?: string;\n\n  // The user's profile photo URL\n  picture?: string;\n\n  // Information on all identities linked to this user\n  firebase: {\n    // The primary sign-in provider\n    sign_in_provider: FirebaseSignInProvider;\n\n    // A map of providers to the user's list of unique identifiers from\n    // each provider\n    identities?: { [provider in FirebaseSignInProvider]?: string[] };\n  };\n\n  // Custom claims set by the developer\n  [claim: string]: unknown;\n\n  uid?: never; // Try to catch a common mistake of \"uid\" (should be \"sub\" instead).\n}\n\nexport type EmulatorMockTokenOptions = ({ user_id: string } | { sub: string }) &\n  Partial<FirebaseIdToken>;\n\nexport function createMockUserToken(\n  token: EmulatorMockTokenOptions,\n  projectId?: string\n): string {\n  if (token.uid) {\n    throw new Error(\n      'The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.'\n    );\n  }\n  // Unsecured JWTs use \"none\" as the algorithm.\n  const header = {\n    alg: 'none',\n    type: 'JWT'\n  };\n\n  const project = projectId || 'demo-project';\n  const iat = token.iat || 0;\n  const sub = token.sub || token.user_id;\n  if (!sub) {\n    throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\n  }\n\n  const payload: FirebaseIdToken = {\n    // Set all required fields to decent defaults\n    iss: `https://securetoken.google.com/${project}`,\n    aud: project,\n    iat,\n    exp: iat + 3600,\n    auth_time: iat,\n    sub,\n    user_id: sub,\n    firebase: {\n      sign_in_provider: 'custom',\n      identities: {}\n    },\n\n    // Override with user options\n    ...token\n  };\n\n  // Unsecured JWTs use the empty string as a signature.\n  const signature = '';\n  return [\n    base64urlEncodeWithoutPadding(JSON.stringify(header)),\n    base64urlEncodeWithoutPadding(JSON.stringify(payload)),\n    signature\n  ].join('.');\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\nimport { getDefaults } from './defaults';\n\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return user agent string\n */\nexport function getUA(): string {\n  if (\n    typeof navigator !== 'undefined' &&\n    typeof navigator['userAgent'] === 'string'\n  ) {\n    return navigator['userAgent'];\n  } else {\n    return '';\n  }\n}\n\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\n * wait for a callback.\n */\nexport function isMobileCordova(): boolean {\n  return (\n    typeof window !== 'undefined' &&\n    // @ts-ignore Setting up an broadly applicable index signature for Window\n    // just to deal with this case would probably be a bad idea.\n    !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA())\n  );\n}\n\n/**\n * Detect Node.js.\n *\n * @return true if Node.js environment is detected or specified.\n */\n// Node detection logic from: https://github.com/iliakan/detect-node/\nexport function isNode(): boolean {\n  const forceEnvironment = getDefaults()?.forceEnvironment;\n  if (forceEnvironment === 'node') {\n    return true;\n  } else if (forceEnvironment === 'browser') {\n    return false;\n  }\n\n  try {\n    return (\n      Object.prototype.toString.call(global.process) === '[object process]'\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Detect Browser Environment\n */\nexport function isBrowser(): boolean {\n  return typeof self === 'object' && self.self === self;\n}\n\n/**\n * Detect browser extensions (Chrome and Firefox at least).\n */\ninterface BrowserRuntime {\n  id?: unknown;\n}\ndeclare const chrome: { runtime?: BrowserRuntime };\ndeclare const browser: { runtime?: BrowserRuntime };\nexport function isBrowserExtension(): boolean {\n  const runtime =\n    typeof chrome === 'object'\n      ? chrome.runtime\n      : typeof browser === 'object'\n      ? browser.runtime\n      : undefined;\n  return typeof runtime === 'object' && runtime.id !== undefined;\n}\n\n/**\n * Detect React Native.\n *\n * @return true if ReactNative environment is detected.\n */\nexport function isReactNative(): boolean {\n  return (\n    typeof navigator === 'object' && navigator['product'] === 'ReactNative'\n  );\n}\n\n/** Detects Electron apps. */\nexport function isElectron(): boolean {\n  return getUA().indexOf('Electron/') >= 0;\n}\n\n/** Detects Internet Explorer. */\nexport function isIE(): boolean {\n  const ua = getUA();\n  return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n}\n\n/** Detects Universal Windows Platform apps. */\nexport function isUWP(): boolean {\n  return getUA().indexOf('MSAppHost/') >= 0;\n}\n\n/**\n * Detect whether the current SDK build is the Node version.\n *\n * @return true if it's the Node SDK build.\n */\nexport function isNodeSdk(): boolean {\n  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\n}\n\n/** Returns true if we are running in Safari. */\nexport function isSafari(): boolean {\n  return (\n    !isNode() &&\n    !!navigator.userAgent &&\n    navigator.userAgent.includes('Safari') &&\n    !navigator.userAgent.includes('Chrome')\n  );\n}\n\n/**\n * This method checks if indexedDB is supported by current browser/service worker context\n * @return true if indexedDB is supported by current browser/service worker context\n */\nexport function isIndexedDBAvailable(): boolean {\n  try {\n    return typeof indexedDB === 'object';\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\n * if errors occur during the database open operation.\n *\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\n * private browsing)\n */\nexport function validateIndexedDBOpenable(): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      let preExist: boolean = true;\n      const DB_CHECK_NAME =\n        'validate-browser-context-for-indexeddb-analytics-module';\n      const request = self.indexedDB.open(DB_CHECK_NAME);\n      request.onsuccess = () => {\n        request.result.close();\n        // delete database only when it doesn't pre-exist\n        if (!preExist) {\n          self.indexedDB.deleteDatabase(DB_CHECK_NAME);\n        }\n        resolve(true);\n      };\n      request.onupgradeneeded = () => {\n        preExist = false;\n      };\n\n      request.onerror = () => {\n        reject(request.error?.message || '');\n      };\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\n/**\n *\n * This method checks whether cookie is enabled within current browser\n * @return true if cookie is enabled within current browser\n */\nexport function areCookiesEnabled(): boolean {\n  if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\n    return false;\n  }\n  return true;\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  /** The custom name for all FirebaseErrors. */\n  readonly name: string = ERROR_NAME;\n\n  constructor(\n    /** The error code for this error. */\n    readonly code: string,\n    message: string,\n    /** Custom data for this error. */\n    public customData?: Record<string, unknown>\n  ) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n", "/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Evaluates a JSON string into a javascript object.\n *\n * @param {string} str A string containing JSON.\n * @return {*} The javascript object representing the specified JSON.\n */\nexport function jsonEval(str: string): unknown {\n  return JSON.parse(str);\n}\n\n/**\n * Returns JSON representing a javascript object.\n * @param {*} data Javascript object to be stringified.\n * @return {string} The JSON contents of the object.\n */\nexport function stringify(data: unknown): string {\n  return JSON.stringify(data);\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { jsonEval } from './json';\n\ninterface Claims {\n  [key: string]: {};\n}\n\ninterface DecodedToken {\n  header: object;\n  claims: Claims;\n  data: object;\n  signature: string;\n}\n\n/**\n * Decodes a Firebase auth. token into constituent parts.\n *\n * Notes:\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const decode = function (token: string): DecodedToken {\n  let header = {},\n    claims: Claims = {},\n    data = {},\n    signature = '';\n\n  try {\n    const parts = token.split('.');\n    header = jsonEval(base64Decode(parts[0]) || '') as object;\n    claims = jsonEval(base64Decode(parts[1]) || '') as Claims;\n    signature = parts[2];\n    data = claims['d'] || {};\n    delete claims['d'];\n  } catch (e) {}\n\n  return {\n    header,\n    claims,\n    data,\n    signature\n  };\n};\n\ninterface DecodedToken {\n  header: object;\n  claims: Claims;\n  data: object;\n  signature: string;\n}\n\n/**\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isValidTimestamp = function (token: string): boolean {\n  const claims: Claims = decode(token).claims;\n  const now: number = Math.floor(new Date().getTime() / 1000);\n  let validSince: number = 0,\n    validUntil: number = 0;\n\n  if (typeof claims === 'object') {\n    if (claims.hasOwnProperty('nbf')) {\n      validSince = claims['nbf'] as number;\n    } else if (claims.hasOwnProperty('iat')) {\n      validSince = claims['iat'] as number;\n    }\n\n    if (claims.hasOwnProperty('exp')) {\n      validUntil = claims['exp'] as number;\n    } else {\n      // token will expire after 24h by default\n      validUntil = validSince + 86400;\n    }\n  }\n\n  return (\n    !!now &&\n    !!validSince &&\n    !!validUntil &&\n    now >= validSince &&\n    now <= validUntil\n  );\n};\n\n/**\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\n *\n * Notes:\n * - May return null if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const issuedAtTime = function (token: string): number | null {\n  const claims: Claims = decode(token).claims;\n  if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\n    return claims['iat'] as number;\n  }\n  return null;\n};\n\n/**\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isValidFormat = function (token: string): boolean {\n  const decoded = decode(token),\n    claims = decoded.claims;\n\n  return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');\n};\n\n/**\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isAdmin = function (token: string): boolean {\n  const claims: Claims = decode(token).claims;\n  return typeof claims === 'object' && claims['admin'] === true;\n};\n", "/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function contains<T extends object>(obj: T, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function safeGet<T extends object, K extends keyof T>(\n  obj: T,\n  key: K\n): T[K] | undefined {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\nexport function isEmpty(obj: object): obj is {} {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function map<K extends string, V, U>(\n  obj: { [key in K]: V },\n  fn: (value: V, key: K, obj: { [key in K]: V }) => U,\n  contextObj?: unknown\n): { [key in K]: U } {\n  const res: Partial<{ [key in K]: U }> = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      res[key] = fn.call(contextObj, obj[key], key, obj);\n    }\n  }\n  return res as { [key in K]: U };\n}\n\n/**\n * Deep equal two objects. Support Arrays and Objects.\n */\nexport function deepEqual(a: object, b: object): boolean {\n  if (a === b) {\n    return true;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  for (const k of aKeys) {\n    if (!bKeys.includes(k)) {\n      return false;\n    }\n\n    const aProp = (a as Record<string, unknown>)[k];\n    const bProp = (b as Record<string, unknown>)[k];\n    if (isObject(aProp) && isObject(bProp)) {\n      if (!deepEqual(aProp, bProp)) {\n        return false;\n      }\n    } else if (aProp !== bProp) {\n      return false;\n    }\n  }\n\n  for (const k of bKeys) {\n    if (!aKeys.includes(k)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isObject(thing: unknown): thing is object {\n  return thing !== null && typeof thing === 'object';\n}\n", "/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from './deferred';\n\n/**\n * Rejects if the given promise doesn't resolve in timeInMS milliseconds.\n * @internal\n */\nexport function promiseWithTimeout<T>(\n  promise: Promise<T>,\n  timeInMS = 2000\n): Promise<T> {\n  const deferredPromise = new Deferred<T>();\n  setTimeout(() => deferredPromise.reject('timeout!'), timeInMS);\n  promise.then(deferredPromise.resolve, deferredPromise.reject);\n  return deferredPromise.promise;\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\n * params object (e.g. {arg: 'val', arg2: 'val2'})\n * Note: You must prepend it with ? when adding it to a URL.\n */\nexport function querystring(querystringParams: {\n  [key: string]: string | number;\n}): string {\n  const params = [];\n  for (const [key, value] of Object.entries(querystringParams)) {\n    if (Array.isArray(value)) {\n      value.forEach(arrayVal => {\n        params.push(\n          encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal)\n        );\n      });\n    } else {\n      params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n    }\n  }\n  return params.length ? '&' + params.join('&') : '';\n}\n\n/**\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\n * (e.g. {arg: 'val', arg2: 'val2'})\n */\nexport function querystringDecode(querystring: string): Record<string, string> {\n  const obj: Record<string, string> = {};\n  const tokens = querystring.replace(/^\\?/, '').split('&');\n\n  tokens.forEach(token => {\n    if (token) {\n      const [key, value] = token.split('=');\n      obj[decodeURIComponent(key)] = decodeURIComponent(value);\n    }\n  });\n  return obj;\n}\n\n/**\n * Extract the query string part of a URL, including the leading question mark (if present).\n */\nexport function extractQuerystring(url: string): string {\n  const queryStart = url.indexOf('?');\n  if (!queryStart) {\n    return '';\n  }\n  const fragmentStart = url.indexOf('#', queryStart);\n  return url.substring(\n    queryStart,\n    fragmentStart > 0 ? fragmentStart : undefined\n  );\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview SHA-1 cryptographic hash.\n * Variable names follow the notation in FIPS PUB 180-3:\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\n *\n * Usage:\n *   var sha1 = new sha1();\n *   sha1.update(bytes);\n *   var hash = sha1.digest();\n *\n * Performance:\n *   Chrome 23:   ~400 Mbit/s\n *   Firefox 16:  ~250 Mbit/s\n *\n */\n\n/**\n * SHA-1 cryptographic hash constructor.\n *\n * The properties declared here are discussed in the above algorithm document.\n * @constructor\n * @final\n * @struct\n */\nexport class Sha1 {\n  /**\n   * Holds the previous values of accumulated variables a-e in the compress_\n   * function.\n   * @private\n   */\n  private chain_: number[] = [];\n\n  /**\n   * A buffer holding the partially computed hash result.\n   * @private\n   */\n  private buf_: number[] = [];\n\n  /**\n   * An array of 80 bytes, each a part of the message to be hashed.  Referred to\n   * as the message schedule in the docs.\n   * @private\n   */\n  private W_: number[] = [];\n\n  /**\n   * Contains data needed to pad messages less than 64 bytes.\n   * @private\n   */\n  private pad_: number[] = [];\n\n  /**\n   * @private {number}\n   */\n  private inbuf_: number = 0;\n\n  /**\n   * @private {number}\n   */\n  private total_: number = 0;\n\n  blockSize: number;\n\n  constructor() {\n    this.blockSize = 512 / 8;\n\n    this.pad_[0] = 128;\n    for (let i = 1; i < this.blockSize; ++i) {\n      this.pad_[i] = 0;\n    }\n\n    this.reset();\n  }\n\n  reset(): void {\n    this.chain_[0] = 0x67452301;\n    this.chain_[1] = 0xefcdab89;\n    this.chain_[2] = 0x98badcfe;\n    this.chain_[3] = 0x10325476;\n    this.chain_[4] = 0xc3d2e1f0;\n\n    this.inbuf_ = 0;\n    this.total_ = 0;\n  }\n\n  /**\n   * Internal compress helper function.\n   * @param buf Block to compress.\n   * @param offset Offset of the block in the buffer.\n   * @private\n   */\n  compress_(buf: number[] | Uint8Array | string, offset?: number): void {\n    if (!offset) {\n      offset = 0;\n    }\n\n    const W = this.W_;\n\n    // get 16 big endian words\n    if (typeof buf === 'string') {\n      for (let i = 0; i < 16; i++) {\n        // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\n        // have a bug that turns the post-increment ++ operator into pre-increment\n        // during JIT compilation.  We have code that depends heavily on SHA-1 for\n        // correctness and which is affected by this bug, so I've removed all uses\n        // of post-increment ++ in which the result value is used.  We can revert\n        // this change once the Safari bug\n        // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\n        // most clients have been updated.\n        W[i] =\n          (buf.charCodeAt(offset) << 24) |\n          (buf.charCodeAt(offset + 1) << 16) |\n          (buf.charCodeAt(offset + 2) << 8) |\n          buf.charCodeAt(offset + 3);\n        offset += 4;\n      }\n    } else {\n      for (let i = 0; i < 16; i++) {\n        W[i] =\n          (buf[offset] << 24) |\n          (buf[offset + 1] << 16) |\n          (buf[offset + 2] << 8) |\n          buf[offset + 3];\n        offset += 4;\n      }\n    }\n\n    // expand to 80 words\n    for (let i = 16; i < 80; i++) {\n      const t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n      W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\n    }\n\n    let a = this.chain_[0];\n    let b = this.chain_[1];\n    let c = this.chain_[2];\n    let d = this.chain_[3];\n    let e = this.chain_[4];\n    let f, k;\n\n    // TODO(user): Try to unroll this loop to speed up the computation.\n    for (let i = 0; i < 80; i++) {\n      if (i < 40) {\n        if (i < 20) {\n          f = d ^ (b & (c ^ d));\n          k = 0x5a827999;\n        } else {\n          f = b ^ c ^ d;\n          k = 0x6ed9eba1;\n        }\n      } else {\n        if (i < 60) {\n          f = (b & c) | (d & (b | c));\n          k = 0x8f1bbcdc;\n        } else {\n          f = b ^ c ^ d;\n          k = 0xca62c1d6;\n        }\n      }\n\n      const t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\n      e = d;\n      d = c;\n      c = ((b << 30) | (b >>> 2)) & 0xffffffff;\n      b = a;\n      a = t;\n    }\n\n    this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\n    this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\n    this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\n    this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\n    this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\n  }\n\n  update(bytes?: number[] | Uint8Array | string, length?: number): void {\n    // TODO(johnlenz): tighten the function signature and remove this check\n    if (bytes == null) {\n      return;\n    }\n\n    if (length === undefined) {\n      length = bytes.length;\n    }\n\n    const lengthMinusBlock = length - this.blockSize;\n    let n = 0;\n    // Using local instead of member variables gives ~5% speedup on Firefox 16.\n    const buf = this.buf_;\n    let inbuf = this.inbuf_;\n\n    // The outer while loop should execute at most twice.\n    while (n < length) {\n      // When we have no data in the block to top up, we can directly process the\n      // input buffer (assuming it contains sufficient data). This gives ~25%\n      // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\n      // the data is provided in large chunks (or in multiples of 64 bytes).\n      if (inbuf === 0) {\n        while (n <= lengthMinusBlock) {\n          this.compress_(bytes, n);\n          n += this.blockSize;\n        }\n      }\n\n      if (typeof bytes === 'string') {\n        while (n < length) {\n          buf[inbuf] = bytes.charCodeAt(n);\n          ++inbuf;\n          ++n;\n          if (inbuf === this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      } else {\n        while (n < length) {\n          buf[inbuf] = bytes[n];\n          ++inbuf;\n          ++n;\n          if (inbuf === this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      }\n    }\n\n    this.inbuf_ = inbuf;\n    this.total_ += length;\n  }\n\n  /** @override */\n  digest(): number[] {\n    const digest: number[] = [];\n    let totalBits = this.total_ * 8;\n\n    // Add pad 0x80 0x00*.\n    if (this.inbuf_ < 56) {\n      this.update(this.pad_, 56 - this.inbuf_);\n    } else {\n      this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\n    }\n\n    // Add # bits.\n    for (let i = this.blockSize - 1; i >= 56; i--) {\n      this.buf_[i] = totalBits & 255;\n      totalBits /= 256; // Don't use bit-shifting here!\n    }\n\n    this.compress_(this.buf_);\n\n    let n = 0;\n    for (let i = 0; i < 5; i++) {\n      for (let j = 24; j >= 0; j -= 8) {\n        digest[n] = (this.chain_[i] >> j) & 255;\n        ++n;\n      }\n    }\n    return digest;\n  }\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport type NextFn<T> = (value: T) => void;\nexport type ErrorFn = (error: Error) => void;\nexport type CompleteFn = () => void;\n\nexport interface Observer<T> {\n  // Called once for each value in a stream of values.\n  next: NextFn<T>;\n\n  // A stream terminates by a single call to EITHER error() or complete().\n  error: ErrorFn;\n\n  // No events will be sent to next() once complete() is called.\n  complete: CompleteFn;\n}\n\nexport type PartialObserver<T> = Partial<Observer<T>>;\n\n// TODO: Support also Unsubscribe.unsubscribe?\nexport type Unsubscribe = () => void;\n\n/**\n * The Subscribe interface has two forms - passing the inline function\n * callbacks, or a object interface with callback properties.\n */\nexport interface Subscribe<T> {\n  (next?: NextFn<T>, error?: ErrorFn, complete?: CompleteFn): Unsubscribe;\n  (observer: PartialObserver<T>): Unsubscribe;\n}\n\nexport interface Observable<T> {\n  // Subscribe method\n  subscribe: Subscribe<T>;\n}\n\nexport type Executor<T> = (observer: Observer<T>) => void;\n\n/**\n * Helper to make a Subscribe function (just like Promise helps make a\n * Thenable).\n *\n * @param executor Function which can make calls to a single Observer\n *     as a proxy.\n * @param onNoObservers Callback when count of Observers goes to zero.\n */\nexport function createSubscribe<T>(\n  executor: Executor<T>,\n  onNoObservers?: Executor<T>\n): Subscribe<T> {\n  const proxy = new ObserverProxy<T>(executor, onNoObservers);\n  return proxy.subscribe.bind(proxy);\n}\n\n/**\n * Implement fan-out for any number of Observers attached via a subscribe\n * function.\n */\nclass ObserverProxy<T> implements Observer<T> {\n  private observers: Array<Observer<T>> | undefined = [];\n  private unsubscribes: Unsubscribe[] = [];\n  private onNoObservers: Executor<T> | undefined;\n  private observerCount = 0;\n  // Micro-task scheduling by calling task.then().\n  private task = Promise.resolve();\n  private finalized = false;\n  private finalError?: Error;\n\n  /**\n   * @param executor Function which can make calls to a single Observer\n   *     as a proxy.\n   * @param onNoObservers Callback when count of Observers goes to zero.\n   */\n  constructor(executor: Executor<T>, onNoObservers?: Executor<T>) {\n    this.onNoObservers = onNoObservers;\n    // Call the executor asynchronously so subscribers that are called\n    // synchronously after the creation of the subscribe function\n    // can still receive the very first value generated in the executor.\n    this.task\n      .then(() => {\n        executor(this);\n      })\n      .catch(e => {\n        this.error(e);\n      });\n  }\n\n  next(value: T): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.next(value);\n    });\n  }\n\n  error(error: Error): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.error(error);\n    });\n    this.close(error);\n  }\n\n  complete(): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.complete();\n    });\n    this.close();\n  }\n\n  /**\n   * Subscribe function that can be used to add an Observer to the fan-out list.\n   *\n   * - We require that no event is sent to a subscriber sychronously to their\n   *   call to subscribe().\n   */\n  subscribe(\n    nextOrObserver?: NextFn<T> | PartialObserver<T>,\n    error?: ErrorFn,\n    complete?: CompleteFn\n  ): Unsubscribe {\n    let observer: Observer<T>;\n\n    if (\n      nextOrObserver === undefined &&\n      error === undefined &&\n      complete === undefined\n    ) {\n      throw new Error('Missing Observer.');\n    }\n\n    // Assemble an Observer object when passed as callback functions.\n    if (\n      implementsAnyMethods(nextOrObserver as { [key: string]: unknown }, [\n        'next',\n        'error',\n        'complete'\n      ])\n    ) {\n      observer = nextOrObserver as Observer<T>;\n    } else {\n      observer = {\n        next: nextOrObserver as NextFn<T>,\n        error,\n        complete\n      } as Observer<T>;\n    }\n\n    if (observer.next === undefined) {\n      observer.next = noop as NextFn<T>;\n    }\n    if (observer.error === undefined) {\n      observer.error = noop as ErrorFn;\n    }\n    if (observer.complete === undefined) {\n      observer.complete = noop as CompleteFn;\n    }\n\n    const unsub = this.unsubscribeOne.bind(this, this.observers!.length);\n\n    // Attempt to subscribe to a terminated Observable - we\n    // just respond to the Observer with the final error or complete\n    // event.\n    if (this.finalized) {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.task.then(() => {\n        try {\n          if (this.finalError) {\n            observer.error(this.finalError);\n          } else {\n            observer.complete();\n          }\n        } catch (e) {\n          // nothing\n        }\n        return;\n      });\n    }\n\n    this.observers!.push(observer as Observer<T>);\n\n    return unsub;\n  }\n\n  // Unsubscribe is synchronous - we guarantee that no events are sent to\n  // any unsubscribed Observer.\n  private unsubscribeOne(i: number): void {\n    if (this.observers === undefined || this.observers[i] === undefined) {\n      return;\n    }\n\n    delete this.observers[i];\n\n    this.observerCount -= 1;\n    if (this.observerCount === 0 && this.onNoObservers !== undefined) {\n      this.onNoObservers(this);\n    }\n  }\n\n  private forEachObserver(fn: (observer: Observer<T>) => void): void {\n    if (this.finalized) {\n      // Already closed by previous event....just eat the additional values.\n      return;\n    }\n\n    // Since sendOne calls asynchronously - there is no chance that\n    // this.observers will become undefined.\n    for (let i = 0; i < this.observers!.length; i++) {\n      this.sendOne(i, fn);\n    }\n  }\n\n  // Call the Observer via one of it's callback function. We are careful to\n  // confirm that the observe has not been unsubscribed since this asynchronous\n  // function had been queued.\n  private sendOne(i: number, fn: (observer: Observer<T>) => void): void {\n    // Execute the callback asynchronously\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      if (this.observers !== undefined && this.observers[i] !== undefined) {\n        try {\n          fn(this.observers[i]);\n        } catch (e) {\n          // Ignore exceptions raised in Observers or missing methods of an\n          // Observer.\n          // Log error to console. b/31404806\n          if (typeof console !== 'undefined' && console.error) {\n            console.error(e);\n          }\n        }\n      }\n    });\n  }\n\n  private close(err?: Error): void {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    if (err !== undefined) {\n      this.finalError = err;\n    }\n    // Proxy is no longer needed - garbage collect references\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      this.observers = undefined;\n      this.onNoObservers = undefined;\n    });\n  }\n}\n\n/** Turn synchronous function into one called asynchronously. */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function async(fn: Function, onError?: ErrorFn): Function {\n  return (...args: unknown[]) => {\n    Promise.resolve(true)\n      .then(() => {\n        fn(...args);\n      })\n      .catch((error: Error) => {\n        if (onError) {\n          onError(error);\n        }\n      });\n  };\n}\n\n/**\n * Return true if the object passed in implements any of the named methods.\n */\nfunction implementsAnyMethods(\n  obj: { [key: string]: unknown },\n  methods: string[]\n): boolean {\n  if (typeof obj !== 'object' || obj === null) {\n    return false;\n  }\n\n  for (const method of methods) {\n    if (method in obj && typeof obj[method] === 'function') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction noop(): void {\n  // do nothing\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Check to make sure the appropriate number of arguments are provided for a public function.\n * Throws an error if it fails.\n *\n * @param fnName The function name\n * @param minCount The minimum number of arguments to allow for the function call\n * @param maxCount The maximum number of argument to allow for the function call\n * @param argCount The actual number of arguments provided.\n */\nexport const validateArgCount = function (\n  fnName: string,\n  minCount: number,\n  maxCount: number,\n  argCount: number\n): void {\n  let argError;\n  if (argCount < minCount) {\n    argError = 'at least ' + minCount;\n  } else if (argCount > maxCount) {\n    argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\n  }\n  if (argError) {\n    const error =\n      fnName +\n      ' failed: Was called with ' +\n      argCount +\n      (argCount === 1 ? ' argument.' : ' arguments.') +\n      ' Expects ' +\n      argError +\n      '.';\n    throw new Error(error);\n  }\n};\n\n/**\n * Generates a string to prefix an error message about failed argument validation\n *\n * @param fnName The function name\n * @param argName The name of the argument\n * @return The prefix to add to the error thrown for validation.\n */\nexport function errorPrefix(fnName: string, argName: string): string {\n  return `${fnName} failed: ${argName} argument `;\n}\n\n/**\n * @param fnName\n * @param argumentNumber\n * @param namespace\n * @param optional\n */\nexport function validateNamespace(\n  fnName: string,\n  namespace: string,\n  optional: boolean\n): void {\n  if (optional && !namespace) {\n    return;\n  }\n  if (typeof namespace !== 'string') {\n    //TODO: I should do more validation here. We only allow certain chars in namespaces.\n    throw new Error(\n      errorPrefix(fnName, 'namespace') + 'must be a valid firebase namespace.'\n    );\n  }\n}\n\nexport function validateCallback(\n  fnName: string,\n  argumentName: string,\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  callback: Function,\n  optional: boolean\n): void {\n  if (optional && !callback) {\n    return;\n  }\n  if (typeof callback !== 'function') {\n    throw new Error(\n      errorPrefix(fnName, argumentName) + 'must be a valid function.'\n    );\n  }\n}\n\nexport function validateContextObject(\n  fnName: string,\n  argumentName: string,\n  context: unknown,\n  optional: boolean\n): void {\n  if (optional && !context) {\n    return;\n  }\n  if (typeof context !== 'object' || context === null) {\n    throw new Error(\n      errorPrefix(fnName, argumentName) + 'must be a valid context object.'\n    );\n  }\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from './assert';\n\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\n// so it's been modified.\n\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\n// pair).\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\n\n/**\n * @param {string} str\n * @return {Array}\n */\nexport const stringToByteArray = function (str: string): number[] {\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n\n    // Is this the lead surrogate in a surrogate pair?\n    if (c >= 0xd800 && c <= 0xdbff) {\n      const high = c - 0xd800; // the high 10 bits.\n      i++;\n      assert(i < str.length, 'Surrogate pair missing trail surrogate.');\n      const low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\n      c = 0x10000 + (high << 10) + low;\n    }\n\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (c < 65536) {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Calculate length without actually converting; useful for doing cheaper validation.\n * @param {string} str\n * @return {number}\n */\nexport const stringLength = function (str: string): number {\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    const c = str.charCodeAt(i);\n    if (c < 128) {\n      p++;\n    } else if (c < 2048) {\n      p += 2;\n    } else if (c >= 0xd800 && c <= 0xdbff) {\n      // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\n      p += 4;\n      i++; // skip trail surrogate.\n    } else {\n      p += 3;\n    }\n  }\n  return p;\n};\n", "/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Copied from https://stackoverflow.com/a/2117523\n * Generates a new uuid.\n * @public\n */\nexport const uuidv4 = function (): string {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    const r = (Math.random() * 16) | 0,\n      v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The amount of milliseconds to exponentially increase.\n */\nconst DEFAULT_INTERVAL_MILLIS = 1000;\n\n/**\n * The factor to backoff by.\n * Should be a number greater than 1.\n */\nconst DEFAULT_BACKOFF_FACTOR = 2;\n\n/**\n * The maximum milliseconds to increase to.\n *\n * <p>Visible for testing\n */\nexport const MAX_VALUE_MILLIS = 4 * 60 * 60 * 1000; // Four hours, like iOS and Android.\n\n/**\n * The percentage of backoff time to randomize by.\n * See\n * http://go/safe-client-behavior#step-1-determine-the-appropriate-retry-interval-to-handle-spike-traffic\n * for context.\n *\n * <p>Visible for testing\n */\nexport const RANDOM_FACTOR = 0.5;\n\n/**\n * Based on the backoff method from\n * https://github.com/google/closure-library/blob/master/closure/goog/math/exponentialbackoff.js.\n * Extracted here so we don't need to pass metadata and a stateful ExponentialBackoff object around.\n */\nexport function calculateBackoffMillis(\n  backoffCount: number,\n  intervalMillis: number = DEFAULT_INTERVAL_MILLIS,\n  backoffFactor: number = DEFAULT_BACKOFF_FACTOR\n): number {\n  // Calculates an exponentially increasing value.\n  // Deviation: calculates value from count and a constant interval, so we only need to save value\n  // and count to restore state.\n  const currBaseValue = intervalMillis * Math.pow(backoffFactor, backoffCount);\n\n  // A random \"fuzz\" to avoid waves of retries.\n  // Deviation: randomFactor is required.\n  const randomWait = Math.round(\n    // A fraction of the backoff value to add/subtract.\n    // Deviation: changes multiplication order to improve readability.\n    RANDOM_FACTOR *\n      currBaseValue *\n      // A random float (rounded to int by Math.round above) in the range [-1, 1]. Determines\n      // if we add or subtract.\n      (Math.random() - 0.5) *\n      2\n  );\n\n  // Limits backoff to max to avoid effectively permanent backoff.\n  return Math.min(MAX_VALUE_MILLIS, currBaseValue + randomWait);\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Provide English ordinal letters after a number\n */\nexport function ordinal(i: number): string {\n  if (!Number.isFinite(i)) {\n    return `${i}`;\n  }\n  return i + indicator(i);\n}\n\nfunction indicator(i: number): string {\n  i = Math.abs(i);\n  const cent = i % 100;\n  if (cent >= 10 && cent <= 20) {\n    return 'th';\n  }\n  const dec = i % 10;\n  if (dec === 1) {\n    return 'st';\n  }\n  if (dec === 2) {\n    return 'nd';\n  }\n  if (dec === 3) {\n    return 'rd';\n  }\n  return 'th';\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Compat<T> {\n  _delegate: T;\n}\n\nexport function getModularInstance<ExpService>(\n  service: Compat<ExpService> | ExpService\n): ExpService {\n  if (service && (service as Compat<ExpService>)._delegate) {\n    return (service as Compat<ExpService>)._delegate;\n  } else {\n    return service as ExpService;\n  }\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  ComponentType,\n  Dictionary,\n  Name,\n  onInstanceCreatedCallback\n} from './types';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Component<T extends Name = Name> {\n  multipleInstances = false;\n  /**\n   * Properties to be added to the service namespace\n   */\n  serviceProps: Dictionary = {};\n\n  instantiationMode = InstantiationMode.LAZY;\n\n  onInstanceCreated: onInstanceCreatedCallback<T> | null = null;\n\n  /**\n   *\n   * @param name The public service name, e.g. app, auth, firestore, database\n   * @param instanceFactory Service factory responsible for creating the public interface\n   * @param type whether the service provided by the component is public or private\n   */\n  constructor(\n    readonly name: T,\n    readonly instanceFactory: InstanceFactory<T>,\n    readonly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: InstantiationMode): this {\n    this.instantiationMode = mode;\n    return this;\n  }\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n\n  setServiceProps(props: Dictionary): this {\n    this.serviceProps = props;\n    return this;\n  }\n\n  setInstanceCreatedCallback(callback: onInstanceCreatedCallback<T>): this {\n    this.onInstanceCreated = callback;\n    return this;\n  }\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\nimport { ComponentContainer } from './component_container';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport {\n  InitializeOptions,\n  InstantiationMode,\n  Name,\n  NameServiceMapping,\n  OnInitCallBack\n} from './types';\nimport { Component } from './component';\n\n/**\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\n * NameServiceMapping[T] is an alias for the type of the instance\n */\nexport class Provider<T extends Name> {\n  private component: Component<T> | null = null;\n  private readonly instances: Map<string, NameServiceMapping[T]> = new Map();\n  private readonly instancesDeferred: Map<\n    string,\n    Deferred<NameServiceMapping[T]>\n  > = new Map();\n  private readonly instancesOptions: Map<string, Record<string, unknown>> =\n    new Map();\n  private onInitCallbacks: Map<string, Set<OnInitCallBack<T>>> = new Map();\n\n  constructor(\n    private readonly name: T,\n    private readonly container: ComponentContainer\n  ) {}\n\n  /**\n   * @param identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   */\n  get(identifier?: string): Promise<NameServiceMapping[T]> {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n\n    if (!this.instancesDeferred.has(normalizedIdentifier)) {\n      const deferred = new Deferred<NameServiceMapping[T]>();\n      this.instancesDeferred.set(normalizedIdentifier, deferred);\n\n      if (\n        this.isInitialized(normalizedIdentifier) ||\n        this.shouldAutoInitialize()\n      ) {\n        // initialize the service if it can be auto-initialized\n        try {\n          const instance = this.getOrInitializeService({\n            instanceIdentifier: normalizedIdentifier\n          });\n          if (instance) {\n            deferred.resolve(instance);\n          }\n        } catch (e) {\n          // when the instance factory throws an exception during get(), it should not cause\n          // a fatal error. We just return the unresolved promise in this case.\n        }\n      }\n    }\n\n    return this.instancesDeferred.get(normalizedIdentifier)!.promise;\n  }\n\n  /**\n   *\n   * @param options.identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   * @param options.optional If optional is false or not provided, the method throws an error when\n   * the service is not immediately available.\n   * If optional is true, the method returns null if the service is not immediately available.\n   */\n  getImmediate(options: {\n    identifier?: string;\n    optional: true;\n  }): NameServiceMapping[T] | null;\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: false;\n  }): NameServiceMapping[T];\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: boolean;\n  }): NameServiceMapping[T] | null {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      options?.identifier\n    );\n    const optional = options?.optional ?? false;\n\n    if (\n      this.isInitialized(normalizedIdentifier) ||\n      this.shouldAutoInitialize()\n    ) {\n      try {\n        return this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        });\n      } catch (e) {\n        if (optional) {\n          return null;\n        } else {\n          throw e;\n        }\n      }\n    } else {\n      // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\n      if (optional) {\n        return null;\n      } else {\n        throw Error(`Service ${this.name} is not available`);\n      }\n    }\n  }\n\n  getComponent(): Component<T> | null {\n    return this.component;\n  }\n\n  setComponent(component: Component<T>): void {\n    if (component.name !== this.name) {\n      throw Error(\n        `Mismatching Component ${component.name} for Provider ${this.name}.`\n      );\n    }\n\n    if (this.component) {\n      throw Error(`Component for ${this.name} has already been provided`);\n    }\n\n    this.component = component;\n\n    // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\n    if (!this.shouldAutoInitialize()) {\n      return;\n    }\n\n    // if the service is eager, initialize the default instance\n    if (isComponentEager(component)) {\n      try {\n        this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\n      } catch (e) {\n        // when the instance factory for an eager Component throws an exception during the eager\n        // initialization, it should not cause a fatal error.\n        // TODO: Investigate if we need to make it configurable, because some component may want to cause\n        // a fatal error in this case?\n      }\n    }\n\n    // Create service instances for the pending promises and resolve them\n    // NOTE: if this.multipleInstances is false, only the default instance will be created\n    // and all promises with resolve with it regardless of the identifier.\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n\n      try {\n        // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\n        const instance = this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        })!;\n        instanceDeferred.resolve(instance);\n      } catch (e) {\n        // when the instance factory throws an exception, it should not cause\n        // a fatal error. We just leave the promise unresolved.\n      }\n    }\n  }\n\n  clearInstance(identifier: string = DEFAULT_ENTRY_NAME): void {\n    this.instancesDeferred.delete(identifier);\n    this.instancesOptions.delete(identifier);\n    this.instances.delete(identifier);\n  }\n\n  // app.delete() will call this method on every provider to delete the services\n  // TODO: should we mark the provider as deleted?\n  async delete(): Promise<void> {\n    const services = Array.from(this.instances.values());\n\n    await Promise.all([\n      ...services\n        .filter(service => 'INTERNAL' in service) // legacy services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any).INTERNAL!.delete()),\n      ...services\n        .filter(service => '_delete' in service) // modularized services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any)._delete())\n    ]);\n  }\n\n  isComponentSet(): boolean {\n    return this.component != null;\n  }\n\n  isInitialized(identifier: string = DEFAULT_ENTRY_NAME): boolean {\n    return this.instances.has(identifier);\n  }\n\n  getOptions(identifier: string = DEFAULT_ENTRY_NAME): Record<string, unknown> {\n    return this.instancesOptions.get(identifier) || {};\n  }\n\n  initialize(opts: InitializeOptions = {}): NameServiceMapping[T] {\n    const { options = {} } = opts;\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      opts.instanceIdentifier\n    );\n    if (this.isInitialized(normalizedIdentifier)) {\n      throw Error(\n        `${this.name}(${normalizedIdentifier}) has already been initialized`\n      );\n    }\n\n    if (!this.isComponentSet()) {\n      throw Error(`Component ${this.name} has not been registered yet`);\n    }\n\n    const instance = this.getOrInitializeService({\n      instanceIdentifier: normalizedIdentifier,\n      options\n    })!;\n\n    // resolve any pending promise waiting for the service instance\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedDeferredIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n      if (normalizedIdentifier === normalizedDeferredIdentifier) {\n        instanceDeferred.resolve(instance);\n      }\n    }\n\n    return instance;\n  }\n\n  /**\n   *\n   * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\n   * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\n   *\n   * @param identifier An optional instance identifier\n   * @returns a function to unregister the callback\n   */\n  onInit(callback: OnInitCallBack<T>, identifier?: string): () => void {\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n    const existingCallbacks =\n      this.onInitCallbacks.get(normalizedIdentifier) ??\n      new Set<OnInitCallBack<T>>();\n    existingCallbacks.add(callback);\n    this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\n\n    const existingInstance = this.instances.get(normalizedIdentifier);\n    if (existingInstance) {\n      callback(existingInstance, normalizedIdentifier);\n    }\n\n    return () => {\n      existingCallbacks.delete(callback);\n    };\n  }\n\n  /**\n   * Invoke onInit callbacks synchronously\n   * @param instance the service instance`\n   */\n  private invokeOnInitCallbacks(\n    instance: NameServiceMapping[T],\n    identifier: string\n  ): void {\n    const callbacks = this.onInitCallbacks.get(identifier);\n    if (!callbacks) {\n      return;\n    }\n    for (const callback of callbacks) {\n      try {\n        callback(instance, identifier);\n      } catch {\n        // ignore errors in the onInit callback\n      }\n    }\n  }\n\n  private getOrInitializeService({\n    instanceIdentifier,\n    options = {}\n  }: {\n    instanceIdentifier: string;\n    options?: Record<string, unknown>;\n  }): NameServiceMapping[T] | null {\n    let instance = this.instances.get(instanceIdentifier);\n    if (!instance && this.component) {\n      instance = this.component.instanceFactory(this.container, {\n        instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\n        options\n      });\n      this.instances.set(instanceIdentifier, instance);\n      this.instancesOptions.set(instanceIdentifier, options);\n\n      /**\n       * Invoke onInit listeners.\n       * Note this.component.onInstanceCreated is different, which is used by the component creator,\n       * while onInit listeners are registered by consumers of the provider.\n       */\n      this.invokeOnInitCallbacks(instance, instanceIdentifier);\n\n      /**\n       * Order is important\n       * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\n       * makes `isInitialized()` return true.\n       */\n      if (this.component.onInstanceCreated) {\n        try {\n          this.component.onInstanceCreated(\n            this.container,\n            instanceIdentifier,\n            instance\n          );\n        } catch {\n          // ignore errors in the onInstanceCreatedCallback\n        }\n      }\n    }\n\n    return instance || null;\n  }\n\n  private normalizeInstanceIdentifier(\n    identifier: string = DEFAULT_ENTRY_NAME\n  ): string {\n    if (this.component) {\n      return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\n    } else {\n      return identifier; // assume multiple instances are supported before the component is provided.\n    }\n  }\n\n  private shouldAutoInitialize(): boolean {\n    return (\n      !!this.component &&\n      this.component.instantiationMode !== InstantiationMode.EXPLICIT\n    );\n  }\n}\n\n// undefined should be passed to the service factory for the default instance\nfunction normalizeIdentifierForFactory(identifier: string): string | undefined {\n  return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\n}\n\nfunction isComponentEager<T extends Name>(component: Component<T>): boolean {\n  return component.instantiationMode === InstantiationMode.EAGER;\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Provider } from './provider';\nimport { Component } from './component';\nimport { Name } from './types';\n\n/**\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\n */\nexport class ComponentContainer {\n  private readonly providers = new Map<string, Provider<Name>>();\n\n  constructor(private readonly name: string) {}\n\n  /**\n   *\n   * @param component Component being added\n   * @param overwrite When a component with the same name has already been registered,\n   * if overwrite is true: overwrite the existing component with the new component and create a new\n   * provider with the new component. It can be useful in tests where you want to use different mocks\n   * for different tests.\n   * if overwrite is false: throw an exception\n   */\n  addComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      throw new Error(\n        `Component ${component.name} has already been registered with ${this.name}`\n      );\n    }\n\n    provider.setComponent(component);\n  }\n\n  addOrOverwriteComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      // delete the existing provider from the container, so we can register the new component\n      this.providers.delete(component.name);\n    }\n\n    this.addComponent(component);\n  }\n\n  /**\n   * getProvider provides a type safe interface where it can only be called with a field name\n   * present in NameServiceMapping interface.\n   *\n   * Firebase SDKs providing services should extend NameServiceMapping interface to register\n   * themselves.\n   */\n  getProvider<T extends Name>(name: T): Provider<T> {\n    if (this.providers.has(name)) {\n      return this.providers.get(name) as unknown as Provider<T>;\n    }\n\n    // create a Provider for a service that hasn't registered with Firebase\n    const provider = new Provider<T>(name, this);\n    this.providers.set(name, provider as unknown as Provider<Name>);\n\n    return provider as Provider<T>;\n  }\n\n  getProviders(): Array<Provider<Name>> {\n    return Array.from(this.providers.values());\n  }\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type LogLevelString =\n  | 'debug'\n  | 'verbose'\n  | 'info'\n  | 'warn'\n  | 'error'\n  | 'silent';\n\nexport interface LogOptions {\n  level: LogLevelString;\n}\n\nexport type LogCallback = (callbackParams: LogCallbackParams) => void;\n\nexport interface LogCallbackParams {\n  level: LogLevelString;\n  message: string;\n  args: unknown[];\n  type: string;\n}\n\n/**\n * A container for all of the Logger instances\n */\nexport const instances: Logger[] = [];\n\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport enum LogLevel {\n  DEBUG,\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\nconst levelStringToEnum: { [key in LogLevelString]: LogLevel } = {\n  'debug': LogLevel.DEBUG,\n  'verbose': LogLevel.VERBOSE,\n  'info': LogLevel.INFO,\n  'warn': LogLevel.WARN,\n  'error': LogLevel.ERROR,\n  'silent': LogLevel.SILENT\n};\n\n/**\n * The default log level\n */\nconst defaultLogLevel: LogLevel = LogLevel.INFO;\n\n/**\n * We allow users the ability to pass their own log handler. We will pass the\n * type of log, the current log level, and any other arguments passed (i.e. the\n * messages that the user wants to log) to this function.\n */\nexport type LogHandler = (\n  loggerInstance: Logger,\n  logType: LogLevel,\n  ...args: unknown[]\n) => void;\n\n/**\n * By default, `console.debug` is not displayed in the developer console (in\n * chrome). To avoid forcing users to have to opt-in to these logs twice\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n * logs to the `console.log` function.\n */\nconst ConsoleMethod = {\n  [LogLevel.DEBUG]: 'log',\n  [LogLevel.VERBOSE]: 'log',\n  [LogLevel.INFO]: 'info',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error'\n};\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler: LogHandler = (instance, logType, ...args): void => {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  const now = new Date().toISOString();\n  const method = ConsoleMethod[logType as keyof typeof ConsoleMethod];\n  if (method) {\n    console[method as 'log' | 'info' | 'warn' | 'error'](\n      `[${now}]  ${instance.name}:`,\n      ...args\n    );\n  } else {\n    throw new Error(\n      `Attempted to log a message with an invalid logType (value: ${logType})`\n    );\n  }\n};\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(public name: string) {\n    /**\n     * Capture the current instance for later use\n     */\n    instances.push(this);\n  }\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  private _logLevel = defaultLogLevel;\n\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n    }\n    this._logLevel = val;\n  }\n\n  // Workaround for setter/getter having to be the same type.\n  setLogLevel(val: LogLevel | LogLevelString): void {\n    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n  }\n\n  /**\n   * The main (internal) log handler for the Logger instance.\n   * Can be set to a new function in internal package code but not by user.\n   */\n  private _logHandler: LogHandler = defaultLogHandler;\n  get logHandler(): LogHandler {\n    return this._logHandler;\n  }\n  set logHandler(val: LogHandler) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n\n  /**\n   * The optional, additional, user-defined log handler for the Logger instance.\n   */\n  private _userLogHandler: LogHandler | null = null;\n  get userLogHandler(): LogHandler | null {\n    return this._userLogHandler;\n  }\n  set userLogHandler(val: LogHandler | null) {\n    this._userLogHandler = val;\n  }\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args: unknown[]): void {\n    this._userLogHandler &&\n      this._userLogHandler(this, LogLevel.VERBOSE, ...args);\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\n\nexport function setLogLevel(level: LogLevelString | LogLevel): void {\n  instances.forEach(inst => {\n    inst.setLogLevel(level);\n  });\n}\n\nexport function setUserLogHandler(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  for (const instance of instances) {\n    let customLogLevel: LogLevel | null = null;\n    if (options && options.level) {\n      customLogLevel = levelStringToEnum[options.level];\n    }\n    if (logCallback === null) {\n      instance.userLogHandler = null;\n    } else {\n      instance.userLogHandler = (\n        instance: Logger,\n        level: LogLevel,\n        ...args: unknown[]\n      ) => {\n        const message = args\n          .map(arg => {\n            if (arg == null) {\n              return null;\n            } else if (typeof arg === 'string') {\n              return arg;\n            } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n              return arg.toString();\n            } else if (arg instanceof Error) {\n              return arg.message;\n            } else {\n              try {\n                return JSON.stringify(arg);\n              } catch (ignored) {\n                return null;\n              }\n            }\n          })\n          .filter(arg => arg)\n          .join(' ');\n        if (level >= (customLogLevel ?? instance.logLevel)) {\n          logCallback({\n            level: LogLevel[level].toLowerCase() as LogLevelString,\n            message,\n            args,\n            type: instance.name\n          });\n        }\n      };\n    }\n  }\n}\n", "const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n", "import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentContainer,\n  ComponentType,\n  Provider,\n  Name\n} from '@firebase/component';\nimport { PlatformLoggerService, VersionService } from './types';\n\nexport class PlatformLoggerServiceImpl implements PlatformLoggerService {\n  constructor(private readonly container: ComponentContainer) {}\n  // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n  getPlatformInfoString(): string {\n    const providers = this.container.getProviders();\n    // Loop through providers and get library/version pairs from any that are\n    // version components.\n    return providers\n      .map(provider => {\n        if (isVersionServiceProvider(provider)) {\n          const service = provider.getImmediate() as VersionService;\n          return `${service.library}/${service.version}`;\n        } else {\n          return null;\n        }\n      })\n      .filter(logString => logString)\n      .join(' ');\n  }\n}\n/**\n *\n * @param provider check if this provider provides a VersionService\n *\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n * provides VersionService. The provider is not necessarily a 'app-version'\n * provider.\n */\nfunction isVersionServiceProvider(provider: Provider<Name>): boolean {\n  const component = provider.getComponent();\n  return component?.type === ComponentType.VERSION;\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app');\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { name as appName } from '../package.json';\nimport { name as appCompatName } from '../../app-compat/package.json';\nimport { name as analyticsCompatName } from '../../../packages/analytics-compat/package.json';\nimport { name as analyticsName } from '../../../packages/analytics/package.json';\nimport { name as appCheckCompatName } from '../../../packages/app-check-compat/package.json';\nimport { name as appCheckName } from '../../../packages/app-check/package.json';\nimport { name as authName } from '../../../packages/auth/package.json';\nimport { name as authCompatName } from '../../../packages/auth-compat/package.json';\nimport { name as databaseName } from '../../../packages/database/package.json';\nimport { name as databaseCompatName } from '../../../packages/database-compat/package.json';\nimport { name as functionsName } from '../../../packages/functions/package.json';\nimport { name as functionsCompatName } from '../../../packages/functions-compat/package.json';\nimport { name as installationsName } from '../../../packages/installations/package.json';\nimport { name as installationsCompatName } from '../../../packages/installations-compat/package.json';\nimport { name as messagingName } from '../../../packages/messaging/package.json';\nimport { name as messagingCompatName } from '../../../packages/messaging-compat/package.json';\nimport { name as performanceName } from '../../../packages/performance/package.json';\nimport { name as performanceCompatName } from '../../../packages/performance-compat/package.json';\nimport { name as remoteConfigName } from '../../../packages/remote-config/package.json';\nimport { name as remoteConfigCompatName } from '../../../packages/remote-config-compat/package.json';\nimport { name as storageName } from '../../../packages/storage/package.json';\nimport { name as storageCompatName } from '../../../packages/storage-compat/package.json';\nimport { name as firestoreName } from '../../../packages/firestore/package.json';\nimport { name as vertexName } from '../../../packages/vertexai/package.json';\nimport { name as firestoreCompatName } from '../../../packages/firestore-compat/package.json';\nimport { name as packageName } from '../../../packages/firebase/package.json';\n\n/**\n * The default app name\n *\n * @internal\n */\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\nexport const PLATFORM_LOG_STRING = {\n  [appName]: 'fire-core',\n  [appCompatName]: 'fire-core-compat',\n  [analyticsName]: 'fire-analytics',\n  [analyticsCompatName]: 'fire-analytics-compat',\n  [appCheckName]: 'fire-app-check',\n  [appCheckCompatName]: 'fire-app-check-compat',\n  [authName]: 'fire-auth',\n  [authCompatName]: 'fire-auth-compat',\n  [databaseName]: 'fire-rtdb',\n  [databaseCompatName]: 'fire-rtdb-compat',\n  [functionsName]: 'fire-fn',\n  [functionsCompatName]: 'fire-fn-compat',\n  [installationsName]: 'fire-iid',\n  [installationsCompatName]: 'fire-iid-compat',\n  [messagingName]: 'fire-fcm',\n  [messagingCompatName]: 'fire-fcm-compat',\n  [performanceName]: 'fire-perf',\n  [performanceCompatName]: 'fire-perf-compat',\n  [remoteConfigName]: 'fire-rc',\n  [remoteConfigCompatName]: 'fire-rc-compat',\n  [storageName]: 'fire-gcs',\n  [storageCompatName]: 'fire-gcs-compat',\n  [firestoreName]: 'fire-fst',\n  [firestoreCompatName]: 'fire-fst-compat',\n  [vertexName]: 'fire-vertex',\n  'fire-js': 'fire-js', // Platform identifier for JS SDK.\n  [packageName]: 'fire-js-all'\n} as const;\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseServerApp\n} from './public-types';\nimport { Component, Provider, Name } from '@firebase/component';\nimport { logger } from './logger';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { FirebaseServerAppImpl } from './firebaseServerApp';\n\n/**\n * @internal\n */\nexport const _apps = new Map<string, FirebaseApp>();\n\n/**\n * @internal\n */\nexport const _serverApps = new Map<string, FirebaseServerApp>();\n\n/**\n * Registered components.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const _components = new Map<string, Component<any>>();\n\n/**\n * @param component - the component being added to this app's container\n *\n * @internal\n */\nexport function _addComponent<T extends Name>(\n  app: FirebaseApp,\n  component: Component<T>\n): void {\n  try {\n    (app as FirebaseAppImpl).container.addComponent(component);\n  } catch (e) {\n    logger.debug(\n      `Component ${component.name} failed to register with FirebaseApp ${app.name}`,\n      e\n    );\n  }\n}\n\n/**\n *\n * @internal\n */\nexport function _addOrOverwriteComponent(\n  app: FirebaseApp,\n  component: Component\n): void {\n  (app as FirebaseAppImpl).container.addOrOverwriteComponent(component);\n}\n\n/**\n *\n * @param component - the component to register\n * @returns whether or not the component is registered successfully\n *\n * @internal\n */\nexport function _registerComponent<T extends Name>(\n  component: Component<T>\n): boolean {\n  const componentName = component.name;\n  if (_components.has(componentName)) {\n    logger.debug(\n      `There were multiple attempts to register component ${componentName}.`\n    );\n\n    return false;\n  }\n\n  _components.set(componentName, component);\n\n  // add the component to existing app instances\n  for (const app of _apps.values()) {\n    _addComponent(app as FirebaseAppImpl, component);\n  }\n\n  for (const serverApp of _serverApps.values()) {\n    _addComponent(serverApp as FirebaseServerAppImpl, component);\n  }\n\n  return true;\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n *\n * @returns the provider for the service with the matching name\n *\n * @internal\n */\nexport function _getProvider<T extends Name>(\n  app: FirebaseApp,\n  name: T\n): Provider<T> {\n  const heartbeatController = (app as FirebaseAppImpl).container\n    .getProvider('heartbeat')\n    .getImmediate({ optional: true });\n  if (heartbeatController) {\n    void heartbeatController.triggerHeartbeat();\n  }\n  return (app as FirebaseAppImpl).container.getProvider(name);\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n *\n * @internal\n */\nexport function _removeServiceInstance<T extends Name>(\n  app: FirebaseApp,\n  name: T,\n  instanceIdentifier: string = DEFAULT_ENTRY_NAME\n): void {\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n\n/**\n *\n * @param obj - an object of type FirebaseApp or FirebaseOptions.\n *\n * @returns true if the provide object is of type FirebaseApp.\n *\n * @internal\n */\nexport function _isFirebaseApp(\n  obj: FirebaseApp | FirebaseOptions\n): obj is FirebaseApp {\n  return (obj as FirebaseApp).options !== undefined;\n}\n\n/**\n *\n * @param obj - an object of type FirebaseApp.\n *\n * @returns true if the provided object is of type FirebaseServerAppImpl.\n *\n * @internal\n */\nexport function _isFirebaseServerApp(\n  obj: FirebaseApp | FirebaseServerApp\n): obj is FirebaseServerApp {\n  return (obj as FirebaseServerApp).settings !== undefined;\n}\n\n/**\n * Test only\n *\n * @internal\n */\nexport function _clearComponents(): void {\n  _components.clear();\n}\n\n/**\n * Exported in order to be used in app-compat package\n */\nexport { DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME };\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  BAD_APP_NAME = 'bad-app-name',\n  DUPLICATE_APP = 'duplicate-app',\n  APP_DELETED = 'app-deleted',\n  SERVER_APP_DELETED = 'server-app-deleted',\n  NO_OPTIONS = 'no-options',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument',\n  INVALID_LOG_ARGUMENT = 'invalid-log-argument',\n  IDB_OPEN = 'idb-open',\n  IDB_GET = 'idb-get',\n  IDB_WRITE = 'idb-set',\n  IDB_DELETE = 'idb-delete',\n  FINALIZATION_REGISTRY_NOT_SUPPORTED = 'finalization-registry-not-supported',\n  INVALID_SERVER_APP_ENVIRONMENT = 'invalid-server-app-environment'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName}' has been created - \" +\n    'call initializeApp() first',\n  [AppError.BAD_APP_NAME]: \"Illegal App name: '{$appName}'\",\n  [AppError.DUPLICATE_APP]:\n    \"Firebase App named '{$appName}' already exists with different options or config\",\n  [AppError.APP_DELETED]: \"Firebase App named '{$appName}' already deleted\",\n  [AppError.SERVER_APP_DELETED]: 'Firebase Server App has been deleted',\n  [AppError.NO_OPTIONS]:\n    'Need to provide options, when not being deployed to hosting via source.',\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName}() takes either no argument or a ' +\n    'Firebase App instance.',\n  [AppError.INVALID_LOG_ARGUMENT]:\n    'First argument to `onLog` must be null or a function.',\n  [AppError.IDB_OPEN]:\n    'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_GET]:\n    'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_WRITE]:\n    'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_DELETE]:\n    'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED]:\n    'FirebaseServerApp deleteOnDeref field defined but the JS runtime does not support FinalizationRegistry.',\n  [AppError.INVALID_SERVER_APP_ENVIRONMENT]:\n    'FirebaseServerApp is not for use in browser environments.'\n};\n\ninterface ErrorParams {\n  [AppError.NO_APP]: { appName: string };\n  [AppError.BAD_APP_NAME]: { appName: string };\n  [AppError.DUPLICATE_APP]: { appName: string };\n  [AppError.APP_DELETED]: { appName: string };\n  [AppError.INVALID_APP_ARGUMENT]: { appName: string };\n  [AppError.IDB_OPEN]: { originalErrorMessage?: string };\n  [AppError.IDB_GET]: { originalErrorMessage?: string };\n  [AppError.IDB_WRITE]: { originalErrorMessage?: string };\n  [AppError.IDB_DELETE]: { originalErrorMessage?: string };\n  [AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED]: { appName?: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app',\n  'Firebase',\n  ERRORS\n);\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport {\n  ComponentContainer,\n  Component,\n  ComponentType\n} from '@firebase/component';\nimport { ERROR_FACTORY, AppError } from './errors';\n\nexport class FirebaseAppImpl implements FirebaseApp {\n  protected readonly _options: FirebaseOptions;\n  protected readonly _name: string;\n  /**\n   * Original config values passed in as a constructor parameter.\n   * It is only used to compare with another config object to support idempotent initializeApp().\n   *\n   * Updating automaticDataCollectionEnabled on the App instance will not change its value in _config.\n   */\n  private readonly _config: Required<FirebaseAppSettings>;\n  private _automaticDataCollectionEnabled: boolean;\n  protected _isDeleted = false;\n  private readonly _container: ComponentContainer;\n\n  constructor(\n    options: FirebaseOptions,\n    config: Required<FirebaseAppSettings>,\n    container: ComponentContainer\n  ) {\n    this._options = { ...options };\n    this._config = { ...config };\n    this._name = config.name;\n    this._automaticDataCollectionEnabled =\n      config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(\n      new Component('app', () => this, ComponentType.PUBLIC)\n    );\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed();\n    return this._automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val: boolean) {\n    this.checkDestroyed();\n    this._automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    this.checkDestroyed();\n    return this._name;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed();\n    return this._options;\n  }\n\n  get config(): Required<FirebaseAppSettings> {\n    this.checkDestroyed();\n    return this._config;\n  }\n\n  get container(): ComponentContainer {\n    return this._container;\n  }\n\n  get isDeleted(): boolean {\n    return this._isDeleted;\n  }\n\n  set isDeleted(val: boolean) {\n    this._isDeleted = val;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  protected checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.APP_DELETED, { appName: this._name });\n    }\n  }\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseAppSettings,\n  FirebaseServerApp,\n  FirebaseServerAppSettings,\n  FirebaseOptions\n} from './public-types';\nimport { deleteApp, registerVersion } from './api';\nimport { ComponentContainer } from '@firebase/component';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport { name as packageName, version } from '../package.json';\n\nexport class FirebaseServerAppImpl\n  extends FirebaseAppImpl\n  implements FirebaseServerApp\n{\n  private readonly _serverConfig: FirebaseServerAppSettings;\n  private _finalizationRegistry: FinalizationRegistry<object>;\n  private _refCount: number;\n\n  constructor(\n    options: FirebaseOptions | FirebaseAppImpl,\n    serverConfig: FirebaseServerAppSettings,\n    name: string,\n    container: ComponentContainer\n  ) {\n    // Build configuration parameters for the FirebaseAppImpl base class.\n    const automaticDataCollectionEnabled =\n      serverConfig.automaticDataCollectionEnabled !== undefined\n        ? serverConfig.automaticDataCollectionEnabled\n        : false;\n\n    // Create the FirebaseAppSettings object for the FirebaseAppImp constructor.\n    const config: Required<FirebaseAppSettings> = {\n      name,\n      automaticDataCollectionEnabled\n    };\n\n    if ((options as FirebaseOptions).apiKey !== undefined) {\n      // Construct the parent FirebaseAppImp object.\n      super(options as FirebaseOptions, config, container);\n    } else {\n      const appImpl: FirebaseAppImpl = options as FirebaseAppImpl;\n      super(appImpl.options, config, container);\n    }\n\n    // Now construct the data for the FirebaseServerAppImpl.\n    this._serverConfig = {\n      automaticDataCollectionEnabled,\n      ...serverConfig\n    };\n\n    this._finalizationRegistry = new FinalizationRegistry(() => {\n      this.automaticCleanup();\n    });\n\n    this._refCount = 0;\n    this.incRefCount(this._serverConfig.releaseOnDeref);\n\n    // Do not retain a hard reference to the dref object, otherwise the FinalizationRegisry\n    // will never trigger.\n    this._serverConfig.releaseOnDeref = undefined;\n    serverConfig.releaseOnDeref = undefined;\n\n    registerVersion(packageName, version, 'serverapp');\n  }\n\n  toJSON(): undefined {\n    return undefined;\n  }\n\n  get refCount(): number {\n    return this._refCount;\n  }\n\n  // Increment the reference count of this server app. If an object is provided, register it\n  // with the finalization registry.\n  incRefCount(obj: object | undefined): void {\n    if (this.isDeleted) {\n      return;\n    }\n    this._refCount++;\n    if (obj !== undefined) {\n      this._finalizationRegistry.register(obj, this);\n    }\n  }\n\n  // Decrement the reference count.\n  decRefCount(): number {\n    if (this.isDeleted) {\n      return 0;\n    }\n    return --this._refCount;\n  }\n\n  // Invoked by the FinalizationRegistry callback to note that this app should go through its\n  // reference counts and delete itself if no reference count remain. The coordinating logic that\n  // handles this is in deleteApp(...).\n  private automaticCleanup(): void {\n    void deleteApp(this);\n  }\n\n  get settings(): FirebaseServerAppSettings {\n    this.checkDestroyed();\n    return this._serverConfig;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  protected checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.SERVER_APP_DELETED);\n    }\n  }\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseServerApp,\n  FirebaseOptions,\n  FirebaseAppSettings,\n  FirebaseServerAppSettings\n} from './public-types';\nimport { DEFAULT_ENTRY_NAME, PLATFORM_LOG_STRING } from './constants';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport {\n  ComponentContainer,\n  Component,\n  Name,\n  ComponentType\n} from '@firebase/component';\nimport { version } from '../../firebase/package.json';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { FirebaseServerAppImpl } from './firebaseServerApp';\nimport {\n  _apps,\n  _components,\n  _isFirebaseApp,\n  _registerComponent,\n  _serverApps\n} from './internal';\nimport { logger } from './logger';\nimport {\n  LogLevelString,\n  setLogLevel as setLogLevelImpl,\n  LogCallback,\n  LogOptions,\n  setUserLogHandler\n} from '@firebase/logger';\nimport { deepEqual, getDefaultAppConfig, isBrowser } from '@firebase/util';\n\nexport { FirebaseError } from '@firebase/util';\n\n/**\n * The current SDK version.\n *\n * @public\n */\nexport const SDK_VERSION = version;\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseApp} instance.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize default app\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeApp({\n *   apiKey: \"AIza....\",                             // Auth / General Use\n *   authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *   databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *   storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *   messagingSenderId: \"123456789\"                  // Cloud Messaging\n * });\n * ```\n *\n * @example\n * ```javascript\n *\n * // Initialize another app\n * const otherApp = initializeApp({\n *   databaseURL: \"https://<OTHER_DATABASE_NAME>.firebaseio.com\",\n *   storageBucket: \"<OTHER_STORAGE_BUCKET>.appspot.com\"\n * }, \"otherApp\");\n * ```\n *\n * @param options - Options to configure the app's services.\n * @param name - Optional name of the app to initialize. If no name\n *   is provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The initialized app.\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  name?: string\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @param options - Options to configure the app's services.\n * @param config - FirebaseApp Configuration\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  config?: FirebaseAppSettings\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @public\n */\nexport function initializeApp(): FirebaseApp;\nexport function initializeApp(\n  _options?: FirebaseOptions,\n  rawConfig = {}\n): FirebaseApp {\n  let options = _options;\n\n  if (typeof rawConfig !== 'object') {\n    const name = rawConfig;\n    rawConfig = { name };\n  }\n\n  const config: Required<FirebaseAppSettings> = {\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false,\n    ...rawConfig\n  };\n  const name = config.name;\n\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(AppError.BAD_APP_NAME, {\n      appName: String(name)\n    });\n  }\n\n  options ||= getDefaultAppConfig();\n\n  if (!options) {\n    throw ERROR_FACTORY.create(AppError.NO_OPTIONS);\n  }\n\n  const existingApp = _apps.get(name) as FirebaseAppImpl;\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if (\n      deepEqual(options, existingApp.options) &&\n      deepEqual(config, existingApp.config)\n    ) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(AppError.DUPLICATE_APP, { appName: name });\n    }\n  }\n\n  const container = new ComponentContainer(name);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseAppImpl(options, config, container);\n\n  _apps.set(name, newApp);\n\n  return newApp;\n}\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseServerApp} instance.\n *\n * The `FirebaseServerApp` is similar to `FirebaseApp`, but is intended for execution in\n * server side rendering environments only. Initialization will fail if invoked from a\n * browser environment.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize an instance of `FirebaseServerApp`.\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeServerApp({\n *     apiKey: \"AIza....\",                             // Auth / General Use\n *     authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *     databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *     storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *     messagingSenderId: \"123456789\"                  // Cloud Messaging\n *   },\n *   {\n *    authIdToken: \"Your Auth ID Token\"\n *   });\n * ```\n *\n * @param options - `Firebase.AppOptions` to configure the app's services, or a\n *   a `FirebaseApp` instance which contains the `AppOptions` within.\n * @param config - `FirebaseServerApp` configuration.\n *\n * @returns The initialized `FirebaseServerApp`.\n *\n * @public\n */\nexport function initializeServerApp(\n  options: FirebaseOptions | FirebaseApp,\n  config: FirebaseServerAppSettings\n): FirebaseServerApp;\n\nexport function initializeServerApp(\n  _options: FirebaseOptions | FirebaseApp,\n  _serverAppConfig: FirebaseServerAppSettings\n): FirebaseServerApp {\n  if (isBrowser()) {\n    // FirebaseServerApp isn't designed to be run in browsers.\n    throw ERROR_FACTORY.create(AppError.INVALID_SERVER_APP_ENVIRONMENT);\n  }\n\n  if (_serverAppConfig.automaticDataCollectionEnabled === undefined) {\n    _serverAppConfig.automaticDataCollectionEnabled = false;\n  }\n\n  let appOptions: FirebaseOptions;\n  if (_isFirebaseApp(_options)) {\n    appOptions = _options.options;\n  } else {\n    appOptions = _options;\n  }\n\n  // Build an app name based on a hash of the configuration options.\n  const nameObj = {\n    ..._serverAppConfig,\n    ...appOptions\n  };\n\n  // However, Do not mangle the name based on releaseOnDeref, since it will vary between the\n  // construction of FirebaseServerApp instances. For example, if the object is the request headers.\n  if (nameObj.releaseOnDeref !== undefined) {\n    delete nameObj.releaseOnDeref;\n  }\n\n  const hashCode = (s: string): number => {\n    return [...s].reduce(\n      (hash, c) => (Math.imul(31, hash) + c.charCodeAt(0)) | 0,\n      0\n    );\n  };\n\n  if (_serverAppConfig.releaseOnDeref !== undefined) {\n    if (typeof FinalizationRegistry === 'undefined') {\n      throw ERROR_FACTORY.create(\n        AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED,\n        {}\n      );\n    }\n  }\n\n  const nameString = '' + hashCode(JSON.stringify(nameObj));\n  const existingApp = _serverApps.get(nameString) as FirebaseServerApp;\n  if (existingApp) {\n    (existingApp as FirebaseServerAppImpl).incRefCount(\n      _serverAppConfig.releaseOnDeref\n    );\n    return existingApp;\n  }\n\n  const container = new ComponentContainer(nameString);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseServerAppImpl(\n    appOptions,\n    _serverAppConfig,\n    nameString,\n    container\n  );\n\n  _serverApps.set(nameString, newApp);\n\n  return newApp;\n}\n\n/**\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n *\n * When called with no arguments, the default app is returned. When an app name\n * is provided, the app corresponding to that name is returned.\n *\n * An exception is thrown if the app being retrieved has not yet been\n * initialized.\n *\n * @example\n * ```javascript\n * // Return the default app\n * const app = getApp();\n * ```\n *\n * @example\n * ```javascript\n * // Return a named app\n * const otherApp = getApp(\"otherApp\");\n * ```\n *\n * @param name - Optional name of the app to return. If no name is\n *   provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The app corresponding to the provided app name.\n *   If no app name is provided, the default app is returned.\n *\n * @public\n */\nexport function getApp(name: string = DEFAULT_ENTRY_NAME): FirebaseApp {\n  const app = _apps.get(name);\n  if (!app && name === DEFAULT_ENTRY_NAME && getDefaultAppConfig()) {\n    return initializeApp();\n  }\n  if (!app) {\n    throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n  }\n\n  return app;\n}\n\n/**\n * A (read-only) array of all initialized apps.\n * @public\n */\nexport function getApps(): FirebaseApp[] {\n  return Array.from(_apps.values());\n}\n\n/**\n * Renders this app unusable and frees the resources of all associated\n * services.\n *\n * @example\n * ```javascript\n * deleteApp(app)\n *   .then(function() {\n *     console.log(\"App deleted successfully\");\n *   })\n *   .catch(function(error) {\n *     console.log(\"Error deleting app:\", error);\n *   });\n * ```\n *\n * @public\n */\nexport async function deleteApp(app: FirebaseApp): Promise<void> {\n  let cleanupProviders = false;\n  const name = app.name;\n  if (_apps.has(name)) {\n    cleanupProviders = true;\n    _apps.delete(name);\n  } else if (_serverApps.has(name)) {\n    const firebaseServerApp = app as FirebaseServerAppImpl;\n    if (firebaseServerApp.decRefCount() <= 0) {\n      _serverApps.delete(name);\n      cleanupProviders = true;\n    }\n  }\n\n  if (cleanupProviders) {\n    await Promise.all(\n      (app as FirebaseAppImpl).container\n        .getProviders()\n        .map(provider => provider.delete())\n    );\n    (app as FirebaseAppImpl).isDeleted = true;\n  }\n}\n\n/**\n * Registers a library's name and version for platform logging purposes.\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n * @param version - Current version of that library.\n * @param variant - Bundle variant, e.g., node, rn, etc.\n *\n * @public\n */\nexport function registerVersion(\n  libraryKeyOrName: string,\n  version: string,\n  variant?: string\n): void {\n  // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n  let library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n  if (variant) {\n    library += `-${variant}`;\n  }\n  const libraryMismatch = library.match(/\\s|\\//);\n  const versionMismatch = version.match(/\\s|\\//);\n  if (libraryMismatch || versionMismatch) {\n    const warning = [\n      `Unable to register library \"${library}\" with version \"${version}\":`\n    ];\n    if (libraryMismatch) {\n      warning.push(\n        `library name \"${library}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n    if (versionMismatch) {\n      warning.push(\n        `version name \"${version}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    logger.warn(warning.join(' '));\n    return;\n  }\n  _registerComponent(\n    new Component(\n      `${library}-version` as Name,\n      () => ({ library, version }),\n      ComponentType.VERSION\n    )\n  );\n}\n\n/**\n * Sets log handler for all Firebase SDKs.\n * @param logCallback - An optional custom log handler that executes user code whenever\n * the Firebase SDK makes a logging call.\n *\n * @public\n */\nexport function onLog(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(AppError.INVALID_LOG_ARGUMENT);\n  }\n  setUserLogHandler(logCallback, options);\n}\n\n/**\n * Sets log level for all Firebase SDKs.\n *\n * All of the log types above the current log level are captured (i.e. if\n * you set the log level to `info`, errors are logged, but `debug` and\n * `verbose` logs are not).\n *\n * @public\n */\nexport function setLogLevel(logLevel: LogLevelString): void {\n  setLogLevelImpl(logLevel);\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { DBSchema, openDB, IDBPDatabase } from 'idb';\nimport { AppError, ERROR_FACTORY } from './errors';\nimport { FirebaseApp } from './public-types';\nimport { HeartbeatsInIndexedDB } from './types';\nimport { logger } from './logger';\n\nconst DB_NAME = 'firebase-heartbeat-database';\nconst DB_VERSION = 1;\nconst STORE_NAME = 'firebase-heartbeat-store';\n\ninterface AppDB extends DBSchema {\n  'firebase-heartbeat-store': {\n    key: string;\n    value: HeartbeatsInIndexedDB;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<AppDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<AppDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB<AppDB>(DB_NAME, DB_VERSION, {\n      upgrade: (db, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            try {\n              db.createObjectStore(STORE_NAME);\n            } catch (e) {\n              // Safari/iOS browsers throw occasional exceptions on\n              // db.createObjectStore() that may be a bug. Avoid blocking\n              // the rest of the app functionality.\n              console.warn(e);\n            }\n        }\n      }\n    }).catch(e => {\n      throw ERROR_FACTORY.create(AppError.IDB_OPEN, {\n        originalErrorMessage: e.message\n      });\n    });\n  }\n  return dbPromise;\n}\n\nexport async function readHeartbeatsFromIndexedDB(\n  app: FirebaseApp\n): Promise<HeartbeatsInIndexedDB | undefined> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME);\n    const result = await tx.objectStore(STORE_NAME).get(computeKey(app));\n    // We already have the value but tx.done can throw,\n    // so we need to await it here to catch errors\n    await tx.done;\n    return result;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_GET, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nexport async function writeHeartbeatsToIndexedDB(\n  app: FirebaseApp,\n  heartbeatObject: HeartbeatsInIndexedDB\n): Promise<void> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME, 'readwrite');\n    const objectStore = tx.objectStore(STORE_NAME);\n    await objectStore.put(heartbeatObject, computeKey(app));\n    await tx.done;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_WRITE, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nfunction computeKey(app: FirebaseApp): string {\n  return `${app.name}!${app.options.appId}`;\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ComponentContainer } from '@firebase/component';\nimport {\n  base64urlEncodeWithoutPadding,\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\nimport {\n  readHeartbeatsFromIndexedDB,\n  writeHeartbeatsToIndexedDB\n} from './indexeddb';\nimport { FirebaseApp } from './public-types';\nimport {\n  HeartbeatsByUserAgent,\n  HeartbeatService,\n  HeartbeatsInIndexedDB,\n  HeartbeatStorage,\n  SingleDateHeartbeat\n} from './types';\n\nconst MAX_HEADER_BYTES = 1024;\n// 30 days\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\n\nexport class HeartbeatServiceImpl implements HeartbeatService {\n  /**\n   * The persistence layer for heartbeats\n   * Leave public for easier testing.\n   */\n  _storage: HeartbeatStorageImpl;\n\n  /**\n   * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\n   * the header string.\n   * Stores one record per date. This will be consolidated into the standard\n   * format of one record per user agent string before being sent as a header.\n   * Populated from indexedDB when the controller is instantiated and should\n   * be kept in sync with indexedDB.\n   * Leave public for easier testing.\n   */\n  _heartbeatsCache: HeartbeatsInIndexedDB | null = null;\n\n  /**\n   * the initialization promise for populating heartbeatCache.\n   * If getHeartbeatsHeader() is called before the promise resolves\n   * (hearbeatsCache == null), it should wait for this promise\n   * Leave public for easier testing.\n   */\n  _heartbeatsCachePromise: Promise<HeartbeatsInIndexedDB>;\n  constructor(private readonly container: ComponentContainer) {\n    const app = this.container.getProvider('app').getImmediate();\n    this._storage = new HeartbeatStorageImpl(app);\n    this._heartbeatsCachePromise = this._storage.read().then(result => {\n      this._heartbeatsCache = result;\n      return result;\n    });\n  }\n\n  /**\n   * Called to report a heartbeat. The function will generate\n   * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\n   * to IndexedDB.\n   * Note that we only store one heartbeat per day. So if a heartbeat for today is\n   * already logged, subsequent calls to this function in the same day will be ignored.\n   */\n  async triggerHeartbeat(): Promise<void> {\n    const platformLogger = this.container\n      .getProvider('platform-logger')\n      .getImmediate();\n\n    // This is the \"Firebase user agent\" string from the platform logger\n    // service, not the browser user agent.\n    const agent = platformLogger.getPlatformInfoString();\n    const date = getUTCDateString();\n    if (this._heartbeatsCache?.heartbeats == null) {\n      this._heartbeatsCache = await this._heartbeatsCachePromise;\n      // If we failed to construct a heartbeats cache, then return immediately.\n      if (this._heartbeatsCache?.heartbeats == null) {\n        return;\n      }\n    }\n    // Do not store a heartbeat if one is already stored for this day\n    // or if a header has already been sent today.\n    if (\n      this._heartbeatsCache.lastSentHeartbeatDate === date ||\n      this._heartbeatsCache.heartbeats.some(\n        singleDateHeartbeat => singleDateHeartbeat.date === date\n      )\n    ) {\n      return;\n    } else {\n      // There is no entry for this date. Create one.\n      this._heartbeatsCache.heartbeats.push({ date, agent });\n    }\n    // Remove entries older than 30 days.\n    this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(\n      singleDateHeartbeat => {\n        const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\n        const now = Date.now();\n        return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\n      }\n    );\n    return this._storage.overwrite(this._heartbeatsCache);\n  }\n\n  /**\n   * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\n   * It also clears all heartbeats from memory as well as in IndexedDB.\n   *\n   * NOTE: Consuming product SDKs should not send the header if this method\n   * returns an empty string.\n   */\n  async getHeartbeatsHeader(): Promise<string> {\n    if (this._heartbeatsCache === null) {\n      await this._heartbeatsCachePromise;\n    }\n    // If it's still null or the array is empty, there is no data to send.\n    if (\n      this._heartbeatsCache?.heartbeats == null ||\n      this._heartbeatsCache.heartbeats.length === 0\n    ) {\n      return '';\n    }\n    const date = getUTCDateString();\n    // Extract as many heartbeats from the cache as will fit under the size limit.\n    const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(\n      this._heartbeatsCache.heartbeats\n    );\n    const headerString = base64urlEncodeWithoutPadding(\n      JSON.stringify({ version: 2, heartbeats: heartbeatsToSend })\n    );\n    // Store last sent date to prevent another being logged/sent for the same day.\n    this._heartbeatsCache.lastSentHeartbeatDate = date;\n    if (unsentEntries.length > 0) {\n      // Store any unsent entries if they exist.\n      this._heartbeatsCache.heartbeats = unsentEntries;\n      // This seems more likely than emptying the array (below) to lead to some odd state\n      // since the cache isn't empty and this will be called again on the next request,\n      // and is probably safest if we await it.\n      await this._storage.overwrite(this._heartbeatsCache);\n    } else {\n      this._heartbeatsCache.heartbeats = [];\n      // Do not wait for this, to reduce latency.\n      void this._storage.overwrite(this._heartbeatsCache);\n    }\n    return headerString;\n  }\n}\n\nfunction getUTCDateString(): string {\n  const today = new Date();\n  // Returns date format 'YYYY-MM-DD'\n  return today.toISOString().substring(0, 10);\n}\n\nexport function extractHeartbeatsForHeader(\n  heartbeatsCache: SingleDateHeartbeat[],\n  maxSize = MAX_HEADER_BYTES\n): {\n  heartbeatsToSend: HeartbeatsByUserAgent[];\n  unsentEntries: SingleDateHeartbeat[];\n} {\n  // Heartbeats grouped by user agent in the standard format to be sent in\n  // the header.\n  const heartbeatsToSend: HeartbeatsByUserAgent[] = [];\n  // Single date format heartbeats that are not sent.\n  let unsentEntries = heartbeatsCache.slice();\n  for (const singleDateHeartbeat of heartbeatsCache) {\n    // Look for an existing entry with the same user agent.\n    const heartbeatEntry = heartbeatsToSend.find(\n      hb => hb.agent === singleDateHeartbeat.agent\n    );\n    if (!heartbeatEntry) {\n      // If no entry for this user agent exists, create one.\n      heartbeatsToSend.push({\n        agent: singleDateHeartbeat.agent,\n        dates: [singleDateHeartbeat.date]\n      });\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        // If the header would exceed max size, remove the added heartbeat\n        // entry and stop adding to the header.\n        heartbeatsToSend.pop();\n        break;\n      }\n    } else {\n      heartbeatEntry.dates.push(singleDateHeartbeat.date);\n      // If the header would exceed max size, remove the added date\n      // and stop adding to the header.\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        heartbeatEntry.dates.pop();\n        break;\n      }\n    }\n    // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n    // quota and the loop breaks early.)\n    unsentEntries = unsentEntries.slice(1);\n  }\n  return {\n    heartbeatsToSend,\n    unsentEntries\n  };\n}\n\nexport class HeartbeatStorageImpl implements HeartbeatStorage {\n  private _canUseIndexedDBPromise: Promise<boolean>;\n  constructor(public app: FirebaseApp) {\n    this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n  }\n  async runIndexedDBEnvironmentCheck(): Promise<boolean> {\n    if (!isIndexedDBAvailable()) {\n      return false;\n    } else {\n      return validateIndexedDBOpenable()\n        .then(() => true)\n        .catch(() => false);\n    }\n  }\n  /**\n   * Read all heartbeats.\n   */\n  async read(): Promise<HeartbeatsInIndexedDB> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return { heartbeats: [] };\n    } else {\n      const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\n      if (idbHeartbeatObject?.heartbeats) {\n        return idbHeartbeatObject;\n      } else {\n        return { heartbeats: [] };\n      }\n    }\n  }\n  // overwrite the storage with the provided heartbeats\n  async overwrite(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: heartbeatsObject.heartbeats\n      });\n    }\n  }\n  // add heartbeats\n  async add(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: [\n          ...existingHeartbeatsObject.heartbeats,\n          ...heartbeatsObject.heartbeats\n        ]\n      });\n    }\n  }\n}\n\n/**\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\n * in a platform logging header JSON object, stringified, and converted\n * to base 64.\n */\nexport function countBytes(heartbeatsCache: HeartbeatsByUserAgent[]): number {\n  // base64 has a restricted set of characters, all of which should be 1 byte.\n  return base64urlEncodeWithoutPadding(\n    // heartbeatsCache wrapper properties\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })\n  ).length;\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ComponentType } from '@firebase/component';\nimport { PlatformLoggerServiceImpl } from './platformLoggerService';\nimport { name, version } from '../package.json';\nimport { _registerComponent } from './internal';\nimport { registerVersion } from './api';\nimport { HeartbeatServiceImpl } from './heartbeatService';\n\nexport function registerCoreComponents(variant?: string): void {\n  _registerComponent(\n    new Component(\n      'platform-logger',\n      container => new PlatformLoggerServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n  _registerComponent(\n    new Component(\n      'heartbeat',\n      container => new HeartbeatServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n\n  // Register `app` package.\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n  // Register platform SDK identifier (no version).\n  registerVersion('fire-js', '');\n}\n", "/**\n * Firebase App\n *\n * @remarks This package coordinates the communication between the different Firebase components\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerCoreComponents } from './registerCoreComponents';\n\nexport * from './api';\nexport * from './internal';\nexport * from './public-types';\n\nregisterCoreComponents('__RUNTIME_ENV__');\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerVersion } from '@firebase/app';\nimport { name, version } from '../package.json';\n\nregisterVersion(name, version, 'app');\nexport * from '@firebase/app';\n", "interface BaseOption<T> {\n  /** `true` when the Option is Some */ readonly some: boolean;\n  /** `true` when the Option is None */ readonly none: boolean;\n\n  /**\n   * Returns the contained `Some` value or a provided default.\n   *\n   *  (This is the `unwrap_or` in rust)\n   */\n  valueOr<T2>(val: T2): T | T2;\n\n  /**\n   * Calls `mapper` if the Option is `Some`, otherwise returns `None`.\n   * This function can be used for control flow based on `Option` values.\n   */\n  andThen<T2>(mapper: (val: T) => Option<T2>): Option<T2>;\n\n  /**\n   * Maps an `Option<T>` to `Option<U>` by applying a function to a contained `Some` value,\n   * leaving a `None` value untouched.\n   *\n   * This function can be used to compose the Options of two functions.\n   */\n  map<U>(mapper: (val: T) => U): Option<U>;\n}\n\n/**\n * Contains the None value\n */\nexport class NoneImpl implements BaseOption<never> {\n  readonly some = false;\n  readonly none = true;\n\n  /**\n   * Returns the contained `Some` value or a provided default.\n   *\n   *  (This is the `unwrap_or` in rust)\n   */\n  valueOr<T2>(val: T2): T2 {\n    return val;\n  }\n\n  /**\n   * Maps an `Option<T>` to `Option<U>` by applying a function to a contained `Some` value,\n   * leaving a `None` value untouched.\n   *\n   * This function can be used to compose the Options of two functions.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  map(_mapper: unknown): None {\n    return this;\n  }\n\n  /**\n   * Calls `mapper` if the Option is `Some`, otherwise returns `None`.\n   * This function can be used for control flow based on `Option` values.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  andThen(_op: unknown): None {\n    return this;\n  }\n}\n\n// Export None as a singleton, then freeze it so it can't be modified\nexport const None = new NoneImpl();\nexport type None = NoneImpl;\nObject.freeze(None);\n\n/**\n * Contains the success value\n */\nexport class SomeImpl<T> implements BaseOption<T> {\n  static readonly EMPTY = new SomeImpl<void>(undefined);\n\n  readonly some!: true;\n  readonly none!: false;\n  readonly val!: T;\n\n  constructor(val: T) {\n    if (!(this instanceof SomeImpl)) {\n      return new SomeImpl(val);\n    }\n\n    this.some = true;\n    this.none = false;\n    this.val = val;\n  }\n\n  /**\n   * Returns the contained `Some` value or a provided default.\n   *\n   *  (This is the `unwrap_or` in rust)\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  valueOr(_val: unknown): T {\n    return this.val;\n  }\n\n  /**\n   * Maps an `Option<T>` to `Option<U>` by applying a function to a contained `Some` value,\n   * leaving a `None` value untouched.\n   *\n   * This function can be used to compose the Options of two functions.\n   */\n  map<T2>(mapper: (val: T) => T2): Some<T2> {\n    return Some(mapper(this.val));\n  }\n\n  /**\n   * Calls `mapper` if the Option is `Some`, otherwise returns `None`.\n   * This function can be used for control flow based on `Option` values.\n   */\n  andThen<T2>(mapper: (val: T) => Option<T2>): Option<T2> {\n    return mapper(this.val);\n  }\n\n  /**\n   * Returns the contained `Some` value, but never throws.\n   * Unlike `unwrap()`, this method doesn't throw and is only callable on an Some<T>\n   *\n   * Therefore, it can be used instead of `unwrap()` as a maintainability safeguard\n   * that will fail to compile if the type of the Option is later changed to a None that can actually occur.\n   *\n   * (this is the `into_Some()` in rust)\n   */\n  safeValue(): T {\n    return this.val;\n  }\n}\n\n// This allows Some to be callable - possible because of the es5 compilation target\nexport const Some = <T>(val: T): SomeImpl<T> => new SomeImpl<T>(val);\nexport type Some<T> = SomeImpl<T>;\n\nexport type Option<T> = Some<T> | None;\n\nexport function isOption<T>(value: unknown): value is Option<T> {\n  return value instanceof SomeImpl || value === None;\n}\n", "import type { FirebaseApp } from \"firebase/app\";\nimport type { Option } from \"./option\";\nimport { None, Some } from \"./option\";\n\nlet app: FirebaseApp | undefined;\n\nconst callbacks: ((app: FirebaseApp) => Promise<void>)[] = [];\n\nexport async function SetApp(newApp: FirebaseApp): Promise<void> {\n  app = newApp;\n  for (const cb of callbacks) {\n    await cb(app);\n  }\n}\n\nexport async function AddAppCb(cb: (app: FirebaseApp) => Promise<void>): Promise<void> {\n  callbacks.push(cb);\n  if (app !== undefined) {\n    await cb(app);\n  }\n}\n\nexport function GetApp(): Option<FirebaseApp> {\n  if (app === undefined) {\n    return None;\n  }\n  return Some(app);\n}\n", "/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n  return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  function next() {\n    while (env.stack.length) {\n      var rec = env.stack.pop();\n      try {\n        var result = rec.dispose && rec.dispose.call(rec.value);\n        if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n      }\n      catch (e) {\n          fail(e);\n      }\n    }\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n", "/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An enum of factors that may be used for multifactor authentication.\n *\n * @public\n */\nexport const FactorId = {\n  /** Phone as second factor */\n  PHONE: 'phone',\n  TOTP: 'totp'\n} as const;\n\n/**\n * Enumeration of supported providers.\n *\n * @public\n */\nexport const ProviderId = {\n  /** Facebook provider ID */\n  FACEBOOK: 'facebook.com',\n  /** GitHub provider ID */\n  GITHUB: 'github.com',\n  /** Google provider ID */\n  GOOGLE: 'google.com',\n  /** Password provider */\n  PASSWORD: 'password',\n  /** Phone provider */\n  PHONE: 'phone',\n  /** Twitter provider ID */\n  TWITTER: 'twitter.com'\n} as const;\n\n/**\n * Enumeration of supported sign-in methods.\n *\n * @public\n */\nexport const SignInMethod = {\n  /** Email link sign in method */\n  EMAIL_LINK: 'emailLink',\n  /** Email/password sign in method */\n  EMAIL_PASSWORD: 'password',\n  /** Facebook sign in method */\n  FACEBOOK: 'facebook.com',\n  /** GitHub sign in method */\n  GITHUB: 'github.com',\n  /** Google sign in method */\n  GOOGLE: 'google.com',\n  /** Phone sign in method */\n  PHONE: 'phone',\n  /** Twitter sign in method */\n  TWITTER: 'twitter.com'\n} as const;\n\n/**\n * Enumeration of supported operation types.\n *\n * @public\n */\nexport const OperationType = {\n  /** Operation involving linking an additional provider to an already signed-in user. */\n  LINK: 'link',\n  /** Operation involving using a provider to reauthenticate an already signed-in user. */\n  REAUTHENTICATE: 'reauthenticate',\n  /** Operation involving signing in a user. */\n  SIGN_IN: 'signIn'\n} as const;\n\n/**\n * An enumeration of the possible email action types.\n *\n * @public\n */\nexport const ActionCodeOperation = {\n  /** The email link sign-in action. */\n  EMAIL_SIGNIN: 'EMAIL_SIGNIN',\n  /** The password reset action. */\n  PASSWORD_RESET: 'PASSWORD_RESET',\n  /** The email revocation action. */\n  RECOVER_EMAIL: 'RECOVER_EMAIL',\n  /** The revert second factor addition email action. */\n  REVERT_SECOND_FACTOR_ADDITION: 'REVERT_SECOND_FACTOR_ADDITION',\n  /** The revert second factor addition email action. */\n  VERIFY_AND_CHANGE_EMAIL: 'VERIFY_AND_CHANGE_EMAIL',\n  /** The email verification action. */\n  VERIFY_EMAIL: 'VERIFY_EMAIL'\n} as const;\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthErrorMap, User } from '../model/public_types';\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nimport { IdTokenMfaResponse } from '../api/authentication/mfa';\nimport { AppName } from '../model/auth';\nimport { AuthCredential } from './credentials';\n\n/**\n * Enumeration of Firebase Auth error codes.\n *\n * @internal\n */\nexport const enum AuthErrorCode {\n  ADMIN_ONLY_OPERATION = 'admin-restricted-operation',\n  ARGUMENT_ERROR = 'argument-error',\n  APP_NOT_AUTHORIZED = 'app-not-authorized',\n  APP_NOT_INSTALLED = 'app-not-installed',\n  CAPTCHA_CHECK_FAILED = 'captcha-check-failed',\n  CODE_EXPIRED = 'code-expired',\n  CORDOVA_NOT_READY = 'cordova-not-ready',\n  CORS_UNSUPPORTED = 'cors-unsupported',\n  CREDENTIAL_ALREADY_IN_USE = 'credential-already-in-use',\n  CREDENTIAL_MISMATCH = 'custom-token-mismatch',\n  CREDENTIAL_TOO_OLD_LOGIN_AGAIN = 'requires-recent-login',\n  DEPENDENT_SDK_INIT_BEFORE_AUTH = 'dependent-sdk-initialized-before-auth',\n  DYNAMIC_LINK_NOT_ACTIVATED = 'dynamic-link-not-activated',\n  EMAIL_CHANGE_NEEDS_VERIFICATION = 'email-change-needs-verification',\n  EMAIL_EXISTS = 'email-already-in-use',\n  EMULATOR_CONFIG_FAILED = 'emulator-config-failed',\n  EXPIRED_OOB_CODE = 'expired-action-code',\n  EXPIRED_POPUP_REQUEST = 'cancelled-popup-request',\n  INTERNAL_ERROR = 'internal-error',\n  INVALID_API_KEY = 'invalid-api-key',\n  INVALID_APP_CREDENTIAL = 'invalid-app-credential',\n  INVALID_APP_ID = 'invalid-app-id',\n  INVALID_AUTH = 'invalid-user-token',\n  INVALID_AUTH_EVENT = 'invalid-auth-event',\n  INVALID_CERT_HASH = 'invalid-cert-hash',\n  INVALID_CODE = 'invalid-verification-code',\n  INVALID_CONTINUE_URI = 'invalid-continue-uri',\n  INVALID_CORDOVA_CONFIGURATION = 'invalid-cordova-configuration',\n  INVALID_CUSTOM_TOKEN = 'invalid-custom-token',\n  INVALID_DYNAMIC_LINK_DOMAIN = 'invalid-dynamic-link-domain',\n  INVALID_EMAIL = 'invalid-email',\n  INVALID_EMULATOR_SCHEME = 'invalid-emulator-scheme',\n  INVALID_CREDENTIAL = 'invalid-credential',\n  INVALID_MESSAGE_PAYLOAD = 'invalid-message-payload',\n  INVALID_MFA_SESSION = 'invalid-multi-factor-session',\n  INVALID_OAUTH_CLIENT_ID = 'invalid-oauth-client-id',\n  INVALID_OAUTH_PROVIDER = 'invalid-oauth-provider',\n  INVALID_OOB_CODE = 'invalid-action-code',\n  INVALID_ORIGIN = 'unauthorized-domain',\n  INVALID_PASSWORD = 'wrong-password',\n  INVALID_PERSISTENCE = 'invalid-persistence-type',\n  INVALID_PHONE_NUMBER = 'invalid-phone-number',\n  INVALID_PROVIDER_ID = 'invalid-provider-id',\n  INVALID_RECIPIENT_EMAIL = 'invalid-recipient-email',\n  INVALID_SENDER = 'invalid-sender',\n  INVALID_SESSION_INFO = 'invalid-verification-id',\n  INVALID_TENANT_ID = 'invalid-tenant-id',\n  LOGIN_BLOCKED = 'login-blocked',\n  MFA_INFO_NOT_FOUND = 'multi-factor-info-not-found',\n  MFA_REQUIRED = 'multi-factor-auth-required',\n  MISSING_ANDROID_PACKAGE_NAME = 'missing-android-pkg-name',\n  MISSING_APP_CREDENTIAL = 'missing-app-credential',\n  MISSING_AUTH_DOMAIN = 'auth-domain-config-required',\n  MISSING_CODE = 'missing-verification-code',\n  MISSING_CONTINUE_URI = 'missing-continue-uri',\n  MISSING_IFRAME_START = 'missing-iframe-start',\n  MISSING_IOS_BUNDLE_ID = 'missing-ios-bundle-id',\n  MISSING_OR_INVALID_NONCE = 'missing-or-invalid-nonce',\n  MISSING_MFA_INFO = 'missing-multi-factor-info',\n  MISSING_MFA_SESSION = 'missing-multi-factor-session',\n  MISSING_PHONE_NUMBER = 'missing-phone-number',\n  MISSING_PASSWORD = 'missing-password',\n  MISSING_SESSION_INFO = 'missing-verification-id',\n  MODULE_DESTROYED = 'app-deleted',\n  NEED_CONFIRMATION = 'account-exists-with-different-credential',\n  NETWORK_REQUEST_FAILED = 'network-request-failed',\n  NULL_USER = 'null-user',\n  NO_AUTH_EVENT = 'no-auth-event',\n  NO_SUCH_PROVIDER = 'no-such-provider',\n  OPERATION_NOT_ALLOWED = 'operation-not-allowed',\n  OPERATION_NOT_SUPPORTED = 'operation-not-supported-in-this-environment',\n  POPUP_BLOCKED = 'popup-blocked',\n  POPUP_CLOSED_BY_USER = 'popup-closed-by-user',\n  PROVIDER_ALREADY_LINKED = 'provider-already-linked',\n  QUOTA_EXCEEDED = 'quota-exceeded',\n  REDIRECT_CANCELLED_BY_USER = 'redirect-cancelled-by-user',\n  REDIRECT_OPERATION_PENDING = 'redirect-operation-pending',\n  REJECTED_CREDENTIAL = 'rejected-credential',\n  SECOND_FACTOR_ALREADY_ENROLLED = 'second-factor-already-in-use',\n  SECOND_FACTOR_LIMIT_EXCEEDED = 'maximum-second-factor-count-exceeded',\n  TENANT_ID_MISMATCH = 'tenant-id-mismatch',\n  TIMEOUT = 'timeout',\n  TOKEN_EXPIRED = 'user-token-expired',\n  TOO_MANY_ATTEMPTS_TRY_LATER = 'too-many-requests',\n  UNAUTHORIZED_DOMAIN = 'unauthorized-continue-uri',\n  UNSUPPORTED_FIRST_FACTOR = 'unsupported-first-factor',\n  UNSUPPORTED_PERSISTENCE = 'unsupported-persistence-type',\n  UNSUPPORTED_TENANT_OPERATION = 'unsupported-tenant-operation',\n  UNVERIFIED_EMAIL = 'unverified-email',\n  USER_CANCELLED = 'user-cancelled',\n  USER_DELETED = 'user-not-found',\n  USER_DISABLED = 'user-disabled',\n  USER_MISMATCH = 'user-mismatch',\n  USER_SIGNED_OUT = 'user-signed-out',\n  WEAK_PASSWORD = 'weak-password',\n  WEB_STORAGE_UNSUPPORTED = 'web-storage-unsupported',\n  ALREADY_INITIALIZED = 'already-initialized',\n  RECAPTCHA_NOT_ENABLED = 'recaptcha-not-enabled',\n  MISSING_RECAPTCHA_TOKEN = 'missing-recaptcha-token',\n  INVALID_RECAPTCHA_TOKEN = 'invalid-recaptcha-token',\n  INVALID_RECAPTCHA_ACTION = 'invalid-recaptcha-action',\n  MISSING_CLIENT_TYPE = 'missing-client-type',\n  MISSING_RECAPTCHA_VERSION = 'missing-recaptcha-version',\n  INVALID_RECAPTCHA_VERSION = 'invalid-recaptcha-version',\n  INVALID_REQ_TYPE = 'invalid-req-type',\n  UNSUPPORTED_PASSWORD_POLICY_SCHEMA_VERSION = 'unsupported-password-policy-schema-version',\n  PASSWORD_DOES_NOT_MEET_REQUIREMENTS = 'password-does-not-meet-requirements'\n}\n\nfunction _debugErrorMap(): ErrorMap<AuthErrorCode> {\n  return {\n    [AuthErrorCode.ADMIN_ONLY_OPERATION]:\n      'This operation is restricted to administrators only.',\n    [AuthErrorCode.ARGUMENT_ERROR]: '',\n    [AuthErrorCode.APP_NOT_AUTHORIZED]:\n      \"This app, identified by the domain where it's hosted, is not \" +\n      'authorized to use Firebase Authentication with the provided API key. ' +\n      'Review your key configuration in the Google API console.',\n    [AuthErrorCode.APP_NOT_INSTALLED]:\n      'The requested mobile application corresponding to the identifier (' +\n      'Android package name or iOS bundle ID) provided is not installed on ' +\n      'this device.',\n    [AuthErrorCode.CAPTCHA_CHECK_FAILED]:\n      'The reCAPTCHA response token provided is either invalid, expired, ' +\n      'already used or the domain associated with it does not match the list ' +\n      'of whitelisted domains.',\n    [AuthErrorCode.CODE_EXPIRED]:\n      'The SMS code has expired. Please re-send the verification code to try ' +\n      'again.',\n    [AuthErrorCode.CORDOVA_NOT_READY]: 'Cordova framework is not ready.',\n    [AuthErrorCode.CORS_UNSUPPORTED]: 'This browser is not supported.',\n    [AuthErrorCode.CREDENTIAL_ALREADY_IN_USE]:\n      'This credential is already associated with a different user account.',\n    [AuthErrorCode.CREDENTIAL_MISMATCH]:\n      'The custom token corresponds to a different audience.',\n    [AuthErrorCode.CREDENTIAL_TOO_OLD_LOGIN_AGAIN]:\n      'This operation is sensitive and requires recent authentication. Log in ' +\n      'again before retrying this request.',\n    [AuthErrorCode.DEPENDENT_SDK_INIT_BEFORE_AUTH]:\n      'Another Firebase SDK was initialized and is trying to use Auth before Auth is ' +\n      'initialized. Please be sure to call `initializeAuth` or `getAuth` before ' +\n      'starting any other Firebase SDK.',\n    [AuthErrorCode.DYNAMIC_LINK_NOT_ACTIVATED]:\n      'Please activate Dynamic Links in the Firebase Console and agree to the terms and ' +\n      'conditions.',\n    [AuthErrorCode.EMAIL_CHANGE_NEEDS_VERIFICATION]:\n      'Multi-factor users must always have a verified email.',\n    [AuthErrorCode.EMAIL_EXISTS]:\n      'The email address is already in use by another account.',\n    [AuthErrorCode.EMULATOR_CONFIG_FAILED]:\n      'Auth instance has already been used to make a network call. Auth can ' +\n      'no longer be configured to use the emulator. Try calling ' +\n      '\"connectAuthEmulator()\" sooner.',\n    [AuthErrorCode.EXPIRED_OOB_CODE]: 'The action code has expired.',\n    [AuthErrorCode.EXPIRED_POPUP_REQUEST]:\n      'This operation has been cancelled due to another conflicting popup being opened.',\n    [AuthErrorCode.INTERNAL_ERROR]: 'An internal AuthError has occurred.',\n    [AuthErrorCode.INVALID_APP_CREDENTIAL]:\n      'The phone verification request contains an invalid application verifier.' +\n      ' The reCAPTCHA token response is either invalid or expired.',\n    [AuthErrorCode.INVALID_APP_ID]:\n      'The mobile app identifier is not registed for the current project.',\n    [AuthErrorCode.INVALID_AUTH]:\n      \"This user's credential isn't valid for this project. This can happen \" +\n      \"if the user's token has been tampered with, or if the user isn't for \" +\n      'the project associated with this API key.',\n    [AuthErrorCode.INVALID_AUTH_EVENT]: 'An internal AuthError has occurred.',\n    [AuthErrorCode.INVALID_CODE]:\n      'The SMS verification code used to create the phone auth credential is ' +\n      'invalid. Please resend the verification code sms and be sure to use the ' +\n      'verification code provided by the user.',\n    [AuthErrorCode.INVALID_CONTINUE_URI]:\n      'The continue URL provided in the request is invalid.',\n    [AuthErrorCode.INVALID_CORDOVA_CONFIGURATION]:\n      'The following Cordova plugins must be installed to enable OAuth sign-in: ' +\n      'cordova-plugin-buildinfo, cordova-universal-links-plugin, ' +\n      'cordova-plugin-browsertab, cordova-plugin-inappbrowser and ' +\n      'cordova-plugin-customurlscheme.',\n    [AuthErrorCode.INVALID_CUSTOM_TOKEN]:\n      'The custom token format is incorrect. Please check the documentation.',\n    [AuthErrorCode.INVALID_DYNAMIC_LINK_DOMAIN]:\n      'The provided dynamic link domain is not configured or authorized for the current project.',\n    [AuthErrorCode.INVALID_EMAIL]: 'The email address is badly formatted.',\n    [AuthErrorCode.INVALID_EMULATOR_SCHEME]:\n      'Emulator URL must start with a valid scheme (http:// or https://).',\n    [AuthErrorCode.INVALID_API_KEY]:\n      'Your API key is invalid, please check you have copied it correctly.',\n    [AuthErrorCode.INVALID_CERT_HASH]:\n      'The SHA-1 certificate hash provided is invalid.',\n    [AuthErrorCode.INVALID_CREDENTIAL]:\n      'The supplied auth credential is incorrect, malformed or has expired.',\n    [AuthErrorCode.INVALID_MESSAGE_PAYLOAD]:\n      'The email template corresponding to this action contains invalid characters in its message. ' +\n      'Please fix by going to the Auth email templates section in the Firebase Console.',\n    [AuthErrorCode.INVALID_MFA_SESSION]:\n      'The request does not contain a valid proof of first factor successful sign-in.',\n    [AuthErrorCode.INVALID_OAUTH_PROVIDER]:\n      'EmailAuthProvider is not supported for this operation. This operation ' +\n      'only supports OAuth providers.',\n    [AuthErrorCode.INVALID_OAUTH_CLIENT_ID]:\n      'The OAuth client ID provided is either invalid or does not match the ' +\n      'specified API key.',\n    [AuthErrorCode.INVALID_ORIGIN]:\n      'This domain is not authorized for OAuth operations for your Firebase ' +\n      'project. Edit the list of authorized domains from the Firebase console.',\n    [AuthErrorCode.INVALID_OOB_CODE]:\n      'The action code is invalid. This can happen if the code is malformed, ' +\n      'expired, or has already been used.',\n    [AuthErrorCode.INVALID_PASSWORD]:\n      'The password is invalid or the user does not have a password.',\n    [AuthErrorCode.INVALID_PERSISTENCE]:\n      'The specified persistence type is invalid. It can only be local, session or none.',\n    [AuthErrorCode.INVALID_PHONE_NUMBER]:\n      'The format of the phone number provided is incorrect. Please enter the ' +\n      'phone number in a format that can be parsed into E.164 format. E.164 ' +\n      'phone numbers are written in the format [+][country code][subscriber ' +\n      'number including area code].',\n    [AuthErrorCode.INVALID_PROVIDER_ID]:\n      'The specified provider ID is invalid.',\n    [AuthErrorCode.INVALID_RECIPIENT_EMAIL]:\n      'The email corresponding to this action failed to send as the provided ' +\n      'recipient email address is invalid.',\n    [AuthErrorCode.INVALID_SENDER]:\n      'The email template corresponding to this action contains an invalid sender email or name. ' +\n      'Please fix by going to the Auth email templates section in the Firebase Console.',\n    [AuthErrorCode.INVALID_SESSION_INFO]:\n      'The verification ID used to create the phone auth credential is invalid.',\n    [AuthErrorCode.INVALID_TENANT_ID]:\n      \"The Auth instance's tenant ID is invalid.\",\n    [AuthErrorCode.LOGIN_BLOCKED]:\n      'Login blocked by user-provided method: {$originalMessage}',\n    [AuthErrorCode.MISSING_ANDROID_PACKAGE_NAME]:\n      'An Android Package Name must be provided if the Android App is required to be installed.',\n    [AuthErrorCode.MISSING_AUTH_DOMAIN]:\n      'Be sure to include authDomain when calling firebase.initializeApp(), ' +\n      'by following the instructions in the Firebase console.',\n    [AuthErrorCode.MISSING_APP_CREDENTIAL]:\n      'The phone verification request is missing an application verifier ' +\n      'assertion. A reCAPTCHA response token needs to be provided.',\n    [AuthErrorCode.MISSING_CODE]:\n      'The phone auth credential was created with an empty SMS verification code.',\n    [AuthErrorCode.MISSING_CONTINUE_URI]:\n      'A continue URL must be provided in the request.',\n    [AuthErrorCode.MISSING_IFRAME_START]: 'An internal AuthError has occurred.',\n    [AuthErrorCode.MISSING_IOS_BUNDLE_ID]:\n      'An iOS Bundle ID must be provided if an App Store ID is provided.',\n    [AuthErrorCode.MISSING_OR_INVALID_NONCE]:\n      'The request does not contain a valid nonce. This can occur if the ' +\n      'SHA-256 hash of the provided raw nonce does not match the hashed nonce ' +\n      'in the ID token payload.',\n    [AuthErrorCode.MISSING_PASSWORD]: 'A non-empty password must be provided',\n    [AuthErrorCode.MISSING_MFA_INFO]:\n      'No second factor identifier is provided.',\n    [AuthErrorCode.MISSING_MFA_SESSION]:\n      'The request is missing proof of first factor successful sign-in.',\n    [AuthErrorCode.MISSING_PHONE_NUMBER]:\n      'To send verification codes, provide a phone number for the recipient.',\n    [AuthErrorCode.MISSING_SESSION_INFO]:\n      'The phone auth credential was created with an empty verification ID.',\n    [AuthErrorCode.MODULE_DESTROYED]:\n      'This instance of FirebaseApp has been deleted.',\n    [AuthErrorCode.MFA_INFO_NOT_FOUND]:\n      'The user does not have a second factor matching the identifier provided.',\n    [AuthErrorCode.MFA_REQUIRED]:\n      'Proof of ownership of a second factor is required to complete sign-in.',\n    [AuthErrorCode.NEED_CONFIRMATION]:\n      'An account already exists with the same email address but different ' +\n      'sign-in credentials. Sign in using a provider associated with this ' +\n      'email address.',\n    [AuthErrorCode.NETWORK_REQUEST_FAILED]:\n      'A network AuthError (such as timeout, interrupted connection or unreachable host) has occurred.',\n    [AuthErrorCode.NO_AUTH_EVENT]: 'An internal AuthError has occurred.',\n    [AuthErrorCode.NO_SUCH_PROVIDER]:\n      'User was not linked to an account with the given provider.',\n    [AuthErrorCode.NULL_USER]:\n      'A null user object was provided as the argument for an operation which ' +\n      'requires a non-null user object.',\n    [AuthErrorCode.OPERATION_NOT_ALLOWED]:\n      'The given sign-in provider is disabled for this Firebase project. ' +\n      'Enable it in the Firebase console, under the sign-in method tab of the ' +\n      'Auth section.',\n    [AuthErrorCode.OPERATION_NOT_SUPPORTED]:\n      'This operation is not supported in the environment this application is ' +\n      'running on. \"location.protocol\" must be http, https or chrome-extension' +\n      ' and web storage must be enabled.',\n    [AuthErrorCode.POPUP_BLOCKED]:\n      'Unable to establish a connection with the popup. It may have been blocked by the browser.',\n    [AuthErrorCode.POPUP_CLOSED_BY_USER]:\n      'The popup has been closed by the user before finalizing the operation.',\n    [AuthErrorCode.PROVIDER_ALREADY_LINKED]:\n      'User can only be linked to one identity for the given provider.',\n    [AuthErrorCode.QUOTA_EXCEEDED]:\n      \"The project's quota for this operation has been exceeded.\",\n    [AuthErrorCode.REDIRECT_CANCELLED_BY_USER]:\n      'The redirect operation has been cancelled by the user before finalizing.',\n    [AuthErrorCode.REDIRECT_OPERATION_PENDING]:\n      'A redirect sign-in operation is already pending.',\n    [AuthErrorCode.REJECTED_CREDENTIAL]:\n      'The request contains malformed or mismatching credentials.',\n    [AuthErrorCode.SECOND_FACTOR_ALREADY_ENROLLED]:\n      'The second factor is already enrolled on this account.',\n    [AuthErrorCode.SECOND_FACTOR_LIMIT_EXCEEDED]:\n      'The maximum allowed number of second factors on a user has been exceeded.',\n    [AuthErrorCode.TENANT_ID_MISMATCH]:\n      \"The provided tenant ID does not match the Auth instance's tenant ID\",\n    [AuthErrorCode.TIMEOUT]: 'The operation has timed out.',\n    [AuthErrorCode.TOKEN_EXPIRED]:\n      \"The user's credential is no longer valid. The user must sign in again.\",\n    [AuthErrorCode.TOO_MANY_ATTEMPTS_TRY_LATER]:\n      'We have blocked all requests from this device due to unusual activity. ' +\n      'Try again later.',\n    [AuthErrorCode.UNAUTHORIZED_DOMAIN]:\n      'The domain of the continue URL is not whitelisted.  Please whitelist ' +\n      'the domain in the Firebase console.',\n    [AuthErrorCode.UNSUPPORTED_FIRST_FACTOR]:\n      'Enrolling a second factor or signing in with a multi-factor account requires sign-in with a supported first factor.',\n    [AuthErrorCode.UNSUPPORTED_PERSISTENCE]:\n      'The current environment does not support the specified persistence type.',\n    [AuthErrorCode.UNSUPPORTED_TENANT_OPERATION]:\n      'This operation is not supported in a multi-tenant context.',\n    [AuthErrorCode.UNVERIFIED_EMAIL]:\n      'The operation requires a verified email.',\n    [AuthErrorCode.USER_CANCELLED]:\n      'The user did not grant your application the permissions it requested.',\n    [AuthErrorCode.USER_DELETED]:\n      'There is no user record corresponding to this identifier. The user may ' +\n      'have been deleted.',\n    [AuthErrorCode.USER_DISABLED]:\n      'The user account has been disabled by an administrator.',\n    [AuthErrorCode.USER_MISMATCH]:\n      'The supplied credentials do not correspond to the previously signed in user.',\n    [AuthErrorCode.USER_SIGNED_OUT]: '',\n    [AuthErrorCode.WEAK_PASSWORD]:\n      'The password must be 6 characters long or more.',\n    [AuthErrorCode.WEB_STORAGE_UNSUPPORTED]:\n      'This browser is not supported or 3rd party cookies and data may be disabled.',\n    [AuthErrorCode.ALREADY_INITIALIZED]:\n      'initializeAuth() has already been called with ' +\n      'different options. To avoid this error, call initializeAuth() with the ' +\n      'same options as when it was originally called, or call getAuth() to return the' +\n      ' already initialized instance.',\n    [AuthErrorCode.MISSING_RECAPTCHA_TOKEN]:\n      'The reCAPTCHA token is missing when sending request to the backend.',\n    [AuthErrorCode.INVALID_RECAPTCHA_TOKEN]:\n      'The reCAPTCHA token is invalid when sending request to the backend.',\n    [AuthErrorCode.INVALID_RECAPTCHA_ACTION]:\n      'The reCAPTCHA action is invalid when sending request to the backend.',\n    [AuthErrorCode.RECAPTCHA_NOT_ENABLED]:\n      'reCAPTCHA Enterprise integration is not enabled for this project.',\n    [AuthErrorCode.MISSING_CLIENT_TYPE]:\n      'The reCAPTCHA client type is missing when sending request to the backend.',\n    [AuthErrorCode.MISSING_RECAPTCHA_VERSION]:\n      'The reCAPTCHA version is missing when sending request to the backend.',\n    [AuthErrorCode.INVALID_REQ_TYPE]: 'Invalid request parameters.',\n    [AuthErrorCode.INVALID_RECAPTCHA_VERSION]:\n      'The reCAPTCHA version is invalid when sending request to the backend.',\n    [AuthErrorCode.UNSUPPORTED_PASSWORD_POLICY_SCHEMA_VERSION]:\n      'The password policy received from the backend uses a schema version that is not supported by this version of the Firebase SDK.',\n    [AuthErrorCode.PASSWORD_DOES_NOT_MEET_REQUIREMENTS]:\n      'The password does not meet the requirements.'\n  };\n}\n\nexport interface ErrorMapRetriever extends AuthErrorMap {\n  (): ErrorMap<AuthErrorCode>;\n}\n\nfunction _prodErrorMap(): ErrorMap<AuthErrorCode> {\n  // We will include this one message in the prod error map since by the very\n  // nature of this error, developers will never be able to see the message\n  // using the debugErrorMap (which is installed during auth initialization).\n  return {\n    [AuthErrorCode.DEPENDENT_SDK_INIT_BEFORE_AUTH]:\n      'Another Firebase SDK was initialized and is trying to use Auth before Auth is ' +\n      'initialized. Please be sure to call `initializeAuth` or `getAuth` before ' +\n      'starting any other Firebase SDK.'\n  } as ErrorMap<AuthErrorCode>;\n}\n\n/**\n * A verbose error map with detailed descriptions for most error codes.\n *\n * See discussion at {@link AuthErrorMap}\n *\n * @public\n */\nexport const debugErrorMap: AuthErrorMap = _debugErrorMap;\n\n/**\n * A minimal error map with all verbose error messages stripped.\n *\n * See discussion at {@link AuthErrorMap}\n *\n * @public\n */\nexport const prodErrorMap: AuthErrorMap = _prodErrorMap;\n\nexport interface NamedErrorParams {\n  appName: AppName;\n  credential?: AuthCredential;\n  email?: string;\n  phoneNumber?: string;\n  tenantId?: string;\n  user?: User;\n  _serverResponse?: object;\n}\n\n/**\n * @internal\n */\ntype GenericAuthErrorParams = {\n  [key in Exclude<\n    AuthErrorCode,\n    | AuthErrorCode.ARGUMENT_ERROR\n    | AuthErrorCode.DEPENDENT_SDK_INIT_BEFORE_AUTH\n    | AuthErrorCode.INTERNAL_ERROR\n    | AuthErrorCode.MFA_REQUIRED\n    | AuthErrorCode.NO_AUTH_EVENT\n    | AuthErrorCode.OPERATION_NOT_SUPPORTED\n  >]: {\n    appName?: AppName;\n    email?: string;\n    phoneNumber?: string;\n    message?: string;\n  };\n};\n\n/**\n * @internal\n */\nexport interface AuthErrorParams extends GenericAuthErrorParams {\n  [AuthErrorCode.ARGUMENT_ERROR]: { appName?: AppName };\n  [AuthErrorCode.DEPENDENT_SDK_INIT_BEFORE_AUTH]: { appName?: AppName };\n  [AuthErrorCode.INTERNAL_ERROR]: { appName?: AppName };\n  [AuthErrorCode.LOGIN_BLOCKED]: {\n    appName?: AppName;\n    originalMessage?: string;\n  };\n  [AuthErrorCode.OPERATION_NOT_SUPPORTED]: { appName?: AppName };\n  [AuthErrorCode.NO_AUTH_EVENT]: { appName?: AppName };\n  [AuthErrorCode.MFA_REQUIRED]: {\n    appName: AppName;\n    _serverResponse: IdTokenMfaResponse;\n  };\n  [AuthErrorCode.INVALID_CORDOVA_CONFIGURATION]: {\n    appName: AppName;\n    missingPlugin?: string;\n  };\n}\n\nexport const _DEFAULT_AUTH_ERROR_FACTORY = new ErrorFactory<\n  AuthErrorCode,\n  AuthErrorParams\n>('auth', 'Firebase', _prodErrorMap());\n\n/**\n * A map of potential `Auth` error codes, for easier comparison with errors\n * thrown by the SDK.\n *\n * @remarks\n * Note that you can't tree-shake individual keys\n * in the map, so by using the map you might substantially increase your\n * bundle size.\n *\n * @public\n */\nexport const AUTH_ERROR_CODES_MAP_DO_NOT_USE_INTERNALLY = {\n  ADMIN_ONLY_OPERATION: 'auth/admin-restricted-operation',\n  ARGUMENT_ERROR: 'auth/argument-error',\n  APP_NOT_AUTHORIZED: 'auth/app-not-authorized',\n  APP_NOT_INSTALLED: 'auth/app-not-installed',\n  CAPTCHA_CHECK_FAILED: 'auth/captcha-check-failed',\n  CODE_EXPIRED: 'auth/code-expired',\n  CORDOVA_NOT_READY: 'auth/cordova-not-ready',\n  CORS_UNSUPPORTED: 'auth/cors-unsupported',\n  CREDENTIAL_ALREADY_IN_USE: 'auth/credential-already-in-use',\n  CREDENTIAL_MISMATCH: 'auth/custom-token-mismatch',\n  CREDENTIAL_TOO_OLD_LOGIN_AGAIN: 'auth/requires-recent-login',\n  DEPENDENT_SDK_INIT_BEFORE_AUTH: 'auth/dependent-sdk-initialized-before-auth',\n  DYNAMIC_LINK_NOT_ACTIVATED: 'auth/dynamic-link-not-activated',\n  EMAIL_CHANGE_NEEDS_VERIFICATION: 'auth/email-change-needs-verification',\n  EMAIL_EXISTS: 'auth/email-already-in-use',\n  EMULATOR_CONFIG_FAILED: 'auth/emulator-config-failed',\n  EXPIRED_OOB_CODE: 'auth/expired-action-code',\n  EXPIRED_POPUP_REQUEST: 'auth/cancelled-popup-request',\n  INTERNAL_ERROR: 'auth/internal-error',\n  INVALID_API_KEY: 'auth/invalid-api-key',\n  INVALID_APP_CREDENTIAL: 'auth/invalid-app-credential',\n  INVALID_APP_ID: 'auth/invalid-app-id',\n  INVALID_AUTH: 'auth/invalid-user-token',\n  INVALID_AUTH_EVENT: 'auth/invalid-auth-event',\n  INVALID_CERT_HASH: 'auth/invalid-cert-hash',\n  INVALID_CODE: 'auth/invalid-verification-code',\n  INVALID_CONTINUE_URI: 'auth/invalid-continue-uri',\n  INVALID_CORDOVA_CONFIGURATION: 'auth/invalid-cordova-configuration',\n  INVALID_CUSTOM_TOKEN: 'auth/invalid-custom-token',\n  INVALID_DYNAMIC_LINK_DOMAIN: 'auth/invalid-dynamic-link-domain',\n  INVALID_EMAIL: 'auth/invalid-email',\n  INVALID_EMULATOR_SCHEME: 'auth/invalid-emulator-scheme',\n  INVALID_IDP_RESPONSE: 'auth/invalid-credential',\n  INVALID_LOGIN_CREDENTIALS: 'auth/invalid-credential',\n  INVALID_MESSAGE_PAYLOAD: 'auth/invalid-message-payload',\n  INVALID_MFA_SESSION: 'auth/invalid-multi-factor-session',\n  INVALID_OAUTH_CLIENT_ID: 'auth/invalid-oauth-client-id',\n  INVALID_OAUTH_PROVIDER: 'auth/invalid-oauth-provider',\n  INVALID_OOB_CODE: 'auth/invalid-action-code',\n  INVALID_ORIGIN: 'auth/unauthorized-domain',\n  INVALID_PASSWORD: 'auth/wrong-password',\n  INVALID_PERSISTENCE: 'auth/invalid-persistence-type',\n  INVALID_PHONE_NUMBER: 'auth/invalid-phone-number',\n  INVALID_PROVIDER_ID: 'auth/invalid-provider-id',\n  INVALID_RECIPIENT_EMAIL: 'auth/invalid-recipient-email',\n  INVALID_SENDER: 'auth/invalid-sender',\n  INVALID_SESSION_INFO: 'auth/invalid-verification-id',\n  INVALID_TENANT_ID: 'auth/invalid-tenant-id',\n  MFA_INFO_NOT_FOUND: 'auth/multi-factor-info-not-found',\n  MFA_REQUIRED: 'auth/multi-factor-auth-required',\n  MISSING_ANDROID_PACKAGE_NAME: 'auth/missing-android-pkg-name',\n  MISSING_APP_CREDENTIAL: 'auth/missing-app-credential',\n  MISSING_AUTH_DOMAIN: 'auth/auth-domain-config-required',\n  MISSING_CODE: 'auth/missing-verification-code',\n  MISSING_CONTINUE_URI: 'auth/missing-continue-uri',\n  MISSING_IFRAME_START: 'auth/missing-iframe-start',\n  MISSING_IOS_BUNDLE_ID: 'auth/missing-ios-bundle-id',\n  MISSING_OR_INVALID_NONCE: 'auth/missing-or-invalid-nonce',\n  MISSING_MFA_INFO: 'auth/missing-multi-factor-info',\n  MISSING_MFA_SESSION: 'auth/missing-multi-factor-session',\n  MISSING_PHONE_NUMBER: 'auth/missing-phone-number',\n  MISSING_SESSION_INFO: 'auth/missing-verification-id',\n  MODULE_DESTROYED: 'auth/app-deleted',\n  NEED_CONFIRMATION: 'auth/account-exists-with-different-credential',\n  NETWORK_REQUEST_FAILED: 'auth/network-request-failed',\n  NULL_USER: 'auth/null-user',\n  NO_AUTH_EVENT: 'auth/no-auth-event',\n  NO_SUCH_PROVIDER: 'auth/no-such-provider',\n  OPERATION_NOT_ALLOWED: 'auth/operation-not-allowed',\n  OPERATION_NOT_SUPPORTED: 'auth/operation-not-supported-in-this-environment',\n  POPUP_BLOCKED: 'auth/popup-blocked',\n  POPUP_CLOSED_BY_USER: 'auth/popup-closed-by-user',\n  PROVIDER_ALREADY_LINKED: 'auth/provider-already-linked',\n  QUOTA_EXCEEDED: 'auth/quota-exceeded',\n  REDIRECT_CANCELLED_BY_USER: 'auth/redirect-cancelled-by-user',\n  REDIRECT_OPERATION_PENDING: 'auth/redirect-operation-pending',\n  REJECTED_CREDENTIAL: 'auth/rejected-credential',\n  SECOND_FACTOR_ALREADY_ENROLLED: 'auth/second-factor-already-in-use',\n  SECOND_FACTOR_LIMIT_EXCEEDED: 'auth/maximum-second-factor-count-exceeded',\n  TENANT_ID_MISMATCH: 'auth/tenant-id-mismatch',\n  TIMEOUT: 'auth/timeout',\n  TOKEN_EXPIRED: 'auth/user-token-expired',\n  TOO_MANY_ATTEMPTS_TRY_LATER: 'auth/too-many-requests',\n  UNAUTHORIZED_DOMAIN: 'auth/unauthorized-continue-uri',\n  UNSUPPORTED_FIRST_FACTOR: 'auth/unsupported-first-factor',\n  UNSUPPORTED_PERSISTENCE: 'auth/unsupported-persistence-type',\n  UNSUPPORTED_TENANT_OPERATION: 'auth/unsupported-tenant-operation',\n  UNVERIFIED_EMAIL: 'auth/unverified-email',\n  USER_CANCELLED: 'auth/user-cancelled',\n  USER_DELETED: 'auth/user-not-found',\n  USER_DISABLED: 'auth/user-disabled',\n  USER_MISMATCH: 'auth/user-mismatch',\n  USER_SIGNED_OUT: 'auth/user-signed-out',\n  WEAK_PASSWORD: 'auth/weak-password',\n  WEB_STORAGE_UNSUPPORTED: 'auth/web-storage-unsupported',\n  ALREADY_INITIALIZED: 'auth/already-initialized',\n  RECAPTCHA_NOT_ENABLED: 'auth/recaptcha-not-enabled',\n  MISSING_RECAPTCHA_TOKEN: 'auth/missing-recaptcha-token',\n  INVALID_RECAPTCHA_TOKEN: 'auth/invalid-recaptcha-token',\n  INVALID_RECAPTCHA_ACTION: 'auth/invalid-recaptcha-action',\n  MISSING_CLIENT_TYPE: 'auth/missing-client-type',\n  MISSING_RECAPTCHA_VERSION: 'auth/missing-recaptcha-version',\n  INVALID_RECAPTCHA_VERSION: 'auth/invalid-recaptcha-version',\n  INVALID_REQ_TYPE: 'auth/invalid-req-type'\n} as const;\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger, LogLevel } from '@firebase/logger';\nimport { SDK_VERSION } from '@firebase/app';\n\nexport { LogLevel };\n\nconst logClient = new Logger('@firebase/auth');\n\n// Helper methods are needed because variables can't be exported as read/write\nexport function _getLogLevel(): LogLevel {\n  return logClient.logLevel;\n}\n\nexport function _setLogLevel(newLevel: LogLevel): void {\n  logClient.logLevel = newLevel;\n}\n\nexport function _logDebug(msg: string, ...args: string[]): void {\n  if (logClient.logLevel <= LogLevel.DEBUG) {\n    logClient.debug(`Auth (${SDK_VERSION}): ${msg}`, ...args);\n  }\n}\n\nexport function _logWarn(msg: string, ...args: string[]): void {\n  if (logClient.logLevel <= LogLevel.WARN) {\n    logClient.warn(`Auth (${SDK_VERSION}): ${msg}`, ...args);\n  }\n}\n\nexport function _logError(msg: string, ...args: string[]): void {\n  if (logClient.logLevel <= LogLevel.ERROR) {\n    logClient.error(`Auth (${SDK_VERSION}): ${msg}`, ...args);\n  }\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Auth } from '../../model/public_types';\nimport { ErrorFactory, FirebaseError } from '@firebase/util';\nimport { AuthInternal } from '../../model/auth';\nimport {\n  _DEFAULT_AUTH_ERROR_FACTORY,\n  AuthErrorCode,\n  AuthErrorParams,\n  prodErrorMap,\n  ErrorMapRetriever\n} from '../errors';\nimport { _logError } from './log';\n\ntype AuthErrorListParams<K> = K extends keyof AuthErrorParams\n  ? [AuthErrorParams[K]]\n  : [];\ntype LessAppName<K extends AuthErrorCode> = Omit<AuthErrorParams[K], 'appName'>;\n\n/**\n * Unconditionally fails, throwing a developer facing INTERNAL_ERROR\n *\n * @example\n * ```javascript\n * fail(auth, AuthErrorCode.MFA_REQUIRED);  // Error: the MFA_REQUIRED error needs more params than appName\n * fail(auth, AuthErrorCode.MFA_REQUIRED, {serverResponse});  // Compiles\n * fail(AuthErrorCode.INTERNAL_ERROR);  // Compiles; internal error does not need appName\n * fail(AuthErrorCode.USER_DELETED);  // Error: USER_DELETED requires app name\n * fail(auth, AuthErrorCode.USER_DELETED);  // Compiles; USER_DELETED _only_ needs app name\n * ```\n *\n * @param appName App name for tagging the error\n * @throws FirebaseError\n */\nexport function _fail<K extends AuthErrorCode>(\n  code: K,\n  ...data: {} extends AuthErrorParams[K]\n    ? [AuthErrorParams[K]?]\n    : [AuthErrorParams[K]]\n): never;\nexport function _fail<K extends AuthErrorCode>(\n  auth: Auth,\n  code: K,\n  ...data: {} extends LessAppName<K> ? [LessAppName<K>?] : [LessAppName<K>]\n): never;\nexport function _fail<K extends AuthErrorCode>(\n  authOrCode: Auth | K,\n  ...rest: unknown[]\n): never {\n  throw createErrorInternal(authOrCode, ...rest);\n}\n\nexport function _createError<K extends AuthErrorCode>(\n  code: K,\n  ...data: {} extends AuthErrorParams[K]\n    ? [AuthErrorParams[K]?]\n    : [AuthErrorParams[K]]\n): FirebaseError;\nexport function _createError<K extends AuthErrorCode>(\n  auth: Auth,\n  code: K,\n  ...data: {} extends LessAppName<K> ? [LessAppName<K>?] : [LessAppName<K>]\n): FirebaseError;\nexport function _createError<K extends AuthErrorCode>(\n  authOrCode: Auth | K,\n  ...rest: unknown[]\n): FirebaseError {\n  return createErrorInternal(authOrCode, ...rest);\n}\n\nexport function _errorWithCustomMessage(\n  auth: Auth,\n  code: AuthErrorCode,\n  message: string\n): FirebaseError {\n  const errorMap = {\n    ...(prodErrorMap as ErrorMapRetriever)(),\n    [code]: message\n  };\n  const factory = new ErrorFactory<AuthErrorCode, AuthErrorParams>(\n    'auth',\n    'Firebase',\n    errorMap\n  );\n  return factory.create(code, {\n    appName: auth.name\n  });\n}\n\nexport function _serverAppCurrentUserOperationNotSupportedError(\n  auth: Auth\n): FirebaseError {\n  return _errorWithCustomMessage(\n    auth,\n    AuthErrorCode.OPERATION_NOT_SUPPORTED,\n    'Operations that alter the current user are not supported in conjunction with FirebaseServerApp'\n  );\n}\n\nexport function _assertInstanceOf(\n  auth: Auth,\n  object: object,\n  instance: unknown\n): void {\n  const constructorInstance = instance as { new (...args: unknown[]): unknown };\n  if (!(object instanceof constructorInstance)) {\n    if (constructorInstance.name !== object.constructor.name) {\n      _fail(auth, AuthErrorCode.ARGUMENT_ERROR);\n    }\n\n    throw _errorWithCustomMessage(\n      auth,\n      AuthErrorCode.ARGUMENT_ERROR,\n      `Type of ${object.constructor.name} does not match expected instance.` +\n        `Did you pass a reference from a different Auth SDK?`\n    );\n  }\n}\n\nfunction createErrorInternal<K extends AuthErrorCode>(\n  authOrCode: Auth | K,\n  ...rest: unknown[]\n): FirebaseError {\n  if (typeof authOrCode !== 'string') {\n    const code = rest[0] as K;\n    const fullParams = [...rest.slice(1)] as AuthErrorListParams<K>;\n    if (fullParams[0]) {\n      fullParams[0].appName = authOrCode.name;\n    }\n\n    return (authOrCode as AuthInternal)._errorFactory.create(\n      code,\n      ...fullParams\n    );\n  }\n\n  return _DEFAULT_AUTH_ERROR_FACTORY.create(\n    authOrCode,\n    ...(rest as AuthErrorListParams<K>)\n  );\n}\n\nexport function _assert<K extends AuthErrorCode>(\n  assertion: unknown,\n  code: K,\n  ...data: {} extends AuthErrorParams[K]\n    ? [AuthErrorParams[K]?]\n    : [AuthErrorParams[K]]\n): asserts assertion;\nexport function _assert<K extends AuthErrorCode>(\n  assertion: unknown,\n  auth: Auth,\n  code: K,\n  ...data: {} extends LessAppName<K> ? [LessAppName<K>?] : [LessAppName<K>]\n): asserts assertion;\nexport function _assert<K extends AuthErrorCode>(\n  assertion: unknown,\n  authOrCode: Auth | K,\n  ...rest: unknown[]\n): asserts assertion {\n  if (!assertion) {\n    throw createErrorInternal(authOrCode, ...rest);\n  }\n}\n\n// We really do want to accept literally any function type here\n// eslint-disable-next-line @typescript-eslint/ban-types\ntype TypeExpectation = Function | string | MapType;\n\ninterface MapType extends Record<string, TypeExpectation | Optional> {}\n\nclass Optional {\n  constructor(readonly type: TypeExpectation) {}\n}\n\nexport function opt(type: TypeExpectation): Optional {\n  return new Optional(type);\n}\n\n/**\n * Asserts the runtime types of arguments. The 'expected' field can be one of\n * a class, a string (representing a \"typeof\" call), or a record map of name\n * to type. Furthermore, the opt() function can be used to mark a field as\n * optional. For example:\n *\n * function foo(auth: Auth, profile: {displayName?: string}, update = false) {\n *   assertTypes(arguments, [AuthImpl, {displayName: opt('string')}, opt('boolean')]);\n * }\n *\n * opt() can be used for any type:\n * function foo(auth?: Auth) {\n *   assertTypes(arguments, [opt(AuthImpl)]);\n * }\n *\n * The string types can be or'd together, and you can use \"null\" as well (note\n * that typeof null === 'object'; this is an edge case). For example:\n *\n * function foo(profile: {displayName?: string | null}) {\n *   assertTypes(arguments, [{displayName: opt('string|null')}]);\n * }\n *\n * @param args\n * @param expected\n */\nexport function assertTypes(\n  args: Omit<IArguments, 'callee'>,\n  ...expected: Array<TypeExpectation | Optional>\n): void {\n  if (args.length > expected.length) {\n    _fail(AuthErrorCode.ARGUMENT_ERROR, {});\n  }\n\n  for (let i = 0; i < expected.length; i++) {\n    let expect = expected[i];\n    const arg = args[i];\n\n    if (expect instanceof Optional) {\n      // If the arg is undefined, then it matches \"optional\" and we can move to\n      // the next arg\n      if (typeof arg === 'undefined') {\n        continue;\n      }\n      expect = expect.type;\n    }\n\n    if (typeof expect === 'string') {\n      // Handle the edge case for null because typeof null === 'object'\n      if (expect.includes('null') && arg === null) {\n        continue;\n      }\n\n      const required = expect.split('|');\n      _assert(required.includes(typeof arg), AuthErrorCode.ARGUMENT_ERROR, {});\n    } else if (typeof expect === 'object') {\n      // Recursively check record arguments\n      const record = arg as Record<string, unknown>;\n      const map = expect as MapType;\n      const keys = Object.keys(expect);\n\n      assertTypes(\n        keys.map(k => record[k]),\n        ...keys.map(k => map[k])\n      );\n    } else {\n      _assert(arg instanceof expect, AuthErrorCode.ARGUMENT_ERROR, {});\n    }\n  }\n}\n\n/**\n * Unconditionally fails, throwing an internal error with the given message.\n *\n * @param failure type of failure encountered\n * @throws Error\n */\nexport function debugFail(failure: string): never {\n  // Log the failure in addition to throw an exception, just in case the\n  // exception is swallowed.\n  const message = `INTERNAL ASSERTION FAILED: ` + failure;\n  _logError(message);\n\n  // NOTE: We don't use FirebaseError here because these are internal failures\n  // that cannot be handled by the user. (Also it would create a circular\n  // dependency between the error and assert modules which doesn't work.)\n  throw new Error(message);\n}\n\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * @param assertion\n * @param message\n */\nexport function debugAssert(\n  assertion: unknown,\n  message: string\n): asserts assertion {\n  if (!assertion) {\n    debugFail(message);\n  }\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function _getCurrentUrl(): string {\n  return (typeof self !== 'undefined' && self.location?.href) || '';\n}\n\nexport function _isHttpOrHttps(): boolean {\n  return _getCurrentScheme() === 'http:' || _getCurrentScheme() === 'https:';\n}\n\nexport function _getCurrentScheme(): string | null {\n  return (typeof self !== 'undefined' && self.location?.protocol) || null;\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isBrowserExtension } from '@firebase/util';\nimport { _isHttpOrHttps } from './location';\n\n/**\n * Determine whether the browser is working online\n */\nexport function _isOnline(): boolean {\n  if (\n    typeof navigator !== 'undefined' &&\n    navigator &&\n    'onLine' in navigator &&\n    typeof navigator.onLine === 'boolean' &&\n    // Apply only for traditional web apps and Chrome extensions.\n    // This is especially true for Cordova apps which have unreliable\n    // navigator.onLine behavior unless cordova-plugin-network-information is\n    // installed which overwrites the native navigator.onLine value and\n    // defines navigator.connection.\n    (_isHttpOrHttps() || isBrowserExtension() || 'connection' in navigator)\n  ) {\n    return navigator.onLine;\n  }\n  // If we can't determine the state, assume it is online.\n  return true;\n}\n\nexport function _getUserLanguage(): string | null {\n  if (typeof navigator === 'undefined') {\n    return null;\n  }\n  const navigatorLanguage: NavigatorLanguage = navigator;\n  return (\n    // Most reliable, but only supported in Chrome/Firefox.\n    (navigatorLanguage.languages && navigatorLanguage.languages[0]) ||\n    // Supported in most browsers, but returns the language of the browser\n    // UI, not the language set in browser settings.\n    navigatorLanguage.language ||\n    // Couldn't determine language.\n    null\n  );\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isMobileCordova, isReactNative } from '@firebase/util';\nimport { _isOnline } from './navigator';\nimport { debugAssert } from './assert';\n\nexport const enum DelayMin {\n  OFFLINE = 5000\n}\n\n/**\n * A structure to help pick between a range of long and short delay durations\n * depending on the current environment. In general, the long delay is used for\n * mobile environments whereas short delays are used for desktop environments.\n */\nexport class Delay {\n  // The default value for the offline delay timeout in ms.\n\n  private readonly isMobile: boolean;\n  constructor(\n    private readonly shortDelay: number,\n    private readonly longDelay: number\n  ) {\n    // Internal error when improperly initialized.\n    debugAssert(\n      longDelay > shortDelay,\n      'Short delay should be less than long delay!'\n    );\n    this.isMobile = isMobileCordova() || isReactNative();\n  }\n\n  get(): number {\n    if (!_isOnline()) {\n      // Pick the shorter timeout.\n      return Math.min(DelayMin.OFFLINE, this.shortDelay);\n    }\n    // If running in a mobile environment, return the long delay, otherwise\n    // return the short delay.\n    // This could be improved in the future to dynamically change based on other\n    // variables instead of just reading the current environment.\n    return this.isMobile ? this.longDelay : this.shortDelay;\n  }\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ConfigInternal } from '../../model/auth';\nimport { debugAssert } from './assert';\n\nexport function _emulatorUrl(config: ConfigInternal, path?: string): string {\n  debugAssert(config.emulator, 'Emulator should always be set here');\n  const { url } = config.emulator;\n\n  if (!path) {\n    return url;\n  }\n\n  return `${url}${path.startsWith('/') ? path.slice(1) : path}`;\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { debugFail } from './assert';\n\nexport class FetchProvider {\n  private static fetchImpl: typeof fetch | null;\n  private static headersImpl: typeof Headers | null;\n  private static responseImpl: typeof Response | null;\n\n  static initialize(\n    fetchImpl: typeof fetch,\n    headersImpl?: typeof Headers,\n    responseImpl?: typeof Response\n  ): void {\n    this.fetchImpl = fetchImpl;\n    if (headersImpl) {\n      this.headersImpl = headersImpl;\n    }\n    if (responseImpl) {\n      this.responseImpl = responseImpl;\n    }\n  }\n\n  static fetch(): typeof fetch {\n    if (this.fetchImpl) {\n      return this.fetchImpl;\n    }\n    if (typeof self !== 'undefined' && 'fetch' in self) {\n      return self.fetch;\n    }\n    if (typeof globalThis !== 'undefined' && globalThis.fetch) {\n      return globalThis.fetch;\n    }\n    if (typeof fetch !== 'undefined') {\n      return fetch;\n    }\n    debugFail(\n      'Could not find fetch implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill'\n    );\n  }\n\n  static headers(): typeof Headers {\n    if (this.headersImpl) {\n      return this.headersImpl;\n    }\n    if (typeof self !== 'undefined' && 'Headers' in self) {\n      return self.Headers;\n    }\n    if (typeof globalThis !== 'undefined' && globalThis.Headers) {\n      return globalThis.Headers;\n    }\n    if (typeof Headers !== 'undefined') {\n      return Headers;\n    }\n    debugFail(\n      'Could not find Headers implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill'\n    );\n  }\n\n  static response(): typeof Response {\n    if (this.responseImpl) {\n      return this.responseImpl;\n    }\n    if (typeof self !== 'undefined' && 'Response' in self) {\n      return self.Response;\n    }\n    if (typeof globalThis !== 'undefined' && globalThis.Response) {\n      return globalThis.Response;\n    }\n    if (typeof Response !== 'undefined') {\n      return Response;\n    }\n    debugFail(\n      'Could not find Response implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill'\n    );\n  }\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthErrorCode } from '../core/errors';\n\n/**\n * Errors that can be returned by the backend\n */\nexport const enum ServerError {\n  ADMIN_ONLY_OPERATION = 'ADMIN_ONLY_OPERATION',\n  BLOCKING_FUNCTION_ERROR_RESPONSE = 'BLOCKING_FUNCTION_ERROR_RESPONSE',\n  CAPTCHA_CHECK_FAILED = 'CAPTCHA_CHECK_FAILED',\n  CORS_UNSUPPORTED = 'CORS_UNSUPPORTED',\n  CREDENTIAL_MISMATCH = 'CREDENTIAL_MISMATCH',\n  CREDENTIAL_TOO_OLD_LOGIN_AGAIN = 'CREDENTIAL_TOO_OLD_LOGIN_AGAIN',\n  DYNAMIC_LINK_NOT_ACTIVATED = 'DYNAMIC_LINK_NOT_ACTIVATED',\n  EMAIL_CHANGE_NEEDS_VERIFICATION = 'EMAIL_CHANGE_NEEDS_VERIFICATION',\n  EMAIL_EXISTS = 'EMAIL_EXISTS',\n  EMAIL_NOT_FOUND = 'EMAIL_NOT_FOUND',\n  EXPIRED_OOB_CODE = 'EXPIRED_OOB_CODE',\n  FEDERATED_USER_ID_ALREADY_LINKED = 'FEDERATED_USER_ID_ALREADY_LINKED',\n  INVALID_APP_CREDENTIAL = 'INVALID_APP_CREDENTIAL',\n  INVALID_APP_ID = 'INVALID_APP_ID',\n  INVALID_CERT_HASH = 'INVALID_CERT_HASH',\n  INVALID_CODE = 'INVALID_CODE',\n  INVALID_CONTINUE_URI = 'INVALID_CONTINUE_URI',\n  INVALID_CUSTOM_TOKEN = 'INVALID_CUSTOM_TOKEN',\n  INVALID_DYNAMIC_LINK_DOMAIN = 'INVALID_DYNAMIC_LINK_DOMAIN',\n  INVALID_EMAIL = 'INVALID_EMAIL',\n  INVALID_ID_TOKEN = 'INVALID_ID_TOKEN',\n  INVALID_IDP_RESPONSE = 'INVALID_IDP_RESPONSE',\n  INVALID_IDENTIFIER = 'INVALID_IDENTIFIER',\n  INVALID_LOGIN_CREDENTIALS = 'INVALID_LOGIN_CREDENTIALS',\n  INVALID_MESSAGE_PAYLOAD = 'INVALID_MESSAGE_PAYLOAD',\n  INVALID_MFA_PENDING_CREDENTIAL = 'INVALID_MFA_PENDING_CREDENTIAL',\n  INVALID_OAUTH_CLIENT_ID = 'INVALID_OAUTH_CLIENT_ID',\n  INVALID_OOB_CODE = 'INVALID_OOB_CODE',\n  INVALID_PASSWORD = 'INVALID_PASSWORD',\n  INVALID_PENDING_TOKEN = 'INVALID_PENDING_TOKEN',\n  INVALID_PHONE_NUMBER = 'INVALID_PHONE_NUMBER',\n  INVALID_PROVIDER_ID = 'INVALID_PROVIDER_ID',\n  INVALID_RECIPIENT_EMAIL = 'INVALID_RECIPIENT_EMAIL',\n  INVALID_SENDER = 'INVALID_SENDER',\n  INVALID_SESSION_INFO = 'INVALID_SESSION_INFO',\n  INVALID_TEMPORARY_PROOF = 'INVALID_TEMPORARY_PROOF',\n  INVALID_TENANT_ID = 'INVALID_TENANT_ID',\n  MFA_ENROLLMENT_NOT_FOUND = 'MFA_ENROLLMENT_NOT_FOUND',\n  MISSING_ANDROID_PACKAGE_NAME = 'MISSING_ANDROID_PACKAGE_NAME',\n  MISSING_APP_CREDENTIAL = 'MISSING_APP_CREDENTIAL',\n  MISSING_CODE = 'MISSING_CODE',\n  MISSING_CONTINUE_URI = 'MISSING_CONTINUE_URI',\n  MISSING_CUSTOM_TOKEN = 'MISSING_CUSTOM_TOKEN',\n  MISSING_IOS_BUNDLE_ID = 'MISSING_IOS_BUNDLE_ID',\n  MISSING_MFA_ENROLLMENT_ID = 'MISSING_MFA_ENROLLMENT_ID',\n  MISSING_MFA_PENDING_CREDENTIAL = 'MISSING_MFA_PENDING_CREDENTIAL',\n  MISSING_OOB_CODE = 'MISSING_OOB_CODE',\n  MISSING_OR_INVALID_NONCE = 'MISSING_OR_INVALID_NONCE',\n  MISSING_PASSWORD = 'MISSING_PASSWORD',\n  MISSING_REQ_TYPE = 'MISSING_REQ_TYPE',\n  MISSING_PHONE_NUMBER = 'MISSING_PHONE_NUMBER',\n  MISSING_SESSION_INFO = 'MISSING_SESSION_INFO',\n  OPERATION_NOT_ALLOWED = 'OPERATION_NOT_ALLOWED',\n  PASSWORD_LOGIN_DISABLED = 'PASSWORD_LOGIN_DISABLED',\n  QUOTA_EXCEEDED = 'QUOTA_EXCEEDED',\n  RESET_PASSWORD_EXCEED_LIMIT = 'RESET_PASSWORD_EXCEED_LIMIT',\n  REJECTED_CREDENTIAL = 'REJECTED_CREDENTIAL',\n  SECOND_FACTOR_EXISTS = 'SECOND_FACTOR_EXISTS',\n  SECOND_FACTOR_LIMIT_EXCEEDED = 'SECOND_FACTOR_LIMIT_EXCEEDED',\n  SESSION_EXPIRED = 'SESSION_EXPIRED',\n  TENANT_ID_MISMATCH = 'TENANT_ID_MISMATCH',\n  TOKEN_EXPIRED = 'TOKEN_EXPIRED',\n  TOO_MANY_ATTEMPTS_TRY_LATER = 'TOO_MANY_ATTEMPTS_TRY_LATER',\n  UNSUPPORTED_FIRST_FACTOR = 'UNSUPPORTED_FIRST_FACTOR',\n  UNSUPPORTED_TENANT_OPERATION = 'UNSUPPORTED_TENANT_OPERATION',\n  UNAUTHORIZED_DOMAIN = 'UNAUTHORIZED_DOMAIN',\n  UNVERIFIED_EMAIL = 'UNVERIFIED_EMAIL',\n  USER_CANCELLED = 'USER_CANCELLED',\n  USER_DISABLED = 'USER_DISABLED',\n  USER_NOT_FOUND = 'USER_NOT_FOUND',\n  WEAK_PASSWORD = 'WEAK_PASSWORD',\n  RECAPTCHA_NOT_ENABLED = 'RECAPTCHA_NOT_ENABLED',\n  MISSING_RECAPTCHA_TOKEN = 'MISSING_RECAPTCHA_TOKEN',\n  INVALID_RECAPTCHA_TOKEN = 'INVALID_RECAPTCHA_TOKEN',\n  INVALID_RECAPTCHA_ACTION = 'INVALID_RECAPTCHA_ACTION',\n  MISSING_CLIENT_TYPE = 'MISSING_CLIENT_TYPE',\n  MISSING_RECAPTCHA_VERSION = 'MISSING_RECAPTCHA_VERSION',\n  INVALID_RECAPTCHA_VERSION = 'INVALID_RECAPTCHA_VERSION',\n  INVALID_REQ_TYPE = 'INVALID_REQ_TYPE',\n  PASSWORD_DOES_NOT_MEET_REQUIREMENTS = 'PASSWORD_DOES_NOT_MEET_REQUIREMENTS'\n}\n\n/**\n * API Response in the event of an error\n */\nexport interface JsonError {\n  error: {\n    code: number;\n    message: string;\n    errors?: [\n      {\n        message: ServerError;\n        domain: string;\n        reason: string;\n      }\n    ];\n  };\n}\n\n/**\n * Type definition for a map from server errors to developer visible errors\n */\nexport declare type ServerErrorMap<ApiError extends string> = {\n  readonly [K in ApiError]: AuthErrorCode;\n};\n\n/**\n * Map from errors returned by the server to errors to developer visible errors\n */\nexport const SERVER_ERROR_MAP: Partial<ServerErrorMap<ServerError>> = {\n  // Custom token errors.\n  [ServerError.CREDENTIAL_MISMATCH]: AuthErrorCode.CREDENTIAL_MISMATCH,\n  // This can only happen if the SDK sends a bad request.\n  [ServerError.MISSING_CUSTOM_TOKEN]: AuthErrorCode.INTERNAL_ERROR,\n\n  // Create Auth URI errors.\n  [ServerError.INVALID_IDENTIFIER]: AuthErrorCode.INVALID_EMAIL,\n  // This can only happen if the SDK sends a bad request.\n  [ServerError.MISSING_CONTINUE_URI]: AuthErrorCode.INTERNAL_ERROR,\n\n  // Sign in with email and password errors (some apply to sign up too).\n  [ServerError.INVALID_PASSWORD]: AuthErrorCode.INVALID_PASSWORD,\n  // This can only happen if the SDK sends a bad request.\n  [ServerError.MISSING_PASSWORD]: AuthErrorCode.MISSING_PASSWORD,\n  // Thrown if Email Enumeration Protection is enabled in the project and the email or password is\n  // invalid.\n  [ServerError.INVALID_LOGIN_CREDENTIALS]: AuthErrorCode.INVALID_CREDENTIAL,\n\n  // Sign up with email and password errors.\n  [ServerError.EMAIL_EXISTS]: AuthErrorCode.EMAIL_EXISTS,\n  [ServerError.PASSWORD_LOGIN_DISABLED]: AuthErrorCode.OPERATION_NOT_ALLOWED,\n\n  // Verify assertion for sign in with credential errors:\n  [ServerError.INVALID_IDP_RESPONSE]: AuthErrorCode.INVALID_CREDENTIAL,\n  [ServerError.INVALID_PENDING_TOKEN]: AuthErrorCode.INVALID_CREDENTIAL,\n  [ServerError.FEDERATED_USER_ID_ALREADY_LINKED]:\n    AuthErrorCode.CREDENTIAL_ALREADY_IN_USE,\n\n  // This can only happen if the SDK sends a bad request.\n  [ServerError.MISSING_REQ_TYPE]: AuthErrorCode.INTERNAL_ERROR,\n\n  // Send Password reset email errors:\n  [ServerError.EMAIL_NOT_FOUND]: AuthErrorCode.USER_DELETED,\n  [ServerError.RESET_PASSWORD_EXCEED_LIMIT]:\n    AuthErrorCode.TOO_MANY_ATTEMPTS_TRY_LATER,\n\n  [ServerError.EXPIRED_OOB_CODE]: AuthErrorCode.EXPIRED_OOB_CODE,\n  [ServerError.INVALID_OOB_CODE]: AuthErrorCode.INVALID_OOB_CODE,\n  // This can only happen if the SDK sends a bad request.\n  [ServerError.MISSING_OOB_CODE]: AuthErrorCode.INTERNAL_ERROR,\n\n  // Operations that require ID token in request:\n  [ServerError.CREDENTIAL_TOO_OLD_LOGIN_AGAIN]:\n    AuthErrorCode.CREDENTIAL_TOO_OLD_LOGIN_AGAIN,\n  [ServerError.INVALID_ID_TOKEN]: AuthErrorCode.INVALID_AUTH,\n  [ServerError.TOKEN_EXPIRED]: AuthErrorCode.TOKEN_EXPIRED,\n  [ServerError.USER_NOT_FOUND]: AuthErrorCode.TOKEN_EXPIRED,\n\n  // Other errors.\n  [ServerError.TOO_MANY_ATTEMPTS_TRY_LATER]:\n    AuthErrorCode.TOO_MANY_ATTEMPTS_TRY_LATER,\n  [ServerError.PASSWORD_DOES_NOT_MEET_REQUIREMENTS]:\n    AuthErrorCode.PASSWORD_DOES_NOT_MEET_REQUIREMENTS,\n\n  // Phone Auth related errors.\n  [ServerError.INVALID_CODE]: AuthErrorCode.INVALID_CODE,\n  [ServerError.INVALID_SESSION_INFO]: AuthErrorCode.INVALID_SESSION_INFO,\n  [ServerError.INVALID_TEMPORARY_PROOF]: AuthErrorCode.INVALID_CREDENTIAL,\n  [ServerError.MISSING_SESSION_INFO]: AuthErrorCode.MISSING_SESSION_INFO,\n  [ServerError.SESSION_EXPIRED]: AuthErrorCode.CODE_EXPIRED,\n\n  // Other action code errors when additional settings passed.\n  // MISSING_CONTINUE_URI is getting mapped to INTERNAL_ERROR above.\n  // This is OK as this error will be caught by client side validation.\n  [ServerError.MISSING_ANDROID_PACKAGE_NAME]:\n    AuthErrorCode.MISSING_ANDROID_PACKAGE_NAME,\n  [ServerError.UNAUTHORIZED_DOMAIN]: AuthErrorCode.UNAUTHORIZED_DOMAIN,\n\n  // getProjectConfig errors when clientId is passed.\n  [ServerError.INVALID_OAUTH_CLIENT_ID]: AuthErrorCode.INVALID_OAUTH_CLIENT_ID,\n\n  // User actions (sign-up or deletion) disabled errors.\n  [ServerError.ADMIN_ONLY_OPERATION]: AuthErrorCode.ADMIN_ONLY_OPERATION,\n\n  // Multi factor related errors.\n  [ServerError.INVALID_MFA_PENDING_CREDENTIAL]:\n    AuthErrorCode.INVALID_MFA_SESSION,\n  [ServerError.MFA_ENROLLMENT_NOT_FOUND]: AuthErrorCode.MFA_INFO_NOT_FOUND,\n  [ServerError.MISSING_MFA_ENROLLMENT_ID]: AuthErrorCode.MISSING_MFA_INFO,\n  [ServerError.MISSING_MFA_PENDING_CREDENTIAL]:\n    AuthErrorCode.MISSING_MFA_SESSION,\n  [ServerError.SECOND_FACTOR_EXISTS]:\n    AuthErrorCode.SECOND_FACTOR_ALREADY_ENROLLED,\n  [ServerError.SECOND_FACTOR_LIMIT_EXCEEDED]:\n    AuthErrorCode.SECOND_FACTOR_LIMIT_EXCEEDED,\n\n  // Blocking functions related errors.\n  [ServerError.BLOCKING_FUNCTION_ERROR_RESPONSE]: AuthErrorCode.INTERNAL_ERROR,\n\n  // Recaptcha related errors.\n  [ServerError.RECAPTCHA_NOT_ENABLED]: AuthErrorCode.RECAPTCHA_NOT_ENABLED,\n  [ServerError.MISSING_RECAPTCHA_TOKEN]: AuthErrorCode.MISSING_RECAPTCHA_TOKEN,\n  [ServerError.INVALID_RECAPTCHA_TOKEN]: AuthErrorCode.INVALID_RECAPTCHA_TOKEN,\n  [ServerError.INVALID_RECAPTCHA_ACTION]:\n    AuthErrorCode.INVALID_RECAPTCHA_ACTION,\n  [ServerError.MISSING_CLIENT_TYPE]: AuthErrorCode.MISSING_CLIENT_TYPE,\n  [ServerError.MISSING_RECAPTCHA_VERSION]:\n    AuthErrorCode.MISSING_RECAPTCHA_VERSION,\n  [ServerError.INVALID_RECAPTCHA_VERSION]:\n    AuthErrorCode.INVALID_RECAPTCHA_VERSION,\n  [ServerError.INVALID_REQ_TYPE]: AuthErrorCode.INVALID_REQ_TYPE\n};\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError, querystring } from '@firebase/util';\n\nimport { AuthErrorCode, NamedErrorParams } from '../core/errors';\nimport {\n  _createError,\n  _errorWithCustomMessage,\n  _fail\n} from '../core/util/assert';\nimport { Delay } from '../core/util/delay';\nimport { _emulatorUrl } from '../core/util/emulator';\nimport { FetchProvider } from '../core/util/fetch_provider';\nimport { Auth } from '../model/public_types';\nimport { AuthInternal, ConfigInternal } from '../model/auth';\nimport { IdTokenResponse, TaggedWithTokenResponse } from '../model/id_token';\nimport { IdTokenMfaResponse } from './authentication/mfa';\nimport { SERVER_ERROR_MAP, ServerError, ServerErrorMap } from './errors';\n\nexport const enum HttpMethod {\n  POST = 'POST',\n  GET = 'GET'\n}\n\nexport const enum HttpHeader {\n  CONTENT_TYPE = 'Content-Type',\n  X_FIREBASE_LOCALE = 'X-Firebase-Locale',\n  X_CLIENT_VERSION = 'X-Client-Version',\n  X_FIREBASE_GMPID = 'X-Firebase-gmpid',\n  X_FIREBASE_CLIENT = 'X-Firebase-Client',\n  X_FIREBASE_APP_CHECK = 'X-Firebase-AppCheck'\n}\n\nexport const enum Endpoint {\n  CREATE_AUTH_URI = '/v1/accounts:createAuthUri',\n  DELETE_ACCOUNT = '/v1/accounts:delete',\n  RESET_PASSWORD = '/v1/accounts:resetPassword',\n  SIGN_UP = '/v1/accounts:signUp',\n  SIGN_IN_WITH_CUSTOM_TOKEN = '/v1/accounts:signInWithCustomToken',\n  SIGN_IN_WITH_EMAIL_LINK = '/v1/accounts:signInWithEmailLink',\n  SIGN_IN_WITH_IDP = '/v1/accounts:signInWithIdp',\n  SIGN_IN_WITH_PASSWORD = '/v1/accounts:signInWithPassword',\n  SIGN_IN_WITH_PHONE_NUMBER = '/v1/accounts:signInWithPhoneNumber',\n  SEND_VERIFICATION_CODE = '/v1/accounts:sendVerificationCode',\n  SEND_OOB_CODE = '/v1/accounts:sendOobCode',\n  SET_ACCOUNT_INFO = '/v1/accounts:update',\n  GET_ACCOUNT_INFO = '/v1/accounts:lookup',\n  GET_RECAPTCHA_PARAM = '/v1/recaptchaParams',\n  START_MFA_ENROLLMENT = '/v2/accounts/mfaEnrollment:start',\n  FINALIZE_MFA_ENROLLMENT = '/v2/accounts/mfaEnrollment:finalize',\n  START_MFA_SIGN_IN = '/v2/accounts/mfaSignIn:start',\n  FINALIZE_MFA_SIGN_IN = '/v2/accounts/mfaSignIn:finalize',\n  WITHDRAW_MFA = '/v2/accounts/mfaEnrollment:withdraw',\n  GET_PROJECT_CONFIG = '/v1/projects',\n  GET_RECAPTCHA_CONFIG = '/v2/recaptchaConfig',\n  GET_PASSWORD_POLICY = '/v2/passwordPolicy',\n  TOKEN = '/v1/token',\n  REVOKE_TOKEN = '/v2/accounts:revokeToken'\n}\n\nexport const enum RecaptchaClientType {\n  WEB = 'CLIENT_TYPE_WEB',\n  ANDROID = 'CLIENT_TYPE_ANDROID',\n  IOS = 'CLIENT_TYPE_IOS'\n}\n\nexport const enum RecaptchaVersion {\n  ENTERPRISE = 'RECAPTCHA_ENTERPRISE'\n}\n\nexport const enum RecaptchaActionName {\n  SIGN_IN_WITH_PASSWORD = 'signInWithPassword',\n  GET_OOB_CODE = 'getOobCode',\n  SIGN_UP_PASSWORD = 'signUpPassword'\n}\n\nexport const enum EnforcementState {\n  ENFORCE = 'ENFORCE',\n  AUDIT = 'AUDIT',\n  OFF = 'OFF',\n  ENFORCEMENT_STATE_UNSPECIFIED = 'ENFORCEMENT_STATE_UNSPECIFIED'\n}\n\n// Providers that have reCAPTCHA Enterprise support.\nexport const enum RecaptchaProvider {\n  EMAIL_PASSWORD_PROVIDER = 'EMAIL_PASSWORD_PROVIDER'\n}\n\nexport const DEFAULT_API_TIMEOUT_MS = new Delay(30_000, 60_000);\n\nexport function _addTidIfNecessary<T extends { tenantId?: string }>(\n  auth: Auth,\n  request: T\n): T {\n  if (auth.tenantId && !request.tenantId) {\n    return {\n      ...request,\n      tenantId: auth.tenantId\n    };\n  }\n  return request;\n}\n\nexport async function _performApiRequest<T, V>(\n  auth: Auth,\n  method: HttpMethod,\n  path: Endpoint,\n  request?: T,\n  customErrorMap: Partial<ServerErrorMap<ServerError>> = {}\n): Promise<V> {\n  return _performFetchWithErrorHandling(auth, customErrorMap, async () => {\n    let body = {};\n    let params = {};\n    if (request) {\n      if (method === HttpMethod.GET) {\n        params = request;\n      } else {\n        body = {\n          body: JSON.stringify(request)\n        };\n      }\n    }\n\n    const query = querystring({\n      key: auth.config.apiKey,\n      ...params\n    }).slice(1);\n\n    const headers = await (auth as AuthInternal)._getAdditionalHeaders();\n    headers[HttpHeader.CONTENT_TYPE] = 'application/json';\n\n    if (auth.languageCode) {\n      headers[HttpHeader.X_FIREBASE_LOCALE] = auth.languageCode;\n    }\n\n    return FetchProvider.fetch()(\n      _getFinalTarget(auth, auth.config.apiHost, path, query),\n      {\n        method,\n        headers,\n        referrerPolicy: 'no-referrer',\n        ...body\n      }\n    );\n  });\n}\n\nexport async function _performFetchWithErrorHandling<V>(\n  auth: Auth,\n  customErrorMap: Partial<ServerErrorMap<ServerError>>,\n  fetchFn: () => Promise<Response>\n): Promise<V> {\n  (auth as AuthInternal)._canInitEmulator = false;\n  const errorMap = { ...SERVER_ERROR_MAP, ...customErrorMap };\n  try {\n    const networkTimeout = new NetworkTimeout<Response>(auth);\n    const response: Response = await Promise.race<Promise<Response>>([\n      fetchFn(),\n      networkTimeout.promise\n    ]);\n\n    // If we've reached this point, the fetch succeeded and the networkTimeout\n    // didn't throw; clear the network timeout delay so that Node won't hang\n    networkTimeout.clearNetworkTimeout();\n\n    const json = await response.json();\n    if ('needConfirmation' in json) {\n      throw _makeTaggedError(auth, AuthErrorCode.NEED_CONFIRMATION, json);\n    }\n\n    if (response.ok && !('errorMessage' in json)) {\n      return json;\n    } else {\n      const errorMessage = response.ok ? json.errorMessage : json.error.message;\n      const [serverErrorCode, serverErrorMessage] = errorMessage.split(' : ');\n      if (serverErrorCode === ServerError.FEDERATED_USER_ID_ALREADY_LINKED) {\n        throw _makeTaggedError(\n          auth,\n          AuthErrorCode.CREDENTIAL_ALREADY_IN_USE,\n          json\n        );\n      } else if (serverErrorCode === ServerError.EMAIL_EXISTS) {\n        throw _makeTaggedError(auth, AuthErrorCode.EMAIL_EXISTS, json);\n      } else if (serverErrorCode === ServerError.USER_DISABLED) {\n        throw _makeTaggedError(auth, AuthErrorCode.USER_DISABLED, json);\n      }\n      const authError =\n        errorMap[serverErrorCode as ServerError] ||\n        (serverErrorCode\n          .toLowerCase()\n          .replace(/[_\\s]+/g, '-') as unknown as AuthErrorCode);\n      if (serverErrorMessage) {\n        throw _errorWithCustomMessage(auth, authError, serverErrorMessage);\n      } else {\n        _fail(auth, authError);\n      }\n    }\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      throw e;\n    }\n    // Changing this to a different error code will log user out when there is a network error\n    // because we treat any error other than NETWORK_REQUEST_FAILED as token is invalid.\n    // https://github.com/firebase/firebase-js-sdk/blob/4fbc73610d70be4e0852e7de63a39cb7897e8546/packages/auth/src/core/auth/auth_impl.ts#L309-L316\n    _fail(auth, AuthErrorCode.NETWORK_REQUEST_FAILED, { 'message': String(e) });\n  }\n}\n\nexport async function _performSignInRequest<T, V extends IdTokenResponse>(\n  auth: Auth,\n  method: HttpMethod,\n  path: Endpoint,\n  request?: T,\n  customErrorMap: Partial<ServerErrorMap<ServerError>> = {}\n): Promise<V> {\n  const serverResponse = (await _performApiRequest<T, V | IdTokenMfaResponse>(\n    auth,\n    method,\n    path,\n    request,\n    customErrorMap\n  )) as V;\n  if ('mfaPendingCredential' in serverResponse) {\n    _fail(auth, AuthErrorCode.MFA_REQUIRED, {\n      _serverResponse: serverResponse\n    });\n  }\n\n  return serverResponse;\n}\n\nexport function _getFinalTarget(\n  auth: Auth,\n  host: string,\n  path: string,\n  query: string\n): string {\n  const base = `${host}${path}?${query}`;\n\n  if (!(auth as AuthInternal).config.emulator) {\n    return `${auth.config.apiScheme}://${base}`;\n  }\n\n  return _emulatorUrl(auth.config as ConfigInternal, base);\n}\n\nexport function _parseEnforcementState(\n  enforcementStateStr: string\n): EnforcementState {\n  switch (enforcementStateStr) {\n    case 'ENFORCE':\n      return EnforcementState.ENFORCE;\n    case 'AUDIT':\n      return EnforcementState.AUDIT;\n    case 'OFF':\n      return EnforcementState.OFF;\n    default:\n      return EnforcementState.ENFORCEMENT_STATE_UNSPECIFIED;\n  }\n}\n\nclass NetworkTimeout<T> {\n  // Node timers and browser timers are fundamentally incompatible, but we\n  // don't care about the value here\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private timer: any | null = null;\n  readonly promise = new Promise<T>((_, reject) => {\n    this.timer = setTimeout(() => {\n      return reject(\n        _createError(this.auth, AuthErrorCode.NETWORK_REQUEST_FAILED)\n      );\n    }, DEFAULT_API_TIMEOUT_MS.get());\n  });\n\n  clearNetworkTimeout(): void {\n    clearTimeout(this.timer);\n  }\n\n  constructor(private readonly auth: Auth) {}\n}\n\ninterface PotentialResponse extends IdTokenResponse {\n  email?: string;\n  phoneNumber?: string;\n}\n\nexport function _makeTaggedError(\n  auth: Auth,\n  code: AuthErrorCode,\n  response: PotentialResponse\n): FirebaseError {\n  const errorParams: NamedErrorParams = {\n    appName: auth.name\n  };\n\n  if (response.email) {\n    errorParams.email = response.email;\n  }\n  if (response.phoneNumber) {\n    errorParams.phoneNumber = response.phoneNumber;\n  }\n\n  const error = _createError(auth, code, errorParams);\n\n  // We know customData is defined on error because errorParams is defined\n  (error.customData! as TaggedWithTokenResponse)._tokenResponse = response;\n  return error;\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RecaptchaParameters } from '../../model/public_types';\nimport {\n  GetRecaptchaConfigResponse,\n  RecaptchaEnforcementProviderState\n} from '../../api/authentication/recaptcha';\nimport { EnforcementState, _parseEnforcementState } from '../../api/index';\n\n// reCAPTCHA v2 interface\nexport interface Recaptcha {\n  render: (container: HTMLElement, parameters: RecaptchaParameters) => number;\n  getResponse: (id: number) => string;\n  execute: (id: number) => unknown;\n  reset: (id: number) => unknown;\n}\n\nexport function isV2(\n  grecaptcha: Recaptcha | GreCAPTCHA | undefined\n): grecaptcha is Recaptcha {\n  return (\n    grecaptcha !== undefined &&\n    (grecaptcha as Recaptcha).getResponse !== undefined\n  );\n}\n\n// reCAPTCHA Enterprise & v3 shared interface\nexport interface GreCAPTCHATopLevel extends GreCAPTCHA {\n  enterprise: GreCAPTCHA;\n}\n\n// reCAPTCHA Enterprise interface\nexport interface GreCAPTCHA {\n  ready: (callback: () => void) => void;\n  execute: (siteKey: string, options: { action: string }) => Promise<string>;\n  render: (\n    container: string | HTMLElement,\n    parameters: GreCAPTCHARenderOption\n  ) => string;\n}\n\nexport interface GreCAPTCHARenderOption {\n  sitekey: string;\n  size: 'invisible';\n}\n\nexport function isEnterprise(\n  grecaptcha: Recaptcha | GreCAPTCHA | undefined\n): grecaptcha is GreCAPTCHATopLevel {\n  return (\n    grecaptcha !== undefined &&\n    (grecaptcha as GreCAPTCHATopLevel).enterprise !== undefined\n  );\n}\n\n// TODO(chuanr): Replace this with the AuthWindow after resolving the dependency issue in Node.js env.\ndeclare global {\n  interface Window {\n    grecaptcha?: Recaptcha | GreCAPTCHATopLevel;\n  }\n}\n\nexport class RecaptchaConfig {\n  /**\n   * The reCAPTCHA site key.\n   */\n  siteKey: string = '';\n\n  /**\n   * The list of providers and their enablement status for reCAPTCHA Enterprise.\n   */\n  recaptchaEnforcementState: RecaptchaEnforcementProviderState[] = [];\n\n  constructor(response: GetRecaptchaConfigResponse) {\n    if (response.recaptchaKey === undefined) {\n      throw new Error('recaptchaKey undefined');\n    }\n    // Example response.recaptchaKey: \"projects/proj123/keys/sitekey123\"\n    this.siteKey = response.recaptchaKey.split('/')[3];\n    this.recaptchaEnforcementState = response.recaptchaEnforcementState;\n  }\n\n  /**\n   * Returns the reCAPTCHA Enterprise enforcement state for the given provider.\n   *\n   * @param providerStr - The provider whose enforcement state is to be returned.\n   * @returns The reCAPTCHA Enterprise enforcement state for the given provider.\n   */\n  getProviderEnforcementState(providerStr: string): EnforcementState | null {\n    if (\n      !this.recaptchaEnforcementState ||\n      this.recaptchaEnforcementState.length === 0\n    ) {\n      return null;\n    }\n\n    for (const recaptchaEnforcementState of this.recaptchaEnforcementState) {\n      if (\n        recaptchaEnforcementState.provider &&\n        recaptchaEnforcementState.provider === providerStr\n      ) {\n        return _parseEnforcementState(\n          recaptchaEnforcementState.enforcementState\n        );\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Returns true if the reCAPTCHA Enterprise enforcement state for the provider is set to ENFORCE or AUDIT.\n   *\n   * @param providerStr - The provider whose enablement state is to be returned.\n   * @returns Whether or not reCAPTCHA Enterprise protection is enabled for the given provider.\n   */\n  isProviderEnabled(providerStr: string): boolean {\n    return (\n      this.getProviderEnforcementState(providerStr) ===\n        EnforcementState.ENFORCE ||\n      this.getProviderEnforcementState(providerStr) === EnforcementState.AUDIT\n    );\n  }\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  HttpMethod,\n  RecaptchaClientType,\n  RecaptchaVersion,\n  _performApiRequest,\n  _addTidIfNecessary\n} from '../index';\nimport { Auth } from '../../model/public_types';\n\ninterface GetRecaptchaParamResponse {\n  recaptchaSiteKey?: string;\n}\n\nexport async function getRecaptchaParams(auth: Auth): Promise<string> {\n  return (\n    (\n      await _performApiRequest<void, GetRecaptchaParamResponse>(\n        auth,\n        HttpMethod.GET,\n        Endpoint.GET_RECAPTCHA_PARAM\n      )\n    ).recaptchaSiteKey || ''\n  );\n}\n\n// The following functions are for reCAPTCHA enterprise integration.\ninterface GetRecaptchaConfigRequest {\n  tenantId?: string;\n  clientType?: RecaptchaClientType;\n  version?: RecaptchaVersion;\n}\n\nexport interface RecaptchaEnforcementProviderState {\n  provider: string;\n  enforcementState: string;\n}\n\nexport interface GetRecaptchaConfigResponse {\n  recaptchaKey: string;\n  recaptchaEnforcementState: RecaptchaEnforcementProviderState[];\n}\n\nexport async function getRecaptchaConfig(\n  auth: Auth,\n  request: GetRecaptchaConfigRequest\n): Promise<GetRecaptchaConfigResponse> {\n  return _performApiRequest<\n    GetRecaptchaConfigRequest,\n    GetRecaptchaConfigResponse\n  >(\n    auth,\n    HttpMethod.GET,\n    Endpoint.GET_RECAPTCHA_CONFIG,\n    _addTidIfNecessary(auth, request)\n  );\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Endpoint, HttpMethod, _performApiRequest } from '../index';\nimport { MfaEnrollment } from './mfa';\nimport { Auth } from '../../model/public_types';\n\nexport interface DeleteAccountRequest {\n  idToken: string;\n}\n\nexport async function deleteAccount(\n  auth: Auth,\n  request: DeleteAccountRequest\n): Promise<void> {\n  return _performApiRequest<DeleteAccountRequest, void>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.DELETE_ACCOUNT,\n    request\n  );\n}\n\nexport interface ProviderUserInfo {\n  providerId: string;\n  rawId?: string;\n  email?: string;\n  displayName?: string;\n  photoUrl?: string;\n  phoneNumber?: string;\n}\n\nexport interface DeleteLinkedAccountsRequest {\n  idToken: string;\n  deleteProvider: string[];\n}\n\nexport interface DeleteLinkedAccountsResponse {\n  providerUserInfo: ProviderUserInfo[];\n}\n\nexport async function deleteLinkedAccounts(\n  auth: Auth,\n  request: DeleteLinkedAccountsRequest\n): Promise<DeleteLinkedAccountsResponse> {\n  return _performApiRequest<\n    DeleteLinkedAccountsRequest,\n    DeleteLinkedAccountsResponse\n  >(auth, HttpMethod.POST, Endpoint.SET_ACCOUNT_INFO, request);\n}\n\nexport interface APIUserInfo {\n  localId?: string;\n  displayName?: string;\n  photoUrl?: string;\n  email?: string;\n  emailVerified?: boolean;\n  phoneNumber?: string;\n  lastLoginAt?: number;\n  createdAt?: number;\n  tenantId?: string;\n  passwordHash?: string;\n  providerUserInfo?: ProviderUserInfo[];\n  mfaInfo?: MfaEnrollment[];\n}\n\nexport interface GetAccountInfoRequest {\n  idToken: string;\n}\n\nexport interface GetAccountInfoResponse {\n  users: APIUserInfo[];\n}\n\nexport async function getAccountInfo(\n  auth: Auth,\n  request: GetAccountInfoRequest\n): Promise<GetAccountInfoResponse> {\n  return _performApiRequest<GetAccountInfoRequest, GetAccountInfoResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.GET_ACCOUNT_INFO,\n    request\n  );\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function utcTimestampToDateString(\n  utcTimestamp?: string | number\n): string | undefined {\n  if (!utcTimestamp) {\n    return undefined;\n  }\n  try {\n    // Convert to date object.\n    const date = new Date(Number(utcTimestamp));\n    // Test date is valid.\n    if (!isNaN(date.getTime())) {\n      // Convert to UTC date string.\n      return date.toUTCString();\n    }\n  } catch (e) {\n    // Do nothing. undefined will be returned.\n  }\n  return undefined;\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { IdTokenResult, ParsedToken, User } from '../../model/public_types';\nimport { base64Decode, getModularInstance } from '@firebase/util';\n\nimport { UserInternal } from '../../model/user';\nimport { _assert } from '../util/assert';\nimport { _logError } from '../util/log';\nimport { utcTimestampToDateString } from '../util/time';\nimport { AuthErrorCode } from '../errors';\n\n/**\n * Returns a JSON Web Token (JWT) used to identify the user to a Firebase service.\n *\n * @remarks\n * Returns the current token if it has not expired or if it will not expire in the next five\n * minutes. Otherwise, this will refresh the token and return a new one.\n *\n * @param user - The user.\n * @param forceRefresh - Force refresh regardless of token expiration.\n *\n * @public\n */\nexport function getIdToken(user: User, forceRefresh = false): Promise<string> {\n  return getModularInstance(user).getIdToken(forceRefresh);\n}\n\n/**\n * Returns a deserialized JSON Web Token (JWT) used to identify the user to a Firebase service.\n *\n * @remarks\n * Returns the current token if it has not expired or if it will not expire in the next five\n * minutes. Otherwise, this will refresh the token and return a new one.\n *\n * @param user - The user.\n * @param forceRefresh - Force refresh regardless of token expiration.\n *\n * @public\n */\nexport async function getIdTokenResult(\n  user: User,\n  forceRefresh = false\n): Promise<IdTokenResult> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  const token = await userInternal.getIdToken(forceRefresh);\n  const claims = _parseToken(token);\n\n  _assert(\n    claims && claims.exp && claims.auth_time && claims.iat,\n    userInternal.auth,\n    AuthErrorCode.INTERNAL_ERROR\n  );\n  const firebase =\n    typeof claims.firebase === 'object' ? claims.firebase : undefined;\n\n  const signInProvider: string | undefined = firebase?.['sign_in_provider'];\n\n  return {\n    claims,\n    token,\n    authTime: utcTimestampToDateString(\n      secondsStringToMilliseconds(claims.auth_time)\n    )!,\n    issuedAtTime: utcTimestampToDateString(\n      secondsStringToMilliseconds(claims.iat)\n    )!,\n    expirationTime: utcTimestampToDateString(\n      secondsStringToMilliseconds(claims.exp)\n    )!,\n    signInProvider: signInProvider || null,\n    signInSecondFactor: firebase?.['sign_in_second_factor'] || null\n  };\n}\n\nfunction secondsStringToMilliseconds(seconds: string): number {\n  return Number(seconds) * 1000;\n}\n\nexport function _parseToken(token: string): ParsedToken | null {\n  const [algorithm, payload, signature] = token.split('.');\n  if (\n    algorithm === undefined ||\n    payload === undefined ||\n    signature === undefined\n  ) {\n    _logError('JWT malformed, contained fewer than 3 sections');\n    return null;\n  }\n\n  try {\n    const decoded = base64Decode(payload);\n    if (!decoded) {\n      _logError('Failed to decode base64 JWT payload');\n      return null;\n    }\n    return JSON.parse(decoded);\n  } catch (e) {\n    _logError(\n      'Caught error parsing JWT payload as JSON',\n      (e as Error)?.toString()\n    );\n    return null;\n  }\n}\n\n/**\n * Extract expiresIn TTL from a token by subtracting the expiration from the issuance.\n */\nexport function _tokenExpiresIn(token: string): number {\n  const parsedToken = _parseToken(token);\n  _assert(parsedToken, AuthErrorCode.INTERNAL_ERROR);\n  _assert(typeof parsedToken.exp !== 'undefined', AuthErrorCode.INTERNAL_ERROR);\n  _assert(typeof parsedToken.iat !== 'undefined', AuthErrorCode.INTERNAL_ERROR);\n  return Number(parsedToken.exp) - Number(parsedToken.iat);\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\n\nimport { UserInternal } from '../../model/user';\nimport { AuthErrorCode } from '../errors';\n\nexport async function _logoutIfInvalidated<T>(\n  user: UserInternal,\n  promise: Promise<T>,\n  bypassAuthState = false\n): Promise<T> {\n  if (bypassAuthState) {\n    return promise;\n  }\n  try {\n    return await promise;\n  } catch (e) {\n    if (e instanceof FirebaseError && isUserInvalidated(e)) {\n      if (user.auth.currentUser === user) {\n        await user.auth.signOut();\n      }\n    }\n\n    throw e;\n  }\n}\n\nfunction isUserInvalidated({ code }: FirebaseError): boolean {\n  return (\n    code === `auth/${AuthErrorCode.USER_DISABLED}` ||\n    code === `auth/${AuthErrorCode.TOKEN_EXPIRED}`\n  );\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { UserInternal } from '../../model/user';\nimport { AuthErrorCode } from '../errors';\n\n// Refresh the token five minutes before expiration\nexport const enum Duration {\n  OFFSET = 5 * 1000 * 60,\n  RETRY_BACKOFF_MIN = 30 * 1000,\n  RETRY_BACKOFF_MAX = 16 * 60 * 1000\n}\n\nexport class ProactiveRefresh {\n  private isRunning = false;\n\n  // Node timers and browser timers return fundamentally different types.\n  // We don't actually care what the value is but TS won't accept unknown and\n  // we can't cast properly in both environments.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private timerId: any | null = null;\n  private errorBackoff = Duration.RETRY_BACKOFF_MIN;\n\n  constructor(private readonly user: UserInternal) {}\n\n  _start(): void {\n    if (this.isRunning) {\n      return;\n    }\n\n    this.isRunning = true;\n    this.schedule();\n  }\n\n  _stop(): void {\n    if (!this.isRunning) {\n      return;\n    }\n\n    this.isRunning = false;\n    if (this.timerId !== null) {\n      clearTimeout(this.timerId);\n    }\n  }\n\n  private getInterval(wasError: boolean): number {\n    if (wasError) {\n      const interval = this.errorBackoff;\n      this.errorBackoff = Math.min(\n        this.errorBackoff * 2,\n        Duration.RETRY_BACKOFF_MAX\n      );\n      return interval;\n    } else {\n      // Reset the error backoff\n      this.errorBackoff = Duration.RETRY_BACKOFF_MIN;\n      const expTime = this.user.stsTokenManager.expirationTime ?? 0;\n      const interval = expTime - Date.now() - Duration.OFFSET;\n\n      return Math.max(0, interval);\n    }\n  }\n\n  private schedule(wasError = false): void {\n    if (!this.isRunning) {\n      // Just in case...\n      return;\n    }\n\n    const interval = this.getInterval(wasError);\n    this.timerId = setTimeout(async () => {\n      await this.iteration();\n    }, interval);\n  }\n\n  private async iteration(): Promise<void> {\n    try {\n      await this.user.getIdToken(true);\n    } catch (e) {\n      // Only retry on network errors\n      if (\n        (e as FirebaseError)?.code ===\n        `auth/${AuthErrorCode.NETWORK_REQUEST_FAILED}`\n      ) {\n        this.schedule(/* wasError */ true);\n      }\n\n      return;\n    }\n    this.schedule();\n  }\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserMetadata as UserMetadataType } from '../../model/public_types';\n\nimport { utcTimestampToDateString } from '../util/time';\n\nexport class UserMetadata implements UserMetadataType {\n  creationTime?: string;\n  lastSignInTime?: string;\n\n  constructor(\n    private createdAt?: string | number,\n    private lastLoginAt?: string | number\n  ) {\n    this._initializeTime();\n  }\n\n  private _initializeTime(): void {\n    this.lastSignInTime = utcTimestampToDateString(this.lastLoginAt);\n    this.creationTime = utcTimestampToDateString(this.createdAt);\n  }\n\n  _copy(metadata: UserMetadata): void {\n    this.createdAt = metadata.createdAt;\n    this.lastLoginAt = metadata.lastLoginAt;\n    this._initializeTime();\n  }\n\n  toJSON(): object {\n    return {\n      createdAt: this.createdAt,\n      lastLoginAt: this.lastLoginAt\n    };\n  }\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { User, UserInfo } from '../../model/public_types';\n\nimport {\n  getAccountInfo,\n  ProviderUserInfo\n} from '../../api/account_management/account';\nimport { UserInternal } from '../../model/user';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from '../util/assert';\nimport { _logoutIfInvalidated } from './invalidation';\nimport { UserMetadata } from './user_metadata';\nimport { getModularInstance } from '@firebase/util';\n\nexport async function _reloadWithoutSaving(user: UserInternal): Promise<void> {\n  const auth = user.auth;\n  const idToken = await user.getIdToken();\n  const response = await _logoutIfInvalidated(\n    user,\n    getAccountInfo(auth, { idToken })\n  );\n\n  _assert(response?.users.length, auth, AuthErrorCode.INTERNAL_ERROR);\n\n  const coreAccount = response.users[0];\n\n  user._notifyReloadListener(coreAccount);\n\n  const newProviderData = coreAccount.providerUserInfo?.length\n    ? extractProviderData(coreAccount.providerUserInfo)\n    : [];\n\n  const providerData = mergeProviderData(user.providerData, newProviderData);\n\n  // Preserves the non-nonymous status of the stored user, even if no more\n  // credentials (federated or email/password) are linked to the user. If\n  // the user was previously anonymous, then use provider data to update.\n  // On the other hand, if it was not anonymous before, it should never be\n  // considered anonymous now.\n  const oldIsAnonymous = user.isAnonymous;\n  const newIsAnonymous =\n    !(user.email && coreAccount.passwordHash) && !providerData?.length;\n  const isAnonymous = !oldIsAnonymous ? false : newIsAnonymous;\n\n  const updates: Partial<UserInternal> = {\n    uid: coreAccount.localId,\n    displayName: coreAccount.displayName || null,\n    photoURL: coreAccount.photoUrl || null,\n    email: coreAccount.email || null,\n    emailVerified: coreAccount.emailVerified || false,\n    phoneNumber: coreAccount.phoneNumber || null,\n    tenantId: coreAccount.tenantId || null,\n    providerData,\n    metadata: new UserMetadata(coreAccount.createdAt, coreAccount.lastLoginAt),\n    isAnonymous\n  };\n\n  Object.assign(user, updates);\n}\n\n/**\n * Reloads user account data, if signed in.\n *\n * @param user - The user.\n *\n * @public\n */\nexport async function reload(user: User): Promise<void> {\n  const userInternal: UserInternal = getModularInstance(user) as UserInternal;\n  await _reloadWithoutSaving(userInternal);\n\n  // Even though the current user hasn't changed, update\n  // current user will trigger a persistence update w/ the\n  // new info.\n  await userInternal.auth._persistUserIfCurrent(userInternal);\n  userInternal.auth._notifyListenersIfCurrent(userInternal);\n}\n\nfunction mergeProviderData(\n  original: UserInfo[],\n  newData: UserInfo[]\n): UserInfo[] {\n  const deduped = original.filter(\n    o => !newData.some(n => n.providerId === o.providerId)\n  );\n  return [...deduped, ...newData];\n}\n\nexport function extractProviderData(providers: ProviderUserInfo[]): UserInfo[] {\n  return providers.map(({ providerId, ...provider }) => {\n    return {\n      providerId,\n      uid: provider.rawId || '',\n      displayName: provider.displayName || null,\n      email: provider.email || null,\n      phoneNumber: provider.phoneNumber || null,\n      photoURL: provider.photoUrl || null\n    };\n  });\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable camelcase */\n\nimport { querystring } from '@firebase/util';\n\nimport {\n  _getFinalTarget,\n  _performFetchWithErrorHandling,\n  _performApiRequest,\n  _addTidIfNecessary,\n  HttpMethod,\n  HttpHeader,\n  Endpoint\n} from '../index';\nimport { FetchProvider } from '../../core/util/fetch_provider';\nimport { Auth } from '../../model/public_types';\nimport { AuthInternal } from '../../model/auth';\n\nexport const enum TokenType {\n  REFRESH_TOKEN = 'REFRESH_TOKEN',\n  ACCESS_TOKEN = 'ACCESS_TOKEN'\n}\n\n/** The server responses with snake_case; we convert to camelCase */\ninterface RequestStsTokenServerResponse {\n  access_token: string;\n  expires_in: string;\n  refresh_token: string;\n}\n\nexport interface RequestStsTokenResponse {\n  accessToken: string;\n  expiresIn: string;\n  refreshToken: string;\n}\n\nexport interface RevokeTokenRequest {\n  providerId: string;\n  tokenType: TokenType;\n  token: string;\n  idToken: string;\n  tenantId?: string;\n}\n\nexport interface RevokeTokenResponse {}\n\nexport async function requestStsToken(\n  auth: Auth,\n  refreshToken: string\n): Promise<RequestStsTokenResponse> {\n  const response =\n    await _performFetchWithErrorHandling<RequestStsTokenServerResponse>(\n      auth,\n      {},\n      async () => {\n        const body = querystring({\n          'grant_type': 'refresh_token',\n          'refresh_token': refreshToken\n        }).slice(1);\n        const { tokenApiHost, apiKey } = auth.config;\n        const url = _getFinalTarget(\n          auth,\n          tokenApiHost,\n          Endpoint.TOKEN,\n          `key=${apiKey}`\n        );\n\n        const headers = await (auth as AuthInternal)._getAdditionalHeaders();\n        headers[HttpHeader.CONTENT_TYPE] = 'application/x-www-form-urlencoded';\n\n        return FetchProvider.fetch()(url, {\n          method: HttpMethod.POST,\n          headers,\n          body\n        });\n      }\n    );\n\n  // The response comes back in snake_case. Convert to camel:\n  return {\n    accessToken: response.access_token,\n    expiresIn: response.expires_in,\n    refreshToken: response.refresh_token\n  };\n}\n\nexport async function revokeToken(\n  auth: Auth,\n  request: RevokeTokenRequest\n): Promise<RevokeTokenResponse> {\n  return _performApiRequest<RevokeTokenRequest, RevokeTokenResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.REVOKE_TOKEN,\n    _addTidIfNecessary(auth, request)\n  );\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FinalizeMfaResponse } from '../../api/authentication/mfa';\nimport { requestStsToken } from '../../api/authentication/token';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { AuthErrorCode } from '../errors';\nimport { PersistedBlob } from '../persistence';\nimport { _assert, debugFail } from '../util/assert';\nimport { _tokenExpiresIn } from './id_token_result';\n\n/**\n * The number of milliseconds before the official expiration time of a token\n * to refresh that token, to provide a buffer for RPCs to complete.\n */\nexport const enum Buffer {\n  TOKEN_REFRESH = 30_000\n}\n\n/**\n * We need to mark this class as internal explicitly to exclude it in the public typings, because\n * it references AuthInternal which has a circular dependency with UserInternal.\n *\n * @internal\n */\nexport class StsTokenManager {\n  refreshToken: string | null = null;\n  accessToken: string | null = null;\n  expirationTime: number | null = null;\n\n  get isExpired(): boolean {\n    return (\n      !this.expirationTime ||\n      Date.now() > this.expirationTime - Buffer.TOKEN_REFRESH\n    );\n  }\n\n  updateFromServerResponse(\n    response: IdTokenResponse | FinalizeMfaResponse\n  ): void {\n    _assert(response.idToken, AuthErrorCode.INTERNAL_ERROR);\n    _assert(\n      typeof response.idToken !== 'undefined',\n      AuthErrorCode.INTERNAL_ERROR\n    );\n    _assert(\n      typeof response.refreshToken !== 'undefined',\n      AuthErrorCode.INTERNAL_ERROR\n    );\n    const expiresIn =\n      'expiresIn' in response && typeof response.expiresIn !== 'undefined'\n        ? Number(response.expiresIn)\n        : _tokenExpiresIn(response.idToken);\n    this.updateTokensAndExpiration(\n      response.idToken,\n      response.refreshToken,\n      expiresIn\n    );\n  }\n\n  updateFromIdToken(idToken: string): void {\n    _assert(idToken.length !== 0, AuthErrorCode.INTERNAL_ERROR);\n    const expiresIn = _tokenExpiresIn(idToken);\n    this.updateTokensAndExpiration(idToken, null, expiresIn);\n  }\n\n  async getToken(\n    auth: AuthInternal,\n    forceRefresh = false\n  ): Promise<string | null> {\n    if (!forceRefresh && this.accessToken && !this.isExpired) {\n      return this.accessToken;\n    }\n\n    _assert(this.refreshToken, auth, AuthErrorCode.TOKEN_EXPIRED);\n\n    if (this.refreshToken) {\n      await this.refresh(auth, this.refreshToken!);\n      return this.accessToken;\n    }\n\n    return null;\n  }\n\n  clearRefreshToken(): void {\n    this.refreshToken = null;\n  }\n\n  private async refresh(auth: AuthInternal, oldToken: string): Promise<void> {\n    const { accessToken, refreshToken, expiresIn } = await requestStsToken(\n      auth,\n      oldToken\n    );\n    this.updateTokensAndExpiration(\n      accessToken,\n      refreshToken,\n      Number(expiresIn)\n    );\n  }\n\n  private updateTokensAndExpiration(\n    accessToken: string,\n    refreshToken: string | null,\n    expiresInSec: number\n  ): void {\n    this.refreshToken = refreshToken || null;\n    this.accessToken = accessToken || null;\n    this.expirationTime = Date.now() + expiresInSec * 1000;\n  }\n\n  static fromJSON(appName: string, object: PersistedBlob): StsTokenManager {\n    const { refreshToken, accessToken, expirationTime } = object;\n\n    const manager = new StsTokenManager();\n    if (refreshToken) {\n      _assert(typeof refreshToken === 'string', AuthErrorCode.INTERNAL_ERROR, {\n        appName\n      });\n      manager.refreshToken = refreshToken;\n    }\n    if (accessToken) {\n      _assert(typeof accessToken === 'string', AuthErrorCode.INTERNAL_ERROR, {\n        appName\n      });\n      manager.accessToken = accessToken;\n    }\n    if (expirationTime) {\n      _assert(\n        typeof expirationTime === 'number',\n        AuthErrorCode.INTERNAL_ERROR,\n        {\n          appName\n        }\n      );\n      manager.expirationTime = expirationTime;\n    }\n    return manager;\n  }\n\n  toJSON(): object {\n    return {\n      refreshToken: this.refreshToken,\n      accessToken: this.accessToken,\n      expirationTime: this.expirationTime\n    };\n  }\n\n  _assign(stsTokenManager: StsTokenManager): void {\n    this.accessToken = stsTokenManager.accessToken;\n    this.refreshToken = stsTokenManager.refreshToken;\n    this.expirationTime = stsTokenManager.expirationTime;\n  }\n\n  _clone(): StsTokenManager {\n    return Object.assign(new StsTokenManager(), this.toJSON());\n  }\n\n  _performRefresh(): never {\n    return debugFail('not implemented');\n  }\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { IdTokenResult, UserInfo } from '../../model/public_types';\nimport { NextFn } from '@firebase/util';\nimport {\n  APIUserInfo,\n  GetAccountInfoResponse,\n  deleteAccount\n} from '../../api/account_management/account';\nimport { FinalizeMfaResponse } from '../../api/authentication/mfa';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport {\n  MutableUserInfo,\n  UserInternal,\n  UserParameters\n} from '../../model/user';\nimport { AuthErrorCode } from '../errors';\nimport { PersistedBlob } from '../persistence';\nimport {\n  _assert,\n  _serverAppCurrentUserOperationNotSupportedError\n} from '../util/assert';\nimport { getIdTokenResult } from './id_token_result';\nimport { _logoutIfInvalidated } from './invalidation';\nimport { ProactiveRefresh } from './proactive_refresh';\nimport { extractProviderData, _reloadWithoutSaving, reload } from './reload';\nimport { StsTokenManager } from './token_manager';\nimport { UserMetadata } from './user_metadata';\nimport { ProviderId } from '../../model/enums';\nimport { _isFirebaseServerApp } from '@firebase/app';\n\nfunction assertStringOrUndefined(\n  assertion: unknown,\n  appName: string\n): asserts assertion is string | undefined {\n  _assert(\n    typeof assertion === 'string' || typeof assertion === 'undefined',\n    AuthErrorCode.INTERNAL_ERROR,\n    { appName }\n  );\n}\n\nexport class UserImpl implements UserInternal {\n  // For the user object, provider is always Firebase.\n  readonly providerId = ProviderId.FIREBASE;\n  stsTokenManager: StsTokenManager;\n  // Last known accessToken so we know when it changes\n  private accessToken: string | null;\n\n  uid: string;\n  auth: AuthInternal;\n  emailVerified: boolean;\n  isAnonymous: boolean;\n  tenantId: string | null;\n  readonly metadata: UserMetadata;\n  providerData: MutableUserInfo[];\n\n  // Optional fields from UserInfo\n  displayName: string | null;\n  email: string | null;\n  phoneNumber: string | null;\n  photoURL: string | null;\n\n  _redirectEventId?: string;\n  private readonly proactiveRefresh = new ProactiveRefresh(this);\n\n  constructor({ uid, auth, stsTokenManager, ...opt }: UserParameters) {\n    this.uid = uid;\n    this.auth = auth;\n    this.stsTokenManager = stsTokenManager;\n    this.accessToken = stsTokenManager.accessToken;\n    this.displayName = opt.displayName || null;\n    this.email = opt.email || null;\n    this.emailVerified = opt.emailVerified || false;\n    this.phoneNumber = opt.phoneNumber || null;\n    this.photoURL = opt.photoURL || null;\n    this.isAnonymous = opt.isAnonymous || false;\n    this.tenantId = opt.tenantId || null;\n    this.providerData = opt.providerData ? [...opt.providerData] : [];\n    this.metadata = new UserMetadata(\n      opt.createdAt || undefined,\n      opt.lastLoginAt || undefined\n    );\n  }\n\n  async getIdToken(forceRefresh?: boolean): Promise<string> {\n    const accessToken = await _logoutIfInvalidated(\n      this,\n      this.stsTokenManager.getToken(this.auth, forceRefresh)\n    );\n    _assert(accessToken, this.auth, AuthErrorCode.INTERNAL_ERROR);\n\n    if (this.accessToken !== accessToken) {\n      this.accessToken = accessToken;\n      await this.auth._persistUserIfCurrent(this);\n      this.auth._notifyListenersIfCurrent(this);\n    }\n\n    return accessToken;\n  }\n\n  getIdTokenResult(forceRefresh?: boolean): Promise<IdTokenResult> {\n    return getIdTokenResult(this, forceRefresh);\n  }\n\n  reload(): Promise<void> {\n    return reload(this);\n  }\n\n  private reloadUserInfo: APIUserInfo | null = null;\n  private reloadListener: NextFn<APIUserInfo> | null = null;\n\n  _assign(user: UserInternal): void {\n    if (this === user) {\n      return;\n    }\n    _assert(this.uid === user.uid, this.auth, AuthErrorCode.INTERNAL_ERROR);\n    this.displayName = user.displayName;\n    this.photoURL = user.photoURL;\n    this.email = user.email;\n    this.emailVerified = user.emailVerified;\n    this.phoneNumber = user.phoneNumber;\n    this.isAnonymous = user.isAnonymous;\n    this.tenantId = user.tenantId;\n    this.providerData = user.providerData.map(userInfo => ({ ...userInfo }));\n    this.metadata._copy(user.metadata);\n    this.stsTokenManager._assign(user.stsTokenManager);\n  }\n\n  _clone(auth: AuthInternal): UserInternal {\n    const newUser = new UserImpl({\n      ...this,\n      auth,\n      stsTokenManager: this.stsTokenManager._clone()\n    });\n    newUser.metadata._copy(this.metadata);\n    return newUser;\n  }\n\n  _onReload(callback: NextFn<APIUserInfo>): void {\n    // There should only ever be one listener, and that is a single instance of MultiFactorUser\n    _assert(!this.reloadListener, this.auth, AuthErrorCode.INTERNAL_ERROR);\n    this.reloadListener = callback;\n    if (this.reloadUserInfo) {\n      this._notifyReloadListener(this.reloadUserInfo);\n      this.reloadUserInfo = null;\n    }\n  }\n\n  _notifyReloadListener(userInfo: APIUserInfo): void {\n    if (this.reloadListener) {\n      this.reloadListener(userInfo);\n    } else {\n      // If no listener is subscribed yet, save the result so it's available when they do subscribe\n      this.reloadUserInfo = userInfo;\n    }\n  }\n\n  _startProactiveRefresh(): void {\n    this.proactiveRefresh._start();\n  }\n\n  _stopProactiveRefresh(): void {\n    this.proactiveRefresh._stop();\n  }\n\n  async _updateTokensIfNecessary(\n    response: IdTokenResponse | FinalizeMfaResponse,\n    reload = false\n  ): Promise<void> {\n    let tokensRefreshed = false;\n    if (\n      response.idToken &&\n      response.idToken !== this.stsTokenManager.accessToken\n    ) {\n      this.stsTokenManager.updateFromServerResponse(response);\n      tokensRefreshed = true;\n    }\n\n    if (reload) {\n      await _reloadWithoutSaving(this);\n    }\n\n    await this.auth._persistUserIfCurrent(this);\n    if (tokensRefreshed) {\n      this.auth._notifyListenersIfCurrent(this);\n    }\n  }\n\n  async delete(): Promise<void> {\n    if (_isFirebaseServerApp(this.auth.app)) {\n      return Promise.reject(\n        _serverAppCurrentUserOperationNotSupportedError(this.auth)\n      );\n    }\n    const idToken = await this.getIdToken();\n    await _logoutIfInvalidated(this, deleteAccount(this.auth, { idToken }));\n    this.stsTokenManager.clearRefreshToken();\n\n    // TODO: Determine if cancellable-promises are necessary to use in this class so that delete()\n    //       cancels pending actions...\n\n    return this.auth.signOut();\n  }\n\n  toJSON(): PersistedBlob {\n    return {\n      uid: this.uid,\n      email: this.email || undefined,\n      emailVerified: this.emailVerified,\n      displayName: this.displayName || undefined,\n      isAnonymous: this.isAnonymous,\n      photoURL: this.photoURL || undefined,\n      phoneNumber: this.phoneNumber || undefined,\n      tenantId: this.tenantId || undefined,\n      providerData: this.providerData.map(userInfo => ({ ...userInfo })),\n      stsTokenManager: this.stsTokenManager.toJSON(),\n      // Redirect event ID must be maintained in case there is a pending\n      // redirect event.\n      _redirectEventId: this._redirectEventId,\n      ...this.metadata.toJSON(),\n\n      // Required for compatibility with the legacy SDK (go/firebase-auth-sdk-persistence-parsing):\n      apiKey: this.auth.config.apiKey,\n      appName: this.auth.name\n      // Missing authDomain will be tolerated by the legacy SDK.\n      // stsTokenManager.apiKey isn't actually required (despite the legacy SDK persisting it).\n    };\n  }\n\n  get refreshToken(): string {\n    return this.stsTokenManager.refreshToken || '';\n  }\n\n  static _fromJSON(auth: AuthInternal, object: PersistedBlob): UserInternal {\n    const displayName = object.displayName ?? undefined;\n    const email = object.email ?? undefined;\n    const phoneNumber = object.phoneNumber ?? undefined;\n    const photoURL = object.photoURL ?? undefined;\n    const tenantId = object.tenantId ?? undefined;\n    const _redirectEventId = object._redirectEventId ?? undefined;\n    const createdAt = object.createdAt ?? undefined;\n    const lastLoginAt = object.lastLoginAt ?? undefined;\n    const {\n      uid,\n      emailVerified,\n      isAnonymous,\n      providerData,\n      stsTokenManager: plainObjectTokenManager\n    } = object;\n\n    _assert(uid && plainObjectTokenManager, auth, AuthErrorCode.INTERNAL_ERROR);\n\n    const stsTokenManager = StsTokenManager.fromJSON(\n      this.name,\n      plainObjectTokenManager as PersistedBlob\n    );\n\n    _assert(typeof uid === 'string', auth, AuthErrorCode.INTERNAL_ERROR);\n    assertStringOrUndefined(displayName, auth.name);\n    assertStringOrUndefined(email, auth.name);\n    _assert(\n      typeof emailVerified === 'boolean',\n      auth,\n      AuthErrorCode.INTERNAL_ERROR\n    );\n    _assert(\n      typeof isAnonymous === 'boolean',\n      auth,\n      AuthErrorCode.INTERNAL_ERROR\n    );\n    assertStringOrUndefined(phoneNumber, auth.name);\n    assertStringOrUndefined(photoURL, auth.name);\n    assertStringOrUndefined(tenantId, auth.name);\n    assertStringOrUndefined(_redirectEventId, auth.name);\n    assertStringOrUndefined(createdAt, auth.name);\n    assertStringOrUndefined(lastLoginAt, auth.name);\n    const user = new UserImpl({\n      uid,\n      auth,\n      email,\n      emailVerified,\n      displayName,\n      isAnonymous,\n      photoURL,\n      phoneNumber,\n      tenantId,\n      stsTokenManager,\n      createdAt,\n      lastLoginAt\n    });\n\n    if (providerData && Array.isArray(providerData)) {\n      user.providerData = providerData.map(userInfo => ({ ...userInfo }));\n    }\n\n    if (_redirectEventId) {\n      user._redirectEventId = _redirectEventId;\n    }\n\n    return user;\n  }\n\n  /**\n   * Initialize a User from an idToken server response\n   * @param auth\n   * @param idTokenResponse\n   */\n  static async _fromIdTokenResponse(\n    auth: AuthInternal,\n    idTokenResponse: IdTokenResponse,\n    isAnonymous: boolean = false\n  ): Promise<UserInternal> {\n    const stsTokenManager = new StsTokenManager();\n    stsTokenManager.updateFromServerResponse(idTokenResponse);\n\n    // Initialize the Firebase Auth user.\n    const user = new UserImpl({\n      uid: idTokenResponse.localId,\n      auth,\n      stsTokenManager,\n      isAnonymous\n    });\n\n    // Updates the user info and data and resolves with a user instance.\n    await _reloadWithoutSaving(user);\n    return user;\n  }\n\n  /**\n   * Initialize a User from an idToken server response\n   * @param auth\n   * @param idTokenResponse\n   */\n  static async _fromGetAccountInfoResponse(\n    auth: AuthInternal,\n    response: GetAccountInfoResponse,\n    idToken: string\n  ): Promise<UserInternal> {\n    const coreAccount = response.users[0];\n    _assert(coreAccount.localId !== undefined, AuthErrorCode.INTERNAL_ERROR);\n\n    const providerData: UserInfo[] =\n      coreAccount.providerUserInfo !== undefined\n        ? extractProviderData(coreAccount.providerUserInfo)\n        : [];\n\n    const isAnonymous =\n      !(coreAccount.email && coreAccount.passwordHash) && !providerData?.length;\n\n    const stsTokenManager = new StsTokenManager();\n    stsTokenManager.updateFromIdToken(idToken);\n\n    // Initialize the Firebase Auth user.\n    const user = new UserImpl({\n      uid: coreAccount.localId,\n      auth,\n      stsTokenManager,\n      isAnonymous\n    });\n\n    // update the user with data from the GetAccountInfo response.\n    const updates: Partial<UserInternal> = {\n      uid: coreAccount.localId,\n      displayName: coreAccount.displayName || null,\n      photoURL: coreAccount.photoUrl || null,\n      email: coreAccount.email || null,\n      emailVerified: coreAccount.emailVerified || false,\n      phoneNumber: coreAccount.phoneNumber || null,\n      tenantId: coreAccount.tenantId || null,\n      providerData,\n      metadata: new UserMetadata(\n        coreAccount.createdAt,\n        coreAccount.lastLoginAt\n      ),\n      isAnonymous:\n        !(coreAccount.email && coreAccount.passwordHash) &&\n        !providerData?.length\n    };\n\n    Object.assign(user, updates);\n    return user;\n  }\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { debugAssert } from './assert';\n\n/**\n * Our API has a lot of one-off constants that are used to do things.\n * Unfortunately we can't export these as classes instantiated directly since\n * the constructor may side effect and therefore can't be proven to be safely\n * culled. Instead, we export these classes themselves as a lowerCamelCase\n * constant, and instantiate them under the hood.\n */\nexport interface SingletonInstantiator<T> {\n  new (): T;\n}\n\nconst instanceCache: Map<unknown, unknown> = new Map();\n\nexport function _getInstance<T>(cls: unknown): T {\n  debugAssert(cls instanceof Function, 'Expected a class definition');\n  let instance = instanceCache.get(cls) as T | undefined;\n\n  if (instance) {\n    debugAssert(\n      instance instanceof cls,\n      'Instance stored in cache mismatched with class'\n    );\n    return instance;\n  }\n\n  instance = new (cls as SingletonInstantiator<T>)();\n  instanceCache.set(cls, instance);\n  return instance;\n}\n\nexport function _clearInstanceMap(): void {\n  instanceCache.clear();\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Persistence } from '../../model/public_types';\n\nimport {\n  PersistenceInternal,\n  PersistenceType,\n  PersistenceValue,\n  StorageEventListener\n} from '../persistence';\n\nexport class InMemoryPersistence implements PersistenceInternal {\n  static type: 'NONE' = 'NONE';\n  readonly type = PersistenceType.NONE;\n  storage: Record<string, PersistenceValue> = {};\n\n  async _isAvailable(): Promise<boolean> {\n    return true;\n  }\n\n  async _set(key: string, value: PersistenceValue): Promise<void> {\n    this.storage[key] = value;\n  }\n\n  async _get<T extends PersistenceValue>(key: string): Promise<T | null> {\n    const value = this.storage[key];\n    return value === undefined ? null : (value as T);\n  }\n\n  async _remove(key: string): Promise<void> {\n    delete this.storage[key];\n  }\n\n  _addListener(_key: string, _listener: StorageEventListener): void {\n    // Listeners are not supported for in-memory storage since it cannot be shared across windows/workers\n    return;\n  }\n\n  _removeListener(_key: string, _listener: StorageEventListener): void {\n    // Listeners are not supported for in-memory storage since it cannot be shared across windows/workers\n    return;\n  }\n}\n\n/**\n * An implementation of {@link Persistence} of type 'NONE'.\n *\n * @public\n */\nexport const inMemoryPersistence: Persistence = InMemoryPersistence;\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ApiKey, AppName, AuthInternal } from '../../model/auth';\nimport { UserInternal } from '../../model/user';\nimport { PersistedBlob, PersistenceInternal } from '../persistence';\nimport { UserImpl } from '../user/user_impl';\nimport { _getInstance } from '../util/instantiator';\nimport { inMemoryPersistence } from './in_memory';\n\nexport const enum KeyName {\n  AUTH_USER = 'authUser',\n  AUTH_EVENT = 'authEvent',\n  REDIRECT_USER = 'redirectUser',\n  PERSISTENCE_USER = 'persistence'\n}\nexport const enum Namespace {\n  PERSISTENCE = 'firebase'\n}\n\nexport function _persistenceKeyName(\n  key: string,\n  apiKey: ApiKey,\n  appName: AppName\n): string {\n  return `${Namespace.PERSISTENCE}:${key}:${apiKey}:${appName}`;\n}\n\nexport class PersistenceUserManager {\n  private readonly fullUserKey: string;\n  private readonly fullPersistenceKey: string;\n  private readonly boundEventHandler: () => void;\n\n  private constructor(\n    public persistence: PersistenceInternal,\n    private readonly auth: AuthInternal,\n    private readonly userKey: string\n  ) {\n    const { config, name } = this.auth;\n    this.fullUserKey = _persistenceKeyName(this.userKey, config.apiKey, name);\n    this.fullPersistenceKey = _persistenceKeyName(\n      KeyName.PERSISTENCE_USER,\n      config.apiKey,\n      name\n    );\n    this.boundEventHandler = auth._onStorageEvent.bind(auth);\n    this.persistence._addListener(this.fullUserKey, this.boundEventHandler);\n  }\n\n  setCurrentUser(user: UserInternal): Promise<void> {\n    return this.persistence._set(this.fullUserKey, user.toJSON());\n  }\n\n  async getCurrentUser(): Promise<UserInternal | null> {\n    const blob = await this.persistence._get<PersistedBlob>(this.fullUserKey);\n    return blob ? UserImpl._fromJSON(this.auth, blob) : null;\n  }\n\n  removeCurrentUser(): Promise<void> {\n    return this.persistence._remove(this.fullUserKey);\n  }\n\n  savePersistenceForRedirect(): Promise<void> {\n    return this.persistence._set(\n      this.fullPersistenceKey,\n      this.persistence.type\n    );\n  }\n\n  async setPersistence(newPersistence: PersistenceInternal): Promise<void> {\n    if (this.persistence === newPersistence) {\n      return;\n    }\n\n    const currentUser = await this.getCurrentUser();\n    await this.removeCurrentUser();\n\n    this.persistence = newPersistence;\n\n    if (currentUser) {\n      return this.setCurrentUser(currentUser);\n    }\n  }\n\n  delete(): void {\n    this.persistence._removeListener(this.fullUserKey, this.boundEventHandler);\n  }\n\n  static async create(\n    auth: AuthInternal,\n    persistenceHierarchy: PersistenceInternal[],\n    userKey = KeyName.AUTH_USER\n  ): Promise<PersistenceUserManager> {\n    if (!persistenceHierarchy.length) {\n      return new PersistenceUserManager(\n        _getInstance(inMemoryPersistence),\n        auth,\n        userKey\n      );\n    }\n\n    // Eliminate any persistences that are not available\n    const availablePersistences = (\n      await Promise.all(\n        persistenceHierarchy.map(async persistence => {\n          if (await persistence._isAvailable()) {\n            return persistence;\n          }\n          return undefined;\n        })\n      )\n    ).filter(persistence => persistence) as PersistenceInternal[];\n\n    // Fall back to the first persistence listed, or in memory if none available\n    let selectedPersistence =\n      availablePersistences[0] ||\n      _getInstance<PersistenceInternal>(inMemoryPersistence);\n\n    const key = _persistenceKeyName(userKey, auth.config.apiKey, auth.name);\n\n    // Pull out the existing user, setting the chosen persistence to that\n    // persistence if the user exists.\n    let userToMigrate: UserInternal | null = null;\n    // Note, here we check for a user in _all_ persistences, not just the\n    // ones deemed available. If we can migrate a user out of a broken\n    // persistence, we will (but only if that persistence supports migration).\n    for (const persistence of persistenceHierarchy) {\n      try {\n        const blob = await persistence._get<PersistedBlob>(key);\n        if (blob) {\n          const user = UserImpl._fromJSON(auth, blob); // throws for unparsable blob (wrong format)\n          if (persistence !== selectedPersistence) {\n            userToMigrate = user;\n          }\n          selectedPersistence = persistence;\n          break;\n        }\n      } catch {}\n    }\n\n    // If we find the user in a persistence that does support migration, use\n    // that migration path (of only persistences that support migration)\n    const migrationHierarchy = availablePersistences.filter(\n      p => p._shouldAllowMigration\n    );\n\n    // If the persistence does _not_ allow migration, just finish off here\n    if (\n      !selectedPersistence._shouldAllowMigration ||\n      !migrationHierarchy.length\n    ) {\n      return new PersistenceUserManager(selectedPersistence, auth, userKey);\n    }\n\n    selectedPersistence = migrationHierarchy[0];\n    if (userToMigrate) {\n      // This normally shouldn't throw since chosenPersistence.isAvailable() is true, but if it does\n      // we'll just let it bubble to surface the error.\n      await selectedPersistence._set(key, userToMigrate.toJSON());\n    }\n\n    // Attempt to clear the key in other persistences but ignore errors. This helps prevent issues\n    // such as users getting stuck with a previous account after signing out and refreshing the tab.\n    await Promise.all(\n      persistenceHierarchy.map(async persistence => {\n        if (persistence !== selectedPersistence) {\n          try {\n            await persistence._remove(key);\n          } catch {}\n        }\n      })\n    );\n    return new PersistenceUserManager(selectedPersistence, auth, userKey);\n  }\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isIE, getUA } from '@firebase/util';\n\ninterface NavigatorStandalone extends Navigator {\n  standalone?: unknown;\n}\n\ninterface Document {\n  documentMode?: number;\n}\n\n/**\n * Enums for Browser name.\n */\nexport const enum BrowserName {\n  ANDROID = 'Android',\n  BLACKBERRY = 'Blackberry',\n  EDGE = 'Edge',\n  FIREFOX = 'Firefox',\n  IE = 'IE',\n  IEMOBILE = 'IEMobile',\n  OPERA = 'Opera',\n  OTHER = 'Other',\n  CHROME = 'Chrome',\n  SAFARI = 'Safari',\n  SILK = 'Silk',\n  WEBOS = 'Webos'\n}\n\n/**\n * Determine the browser for the purposes of reporting usage to the API\n */\nexport function _getBrowserName(userAgent: string): BrowserName | string {\n  const ua = userAgent.toLowerCase();\n  if (ua.includes('opera/') || ua.includes('opr/') || ua.includes('opios/')) {\n    return BrowserName.OPERA;\n  } else if (_isIEMobile(ua)) {\n    // Windows phone IEMobile browser.\n    return BrowserName.IEMOBILE;\n  } else if (ua.includes('msie') || ua.includes('trident/')) {\n    return BrowserName.IE;\n  } else if (ua.includes('edge/')) {\n    return BrowserName.EDGE;\n  } else if (_isFirefox(ua)) {\n    return BrowserName.FIREFOX;\n  } else if (ua.includes('silk/')) {\n    return BrowserName.SILK;\n  } else if (_isBlackBerry(ua)) {\n    // Blackberry browser.\n    return BrowserName.BLACKBERRY;\n  } else if (_isWebOS(ua)) {\n    // WebOS default browser.\n    return BrowserName.WEBOS;\n  } else if (_isSafari(ua)) {\n    return BrowserName.SAFARI;\n  } else if (\n    (ua.includes('chrome/') || _isChromeIOS(ua)) &&\n    !ua.includes('edge/')\n  ) {\n    return BrowserName.CHROME;\n  } else if (_isAndroid(ua)) {\n    // Android stock browser.\n    return BrowserName.ANDROID;\n  } else {\n    // Most modern browsers have name/version at end of user agent string.\n    const re = /([a-zA-Z\\d\\.]+)\\/[a-zA-Z\\d\\.]*$/;\n    const matches = userAgent.match(re);\n    if (matches?.length === 2) {\n      return matches[1];\n    }\n  }\n  return BrowserName.OTHER;\n}\n\nexport function _isFirefox(ua = getUA()): boolean {\n  return /firefox\\//i.test(ua);\n}\n\nexport function _isSafari(userAgent = getUA()): boolean {\n  const ua = userAgent.toLowerCase();\n  return (\n    ua.includes('safari/') &&\n    !ua.includes('chrome/') &&\n    !ua.includes('crios/') &&\n    !ua.includes('android')\n  );\n}\n\nexport function _isChromeIOS(ua = getUA()): boolean {\n  return /crios\\//i.test(ua);\n}\n\nexport function _isIEMobile(ua = getUA()): boolean {\n  return /iemobile/i.test(ua);\n}\n\nexport function _isAndroid(ua = getUA()): boolean {\n  return /android/i.test(ua);\n}\n\nexport function _isBlackBerry(ua = getUA()): boolean {\n  return /blackberry/i.test(ua);\n}\n\nexport function _isWebOS(ua = getUA()): boolean {\n  return /webos/i.test(ua);\n}\n\nexport function _isIOS(ua = getUA()): boolean {\n  return (\n    /iphone|ipad|ipod/i.test(ua) ||\n    (/macintosh/i.test(ua) && /mobile/i.test(ua))\n  );\n}\n\nexport function _isIOS7Or8(ua = getUA()): boolean {\n  return (\n    /(iPad|iPhone|iPod).*OS 7_\\d/i.test(ua) ||\n    /(iPad|iPhone|iPod).*OS 8_\\d/i.test(ua)\n  );\n}\n\nexport function _isIOSStandalone(ua = getUA()): boolean {\n  return _isIOS(ua) && !!(window.navigator as NavigatorStandalone)?.standalone;\n}\n\nexport function _isIE10(): boolean {\n  return isIE() && (document as Document).documentMode === 10;\n}\n\nexport function _isMobileBrowser(ua: string = getUA()): boolean {\n  // TODO: implement getBrowserName equivalent for OS.\n  return (\n    _isIOS(ua) ||\n    _isAndroid(ua) ||\n    _isWebOS(ua) ||\n    _isBlackBerry(ua) ||\n    /windows phone/i.test(ua) ||\n    _isIEMobile(ua)\n  );\n}\n\nexport function _isIframe(): boolean {\n  try {\n    // Check that the current window is not the top window.\n    // If so, return true.\n    return !!(window && window !== window.top);\n  } catch (e) {\n    return false;\n  }\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SDK_VERSION } from '@firebase/app';\nimport { _getBrowserName } from './browser';\nimport { getUA } from '@firebase/util';\n\nexport const enum ClientImplementation {\n  CORE = 'JsCore'\n}\n\n/**\n * @internal\n */\nexport const enum ClientPlatform {\n  BROWSER = 'Browser',\n  NODE = 'Node',\n  REACT_NATIVE = 'ReactNative',\n  CORDOVA = 'Cordova',\n  WORKER = 'Worker',\n  WEB_EXTENSION = 'WebExtension'\n}\n\n/*\n * Determine the SDK version string\n */\nexport function _getClientVersion(\n  clientPlatform: ClientPlatform,\n  frameworks: readonly string[] = []\n): string {\n  let reportedPlatform: string;\n  switch (clientPlatform) {\n    case ClientPlatform.BROWSER:\n      // In a browser environment, report the browser name.\n      reportedPlatform = _getBrowserName(getUA());\n      break;\n    case ClientPlatform.WORKER:\n      // Technically a worker runs from a browser but we need to differentiate a\n      // worker from a browser.\n      // For example: Chrome-Worker/JsCore/4.9.1/FirebaseCore-web.\n      reportedPlatform = `${_getBrowserName(getUA())}-${clientPlatform}`;\n      break;\n    default:\n      reportedPlatform = clientPlatform;\n  }\n  const reportedFrameworks = frameworks.length\n    ? frameworks.join(',')\n    : 'FirebaseCore-web'; /* default value if no other framework is used */\n  return `${reportedPlatform}/${ClientImplementation.CORE}/${SDK_VERSION}/${reportedFrameworks}`;\n}\n", "/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthInternal } from '../../model/auth';\nimport { Unsubscribe, User } from '../../model/public_types';\nimport { AuthErrorCode } from '../errors';\n\ninterface MiddlewareEntry {\n  (user: User | null): Promise<void>;\n  onAbort?: () => void;\n}\n\nexport class AuthMiddlewareQueue {\n  private readonly queue: MiddlewareEntry[] = [];\n\n  constructor(private readonly auth: AuthInternal) {}\n\n  pushCallback(\n    callback: (user: User | null) => void | Promise<void>,\n    onAbort?: () => void\n  ): Unsubscribe {\n    // The callback could be sync or async. Wrap it into a\n    // function that is always async.\n    const wrappedCallback: MiddlewareEntry = (\n      user: User | null\n    ): Promise<void> =>\n      new Promise((resolve, reject) => {\n        try {\n          const result = callback(user);\n          // Either resolve with existing promise or wrap a non-promise\n          // return value into a promise.\n          resolve(result);\n        } catch (e) {\n          // Sync callback throws.\n          reject(e);\n        }\n      });\n    // Attach the onAbort if present\n    wrappedCallback.onAbort = onAbort;\n    this.queue.push(wrappedCallback);\n\n    const index = this.queue.length - 1;\n    return () => {\n      // Unsubscribe. Replace with no-op. Do not remove from array, or it will disturb\n      // indexing of other elements.\n      this.queue[index] = () => Promise.resolve();\n    };\n  }\n\n  async runMiddleware(nextUser: User | null): Promise<void> {\n    if (this.auth.currentUser === nextUser) {\n      return;\n    }\n\n    // While running the middleware, build a temporary stack of onAbort\n    // callbacks to call if one middleware callback rejects.\n\n    const onAbortStack: Array<() => void> = [];\n    try {\n      for (const beforeStateCallback of this.queue) {\n        await beforeStateCallback(nextUser);\n\n        // Only push the onAbort if the callback succeeds\n        if (beforeStateCallback.onAbort) {\n          onAbortStack.push(beforeStateCallback.onAbort);\n        }\n      }\n    } catch (e) {\n      // Run all onAbort, with separate try/catch to ignore any errors and\n      // continue\n      onAbortStack.reverse();\n      for (const onAbort of onAbortStack) {\n        try {\n          onAbort();\n        } catch (_) {\n          /* swallow error */\n        }\n      }\n\n      throw this.auth._errorFactory.create(AuthErrorCode.LOGIN_BLOCKED, {\n        originalMessage: (e as Error)?.message\n      });\n    }\n  }\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  _performApiRequest,\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary\n} from '../index';\nimport { Auth } from '../../model/public_types';\n\n/**\n * Request object for fetching the password policy.\n */\nexport interface GetPasswordPolicyRequest {\n  tenantId?: string;\n}\n\n/**\n * Response object for fetching the password policy.\n */\nexport interface GetPasswordPolicyResponse {\n  customStrengthOptions: {\n    minPasswordLength?: number;\n    maxPasswordLength?: number;\n    containsLowercaseCharacter?: boolean;\n    containsUppercaseCharacter?: boolean;\n    containsNumericCharacter?: boolean;\n    containsNonAlphanumericCharacter?: boolean;\n  };\n  allowedNonAlphanumericCharacters?: string[];\n  enforcementState: string;\n  forceUpgradeOnSignin?: boolean;\n  schemaVersion: number;\n}\n\n/**\n * Fetches the password policy for the currently set tenant or the project if no tenant is set.\n *\n * @param auth Auth object.\n * @param request Password policy request.\n * @returns Password policy response.\n */\nexport async function _getPasswordPolicy(\n  auth: Auth,\n  request: GetPasswordPolicyRequest = {}\n): Promise<GetPasswordPolicyResponse> {\n  return _performApiRequest<\n    GetPasswordPolicyRequest,\n    GetPasswordPolicyResponse\n  >(\n    auth,\n    HttpMethod.GET,\n    Endpoint.GET_PASSWORD_POLICY,\n    _addTidIfNecessary(auth, request)\n  );\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { GetPasswordPolicyResponse } from '../../api/password_policy/get_password_policy';\nimport {\n  PasswordPolicyCustomStrengthOptions,\n  PasswordPolicyInternal,\n  PasswordValidationStatusInternal\n} from '../../model/password_policy';\nimport { PasswordValidationStatus } from '../../model/public_types';\n\n// Minimum min password length enforced by the backend, even if no minimum length is set.\nconst MINIMUM_MIN_PASSWORD_LENGTH = 6;\n\n/**\n * Stores password policy requirements and provides password validation against the policy.\n *\n * @internal\n */\nexport class PasswordPolicyImpl implements PasswordPolicyInternal {\n  readonly customStrengthOptions: PasswordPolicyCustomStrengthOptions;\n  readonly allowedNonAlphanumericCharacters: string;\n  readonly enforcementState: string;\n  readonly forceUpgradeOnSignin: boolean;\n  readonly schemaVersion: number;\n\n  constructor(response: GetPasswordPolicyResponse) {\n    // Only include custom strength options defined in the response.\n    const responseOptions = response.customStrengthOptions;\n    this.customStrengthOptions = {};\n    // TODO: Remove once the backend is updated to include the minimum min password length instead of undefined when there is no minimum length set.\n    this.customStrengthOptions.minPasswordLength =\n      responseOptions.minPasswordLength ?? MINIMUM_MIN_PASSWORD_LENGTH;\n    if (responseOptions.maxPasswordLength) {\n      this.customStrengthOptions.maxPasswordLength =\n        responseOptions.maxPasswordLength;\n    }\n    if (responseOptions.containsLowercaseCharacter !== undefined) {\n      this.customStrengthOptions.containsLowercaseLetter =\n        responseOptions.containsLowercaseCharacter;\n    }\n    if (responseOptions.containsUppercaseCharacter !== undefined) {\n      this.customStrengthOptions.containsUppercaseLetter =\n        responseOptions.containsUppercaseCharacter;\n    }\n    if (responseOptions.containsNumericCharacter !== undefined) {\n      this.customStrengthOptions.containsNumericCharacter =\n        responseOptions.containsNumericCharacter;\n    }\n    if (responseOptions.containsNonAlphanumericCharacter !== undefined) {\n      this.customStrengthOptions.containsNonAlphanumericCharacter =\n        responseOptions.containsNonAlphanumericCharacter;\n    }\n\n    this.enforcementState = response.enforcementState;\n    if (this.enforcementState === 'ENFORCEMENT_STATE_UNSPECIFIED') {\n      this.enforcementState = 'OFF';\n    }\n\n    // Use an empty string if no non-alphanumeric characters are specified in the response.\n    this.allowedNonAlphanumericCharacters =\n      response.allowedNonAlphanumericCharacters?.join('') ?? '';\n\n    this.forceUpgradeOnSignin = response.forceUpgradeOnSignin ?? false;\n    this.schemaVersion = response.schemaVersion;\n  }\n\n  validatePassword(password: string): PasswordValidationStatus {\n    const status: PasswordValidationStatusInternal = {\n      isValid: true,\n      passwordPolicy: this\n    };\n\n    // Check the password length and character options.\n    this.validatePasswordLengthOptions(password, status);\n    this.validatePasswordCharacterOptions(password, status);\n\n    // Combine the status into single isValid property.\n    status.isValid &&= status.meetsMinPasswordLength ?? true;\n    status.isValid &&= status.meetsMaxPasswordLength ?? true;\n    status.isValid &&= status.containsLowercaseLetter ?? true;\n    status.isValid &&= status.containsUppercaseLetter ?? true;\n    status.isValid &&= status.containsNumericCharacter ?? true;\n    status.isValid &&= status.containsNonAlphanumericCharacter ?? true;\n\n    return status;\n  }\n\n  /**\n   * Validates that the password meets the length options for the policy.\n   *\n   * @param password Password to validate.\n   * @param status Validation status.\n   */\n  private validatePasswordLengthOptions(\n    password: string,\n    status: PasswordValidationStatusInternal\n  ): void {\n    const minPasswordLength = this.customStrengthOptions.minPasswordLength;\n    const maxPasswordLength = this.customStrengthOptions.maxPasswordLength;\n    if (minPasswordLength) {\n      status.meetsMinPasswordLength = password.length >= minPasswordLength;\n    }\n    if (maxPasswordLength) {\n      status.meetsMaxPasswordLength = password.length <= maxPasswordLength;\n    }\n  }\n\n  /**\n   * Validates that the password meets the character options for the policy.\n   *\n   * @param password Password to validate.\n   * @param status Validation status.\n   */\n  private validatePasswordCharacterOptions(\n    password: string,\n    status: PasswordValidationStatusInternal\n  ): void {\n    // Assign statuses for requirements even if the password is an empty string.\n    this.updatePasswordCharacterOptionsStatuses(\n      status,\n      /* containsLowercaseCharacter= */ false,\n      /* containsUppercaseCharacter= */ false,\n      /* containsNumericCharacter= */ false,\n      /* containsNonAlphanumericCharacter= */ false\n    );\n\n    let passwordChar;\n    for (let i = 0; i < password.length; i++) {\n      passwordChar = password.charAt(i);\n      this.updatePasswordCharacterOptionsStatuses(\n        status,\n        /* containsLowercaseCharacter= */ passwordChar >= 'a' &&\n          passwordChar <= 'z',\n        /* containsUppercaseCharacter= */ passwordChar >= 'A' &&\n          passwordChar <= 'Z',\n        /* containsNumericCharacter= */ passwordChar >= '0' &&\n          passwordChar <= '9',\n        /* containsNonAlphanumericCharacter= */ this.allowedNonAlphanumericCharacters.includes(\n          passwordChar\n        )\n      );\n    }\n  }\n\n  /**\n   * Updates the running validation status with the statuses for the character options.\n   * Expected to be called each time a character is processed to update each option status\n   * based on the current character.\n   *\n   * @param status Validation status.\n   * @param containsLowercaseCharacter Whether the character is a lowercase letter.\n   * @param containsUppercaseCharacter Whether the character is an uppercase letter.\n   * @param containsNumericCharacter Whether the character is a numeric character.\n   * @param containsNonAlphanumericCharacter Whether the character is a non-alphanumeric character.\n   */\n  private updatePasswordCharacterOptionsStatuses(\n    status: PasswordValidationStatusInternal,\n    containsLowercaseCharacter: boolean,\n    containsUppercaseCharacter: boolean,\n    containsNumericCharacter: boolean,\n    containsNonAlphanumericCharacter: boolean\n  ): void {\n    if (this.customStrengthOptions.containsLowercaseLetter) {\n      status.containsLowercaseLetter ||= containsLowercaseCharacter;\n    }\n    if (this.customStrengthOptions.containsUppercaseLetter) {\n      status.containsUppercaseLetter ||= containsUppercaseCharacter;\n    }\n    if (this.customStrengthOptions.containsNumericCharacter) {\n      status.containsNumericCharacter ||= containsNumericCharacter;\n    }\n    if (this.customStrengthOptions.containsNonAlphanumericCharacter) {\n      status.containsNonAlphanumericCharacter ||=\n        containsNonAlphanumericCharacter;\n    }\n  }\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  _isFirebaseServerApp,\n  _FirebaseService,\n  FirebaseApp\n} from '@firebase/app';\nimport { Provider } from '@firebase/component';\nimport { AppCheckInternalComponentName } from '@firebase/app-check-interop-types';\nimport {\n  Auth,\n  AuthErrorMap,\n  AuthSettings,\n  EmulatorConfig,\n  NextOrObserver,\n  Persistence,\n  PopupRedirectResolver,\n  User,\n  UserCredential,\n  CompleteFn,\n  ErrorFn,\n  NextFn,\n  Unsubscribe,\n  PasswordValidationStatus\n} from '../../model/public_types';\nimport {\n  createSubscribe,\n  ErrorFactory,\n  FirebaseError,\n  getModularInstance,\n  Observer,\n  Subscribe\n} from '@firebase/util';\n\nimport { AuthInternal, ConfigInternal } from '../../model/auth';\nimport { PopupRedirectResolverInternal } from '../../model/popup_redirect';\nimport { UserInternal } from '../../model/user';\nimport {\n  AuthErrorCode,\n  AuthErrorParams,\n  ErrorMapRetriever,\n  _DEFAULT_AUTH_ERROR_FACTORY\n} from '../errors';\nimport { PersistenceInternal } from '../persistence';\nimport {\n  KeyName,\n  PersistenceUserManager\n} from '../persistence/persistence_user_manager';\nimport { _reloadWithoutSaving } from '../user/reload';\nimport {\n  _assert,\n  _serverAppCurrentUserOperationNotSupportedError\n} from '../util/assert';\nimport { _getInstance } from '../util/instantiator';\nimport { _getUserLanguage } from '../util/navigator';\nimport { _getClientVersion } from '../util/version';\nimport { HttpHeader } from '../../api';\nimport {\n  RevokeTokenRequest,\n  TokenType,\n  revokeToken\n} from '../../api/authentication/token';\nimport { AuthMiddlewareQueue } from './middleware';\nimport { RecaptchaConfig } from '../../platform_browser/recaptcha/recaptcha';\nimport { _logWarn } from '../util/log';\nimport { _getPasswordPolicy } from '../../api/password_policy/get_password_policy';\nimport { PasswordPolicyInternal } from '../../model/password_policy';\nimport { PasswordPolicyImpl } from './password_policy_impl';\nimport { getAccountInfo } from '../../api/account_management/account';\nimport { UserImpl } from '../user/user_impl';\n\ninterface AsyncAction {\n  (): Promise<void>;\n}\n\nexport const enum DefaultConfig {\n  TOKEN_API_HOST = 'securetoken.googleapis.com',\n  API_HOST = 'identitytoolkit.googleapis.com',\n  API_SCHEME = 'https'\n}\n\nexport class AuthImpl implements AuthInternal, _FirebaseService {\n  currentUser: User | null = null;\n  emulatorConfig: EmulatorConfig | null = null;\n  private operations = Promise.resolve();\n  private persistenceManager?: PersistenceUserManager;\n  private redirectPersistenceManager?: PersistenceUserManager;\n  private authStateSubscription = new Subscription<User>(this);\n  private idTokenSubscription = new Subscription<User>(this);\n  private readonly beforeStateQueue = new AuthMiddlewareQueue(this);\n  private redirectUser: UserInternal | null = null;\n  private isProactiveRefreshEnabled = false;\n  private readonly EXPECTED_PASSWORD_POLICY_SCHEMA_VERSION: number = 1;\n\n  // Any network calls will set this to true and prevent subsequent emulator\n  // initialization\n  _canInitEmulator = true;\n  _isInitialized = false;\n  _deleted = false;\n  _initializationPromise: Promise<void> | null = null;\n  _popupRedirectResolver: PopupRedirectResolverInternal | null = null;\n  _errorFactory: ErrorFactory<AuthErrorCode, AuthErrorParams> =\n    _DEFAULT_AUTH_ERROR_FACTORY;\n  _agentRecaptchaConfig: RecaptchaConfig | null = null;\n  _tenantRecaptchaConfigs: Record<string, RecaptchaConfig> = {};\n  _projectPasswordPolicy: PasswordPolicyInternal | null = null;\n  _tenantPasswordPolicies: Record<string, PasswordPolicyInternal> = {};\n  readonly name: string;\n\n  // Tracks the last notified UID for state change listeners to prevent\n  // repeated calls to the callbacks. Undefined means it's never been\n  // called, whereas null means it's been called with a signed out user\n  private lastNotifiedUid: string | null | undefined = undefined;\n\n  languageCode: string | null = null;\n  tenantId: string | null = null;\n  settings: AuthSettings = { appVerificationDisabledForTesting: false };\n\n  constructor(\n    public readonly app: FirebaseApp,\n    private readonly heartbeatServiceProvider: Provider<'heartbeat'>,\n    private readonly appCheckServiceProvider: Provider<AppCheckInternalComponentName>,\n    public readonly config: ConfigInternal\n  ) {\n    this.name = app.name;\n    this.clientVersion = config.sdkClientVersion;\n  }\n\n  _initializeWithPersistence(\n    persistenceHierarchy: PersistenceInternal[],\n    popupRedirectResolver?: PopupRedirectResolver\n  ): Promise<void> {\n    if (popupRedirectResolver) {\n      this._popupRedirectResolver = _getInstance(popupRedirectResolver);\n    }\n\n    // Have to check for app deletion throughout initialization (after each\n    // promise resolution)\n    this._initializationPromise = this.queue(async () => {\n      if (this._deleted) {\n        return;\n      }\n\n      this.persistenceManager = await PersistenceUserManager.create(\n        this,\n        persistenceHierarchy\n      );\n\n      if (this._deleted) {\n        return;\n      }\n\n      // Initialize the resolver early if necessary (only applicable to web:\n      // this will cause the iframe to load immediately in certain cases)\n      if (this._popupRedirectResolver?._shouldInitProactively) {\n        // If this fails, don't halt auth loading\n        try {\n          await this._popupRedirectResolver._initialize(this);\n        } catch (e) {\n          /* Ignore the error */\n        }\n      }\n\n      await this.initializeCurrentUser(popupRedirectResolver);\n\n      this.lastNotifiedUid = this.currentUser?.uid || null;\n\n      if (this._deleted) {\n        return;\n      }\n\n      this._isInitialized = true;\n    });\n\n    return this._initializationPromise;\n  }\n\n  /**\n   * If the persistence is changed in another window, the user manager will let us know\n   */\n  async _onStorageEvent(): Promise<void> {\n    if (this._deleted) {\n      return;\n    }\n\n    const user = await this.assertedPersistence.getCurrentUser();\n\n    if (!this.currentUser && !user) {\n      // No change, do nothing (was signed out and remained signed out).\n      return;\n    }\n\n    // If the same user is to be synchronized.\n    if (this.currentUser && user && this.currentUser.uid === user.uid) {\n      // Data update, simply copy data changes.\n      this._currentUser._assign(user);\n      // If tokens changed from previous user tokens, this will trigger\n      // notifyAuthListeners_.\n      await this.currentUser.getIdToken();\n      return;\n    }\n\n    // Update current Auth state. Either a new login or logout.\n    // Skip blocking callbacks, they should not apply to a change in another tab.\n    await this._updateCurrentUser(user, /* skipBeforeStateCallbacks */ true);\n  }\n\n  private async initializeCurrentUserFromIdToken(\n    idToken: string\n  ): Promise<void> {\n    try {\n      const response = await getAccountInfo(this, { idToken });\n      const user = await UserImpl._fromGetAccountInfoResponse(\n        this,\n        response,\n        idToken\n      );\n      await this.directlySetCurrentUser(user);\n    } catch (err) {\n      console.warn(\n        'FirebaseServerApp could not login user with provided authIdToken: ',\n        err\n      );\n      await this.directlySetCurrentUser(null);\n    }\n  }\n\n  private async initializeCurrentUser(\n    popupRedirectResolver?: PopupRedirectResolver\n  ): Promise<void> {\n    if (_isFirebaseServerApp(this.app)) {\n      const idToken = this.app.settings.authIdToken;\n      if (idToken) {\n        // Start the auth operation in the next tick to allow a moment for the customer's app to\n        // attach an emulator, if desired.\n        return new Promise<void>(resolve => {\n          setTimeout(() =>\n            this.initializeCurrentUserFromIdToken(idToken).then(\n              resolve,\n              resolve\n            )\n          );\n        });\n      } else {\n        return this.directlySetCurrentUser(null);\n      }\n    }\n\n    // First check to see if we have a pending redirect event.\n    const previouslyStoredUser =\n      (await this.assertedPersistence.getCurrentUser()) as UserInternal | null;\n    let futureCurrentUser = previouslyStoredUser;\n    let needsTocheckMiddleware = false;\n    if (popupRedirectResolver && this.config.authDomain) {\n      await this.getOrInitRedirectPersistenceManager();\n      const redirectUserEventId = this.redirectUser?._redirectEventId;\n      const storedUserEventId = futureCurrentUser?._redirectEventId;\n      const result = await this.tryRedirectSignIn(popupRedirectResolver);\n\n      // If the stored user (i.e. the old \"currentUser\") has a redirectId that\n      // matches the redirect user, then we want to initially sign in with the\n      // new user object from result.\n      // TODO(samgho): More thoroughly test all of this\n      if (\n        (!redirectUserEventId || redirectUserEventId === storedUserEventId) &&\n        result?.user\n      ) {\n        futureCurrentUser = result.user as UserInternal;\n        needsTocheckMiddleware = true;\n      }\n    }\n\n    // If no user in persistence, there is no current user. Set to null.\n    if (!futureCurrentUser) {\n      return this.directlySetCurrentUser(null);\n    }\n\n    if (!futureCurrentUser._redirectEventId) {\n      // This isn't a redirect link operation, we can reload and bail.\n      // First though, ensure that we check the middleware is happy.\n      if (needsTocheckMiddleware) {\n        try {\n          await this.beforeStateQueue.runMiddleware(futureCurrentUser);\n        } catch (e) {\n          futureCurrentUser = previouslyStoredUser;\n          // We know this is available since the bit is only set when the\n          // resolver is available\n          this._popupRedirectResolver!._overrideRedirectResult(this, () =>\n            Promise.reject(e)\n          );\n        }\n      }\n\n      if (futureCurrentUser) {\n        return this.reloadAndSetCurrentUserOrClear(futureCurrentUser);\n      } else {\n        return this.directlySetCurrentUser(null);\n      }\n    }\n\n    _assert(this._popupRedirectResolver, this, AuthErrorCode.ARGUMENT_ERROR);\n    await this.getOrInitRedirectPersistenceManager();\n\n    // If the redirect user's event ID matches the current user's event ID,\n    // DO NOT reload the current user, otherwise they'll be cleared from storage.\n    // This is important for the reauthenticateWithRedirect() flow.\n    if (\n      this.redirectUser &&\n      this.redirectUser._redirectEventId === futureCurrentUser._redirectEventId\n    ) {\n      return this.directlySetCurrentUser(futureCurrentUser);\n    }\n\n    return this.reloadAndSetCurrentUserOrClear(futureCurrentUser);\n  }\n\n  private async tryRedirectSignIn(\n    redirectResolver: PopupRedirectResolver\n  ): Promise<UserCredential | null> {\n    // The redirect user needs to be checked (and signed in if available)\n    // during auth initialization. All of the normal sign in and link/reauth\n    // flows call back into auth and push things onto the promise queue. We\n    // need to await the result of the redirect sign in *inside the promise\n    // queue*. This presents a problem: we run into deadlock. See:\n    //    ┌> [Initialization] ─────┐\n    //    ┌> [<other queue tasks>] │\n    //    └─ [getRedirectResult] <─┘\n    //    where [] are tasks on the queue and arrows denote awaits\n    // Initialization will never complete because it's waiting on something\n    // that's waiting for initialization to complete!\n    //\n    // Instead, this method calls getRedirectResult() (stored in\n    // _completeRedirectFn) with an optional parameter that instructs all of\n    // the underlying auth operations to skip anything that mutates auth state.\n\n    let result: UserCredential | null = null;\n    try {\n      // We know this._popupRedirectResolver is set since redirectResolver\n      // is passed in. The _completeRedirectFn expects the unwrapped extern.\n      result = await this._popupRedirectResolver!._completeRedirectFn(\n        this,\n        redirectResolver,\n        true\n      );\n    } catch (e) {\n      // Swallow any errors here; the code can retrieve them in\n      // getRedirectResult().\n      await this._setRedirectUser(null);\n    }\n\n    return result;\n  }\n\n  private async reloadAndSetCurrentUserOrClear(\n    user: UserInternal\n  ): Promise<void> {\n    try {\n      await _reloadWithoutSaving(user);\n    } catch (e) {\n      if (\n        (e as FirebaseError)?.code !==\n        `auth/${AuthErrorCode.NETWORK_REQUEST_FAILED}`\n      ) {\n        // Something's wrong with the user's token. Log them out and remove\n        // them from storage\n        return this.directlySetCurrentUser(null);\n      }\n    }\n\n    return this.directlySetCurrentUser(user);\n  }\n\n  useDeviceLanguage(): void {\n    this.languageCode = _getUserLanguage();\n  }\n\n  async _delete(): Promise<void> {\n    this._deleted = true;\n  }\n\n  async updateCurrentUser(userExtern: User | null): Promise<void> {\n    if (_isFirebaseServerApp(this.app)) {\n      return Promise.reject(\n        _serverAppCurrentUserOperationNotSupportedError(this)\n      );\n    }\n    // The public updateCurrentUser method needs to make a copy of the user,\n    // and also check that the project matches\n    const user = userExtern\n      ? (getModularInstance(userExtern) as UserInternal)\n      : null;\n    if (user) {\n      _assert(\n        user.auth.config.apiKey === this.config.apiKey,\n        this,\n        AuthErrorCode.INVALID_AUTH\n      );\n    }\n    return this._updateCurrentUser(user && user._clone(this));\n  }\n\n  async _updateCurrentUser(\n    user: User | null,\n    skipBeforeStateCallbacks: boolean = false\n  ): Promise<void> {\n    if (this._deleted) {\n      return;\n    }\n    if (user) {\n      _assert(\n        this.tenantId === user.tenantId,\n        this,\n        AuthErrorCode.TENANT_ID_MISMATCH\n      );\n    }\n\n    if (!skipBeforeStateCallbacks) {\n      await this.beforeStateQueue.runMiddleware(user);\n    }\n\n    return this.queue(async () => {\n      await this.directlySetCurrentUser(user as UserInternal | null);\n      this.notifyAuthListeners();\n    });\n  }\n\n  async signOut(): Promise<void> {\n    if (_isFirebaseServerApp(this.app)) {\n      return Promise.reject(\n        _serverAppCurrentUserOperationNotSupportedError(this)\n      );\n    }\n    // Run first, to block _setRedirectUser() if any callbacks fail.\n    await this.beforeStateQueue.runMiddleware(null);\n    // Clear the redirect user when signOut is called\n    if (this.redirectPersistenceManager || this._popupRedirectResolver) {\n      await this._setRedirectUser(null);\n    }\n\n    // Prevent callbacks from being called again in _updateCurrentUser, as\n    // they were already called in the first line.\n    return this._updateCurrentUser(null, /* skipBeforeStateCallbacks */ true);\n  }\n\n  setPersistence(persistence: Persistence): Promise<void> {\n    if (_isFirebaseServerApp(this.app)) {\n      return Promise.reject(\n        _serverAppCurrentUserOperationNotSupportedError(this)\n      );\n    }\n    return this.queue(async () => {\n      await this.assertedPersistence.setPersistence(_getInstance(persistence));\n    });\n  }\n\n  _getRecaptchaConfig(): RecaptchaConfig | null {\n    if (this.tenantId == null) {\n      return this._agentRecaptchaConfig;\n    } else {\n      return this._tenantRecaptchaConfigs[this.tenantId];\n    }\n  }\n\n  async validatePassword(password: string): Promise<PasswordValidationStatus> {\n    if (!this._getPasswordPolicyInternal()) {\n      await this._updatePasswordPolicy();\n    }\n\n    // Password policy will be defined after fetching.\n    const passwordPolicy: PasswordPolicyInternal =\n      this._getPasswordPolicyInternal()!;\n\n    // Check that the policy schema version is supported by the SDK.\n    // TODO: Update this logic to use a max supported policy schema version once we have multiple schema versions.\n    if (\n      passwordPolicy.schemaVersion !==\n      this.EXPECTED_PASSWORD_POLICY_SCHEMA_VERSION\n    ) {\n      return Promise.reject(\n        this._errorFactory.create(\n          AuthErrorCode.UNSUPPORTED_PASSWORD_POLICY_SCHEMA_VERSION,\n          {}\n        )\n      );\n    }\n\n    return passwordPolicy.validatePassword(password);\n  }\n\n  _getPasswordPolicyInternal(): PasswordPolicyInternal | null {\n    if (this.tenantId === null) {\n      return this._projectPasswordPolicy;\n    } else {\n      return this._tenantPasswordPolicies[this.tenantId];\n    }\n  }\n\n  async _updatePasswordPolicy(): Promise<void> {\n    const response = await _getPasswordPolicy(this);\n\n    const passwordPolicy: PasswordPolicyInternal = new PasswordPolicyImpl(\n      response\n    );\n\n    if (this.tenantId === null) {\n      this._projectPasswordPolicy = passwordPolicy;\n    } else {\n      this._tenantPasswordPolicies[this.tenantId] = passwordPolicy;\n    }\n  }\n\n  _getPersistence(): string {\n    return this.assertedPersistence.persistence.type;\n  }\n\n  _updateErrorMap(errorMap: AuthErrorMap): void {\n    this._errorFactory = new ErrorFactory<AuthErrorCode, AuthErrorParams>(\n      'auth',\n      'Firebase',\n      (errorMap as ErrorMapRetriever)()\n    );\n  }\n\n  onAuthStateChanged(\n    nextOrObserver: NextOrObserver<User>,\n    error?: ErrorFn,\n    completed?: CompleteFn\n  ): Unsubscribe {\n    return this.registerStateListener(\n      this.authStateSubscription,\n      nextOrObserver,\n      error,\n      completed\n    );\n  }\n\n  beforeAuthStateChanged(\n    callback: (user: User | null) => void | Promise<void>,\n    onAbort?: () => void\n  ): Unsubscribe {\n    return this.beforeStateQueue.pushCallback(callback, onAbort);\n  }\n\n  onIdTokenChanged(\n    nextOrObserver: NextOrObserver<User>,\n    error?: ErrorFn,\n    completed?: CompleteFn\n  ): Unsubscribe {\n    return this.registerStateListener(\n      this.idTokenSubscription,\n      nextOrObserver,\n      error,\n      completed\n    );\n  }\n\n  authStateReady(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      if (this.currentUser) {\n        resolve();\n      } else {\n        const unsubscribe = this.onAuthStateChanged(() => {\n          unsubscribe();\n          resolve();\n        }, reject);\n      }\n    });\n  }\n\n  /**\n   * Revokes the given access token. Currently only supports Apple OAuth access tokens.\n   */\n  async revokeAccessToken(token: string): Promise<void> {\n    if (this.currentUser) {\n      const idToken = await this.currentUser.getIdToken();\n      // Generalize this to accept other providers once supported.\n      const request: RevokeTokenRequest = {\n        providerId: 'apple.com',\n        tokenType: TokenType.ACCESS_TOKEN,\n        token,\n        idToken\n      };\n      if (this.tenantId != null) {\n        request.tenantId = this.tenantId;\n      }\n      await revokeToken(this, request);\n    }\n  }\n\n  toJSON(): object {\n    return {\n      apiKey: this.config.apiKey,\n      authDomain: this.config.authDomain,\n      appName: this.name,\n      currentUser: this._currentUser?.toJSON()\n    };\n  }\n\n  async _setRedirectUser(\n    user: UserInternal | null,\n    popupRedirectResolver?: PopupRedirectResolver\n  ): Promise<void> {\n    const redirectManager = await this.getOrInitRedirectPersistenceManager(\n      popupRedirectResolver\n    );\n    return user === null\n      ? redirectManager.removeCurrentUser()\n      : redirectManager.setCurrentUser(user);\n  }\n\n  private async getOrInitRedirectPersistenceManager(\n    popupRedirectResolver?: PopupRedirectResolver\n  ): Promise<PersistenceUserManager> {\n    if (!this.redirectPersistenceManager) {\n      const resolver: PopupRedirectResolverInternal | null =\n        (popupRedirectResolver && _getInstance(popupRedirectResolver)) ||\n        this._popupRedirectResolver;\n      _assert(resolver, this, AuthErrorCode.ARGUMENT_ERROR);\n      this.redirectPersistenceManager = await PersistenceUserManager.create(\n        this,\n        [_getInstance(resolver._redirectPersistence)],\n        KeyName.REDIRECT_USER\n      );\n      this.redirectUser =\n        await this.redirectPersistenceManager.getCurrentUser();\n    }\n\n    return this.redirectPersistenceManager;\n  }\n\n  async _redirectUserForId(id: string): Promise<UserInternal | null> {\n    // Make sure we've cleared any pending persistence actions if we're not in\n    // the initializer\n    if (this._isInitialized) {\n      await this.queue(async () => {});\n    }\n\n    if (this._currentUser?._redirectEventId === id) {\n      return this._currentUser;\n    }\n\n    if (this.redirectUser?._redirectEventId === id) {\n      return this.redirectUser;\n    }\n\n    return null;\n  }\n\n  async _persistUserIfCurrent(user: UserInternal): Promise<void> {\n    if (user === this.currentUser) {\n      return this.queue(async () => this.directlySetCurrentUser(user));\n    }\n  }\n\n  /** Notifies listeners only if the user is current */\n  _notifyListenersIfCurrent(user: UserInternal): void {\n    if (user === this.currentUser) {\n      this.notifyAuthListeners();\n    }\n  }\n\n  _key(): string {\n    return `${this.config.authDomain}:${this.config.apiKey}:${this.name}`;\n  }\n\n  _startProactiveRefresh(): void {\n    this.isProactiveRefreshEnabled = true;\n    if (this.currentUser) {\n      this._currentUser._startProactiveRefresh();\n    }\n  }\n\n  _stopProactiveRefresh(): void {\n    this.isProactiveRefreshEnabled = false;\n    if (this.currentUser) {\n      this._currentUser._stopProactiveRefresh();\n    }\n  }\n\n  /** Returns the current user cast as the internal type */\n  get _currentUser(): UserInternal {\n    return this.currentUser as UserInternal;\n  }\n\n  private notifyAuthListeners(): void {\n    if (!this._isInitialized) {\n      return;\n    }\n\n    this.idTokenSubscription.next(this.currentUser);\n\n    const currentUid = this.currentUser?.uid ?? null;\n    if (this.lastNotifiedUid !== currentUid) {\n      this.lastNotifiedUid = currentUid;\n      this.authStateSubscription.next(this.currentUser);\n    }\n  }\n\n  private registerStateListener(\n    subscription: Subscription<User>,\n    nextOrObserver: NextOrObserver<User>,\n    error?: ErrorFn,\n    completed?: CompleteFn\n  ): Unsubscribe {\n    if (this._deleted) {\n      return () => {};\n    }\n\n    const cb =\n      typeof nextOrObserver === 'function'\n        ? nextOrObserver\n        : nextOrObserver.next.bind(nextOrObserver);\n\n    let isUnsubscribed = false;\n\n    const promise = this._isInitialized\n      ? Promise.resolve()\n      : this._initializationPromise;\n    _assert(promise, this, AuthErrorCode.INTERNAL_ERROR);\n    // The callback needs to be called asynchronously per the spec.\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    promise.then(() => {\n      if (isUnsubscribed) {\n        return;\n      }\n      cb(this.currentUser);\n    });\n\n    if (typeof nextOrObserver === 'function') {\n      const unsubscribe = subscription.addObserver(\n        nextOrObserver,\n        error,\n        completed\n      );\n      return () => {\n        isUnsubscribed = true;\n        unsubscribe();\n      };\n    } else {\n      const unsubscribe = subscription.addObserver(nextOrObserver);\n      return () => {\n        isUnsubscribed = true;\n        unsubscribe();\n      };\n    }\n  }\n\n  /**\n   * Unprotected (from race conditions) method to set the current user. This\n   * should only be called from within a queued callback. This is necessary\n   * because the queue shouldn't rely on another queued callback.\n   */\n  private async directlySetCurrentUser(\n    user: UserInternal | null\n  ): Promise<void> {\n    if (this.currentUser && this.currentUser !== user) {\n      this._currentUser._stopProactiveRefresh();\n    }\n    if (user && this.isProactiveRefreshEnabled) {\n      user._startProactiveRefresh();\n    }\n\n    this.currentUser = user;\n\n    if (user) {\n      await this.assertedPersistence.setCurrentUser(user);\n    } else {\n      await this.assertedPersistence.removeCurrentUser();\n    }\n  }\n\n  private queue(action: AsyncAction): Promise<void> {\n    // In case something errors, the callback still should be called in order\n    // to keep the promise chain alive\n    this.operations = this.operations.then(action, action);\n    return this.operations;\n  }\n\n  private get assertedPersistence(): PersistenceUserManager {\n    _assert(this.persistenceManager, this, AuthErrorCode.INTERNAL_ERROR);\n    return this.persistenceManager;\n  }\n\n  private frameworks: string[] = [];\n  private clientVersion: string;\n  _logFramework(framework: string): void {\n    if (!framework || this.frameworks.includes(framework)) {\n      return;\n    }\n    this.frameworks.push(framework);\n\n    // Sort alphabetically so that \"FirebaseCore-web,FirebaseUI-web\" and\n    // \"FirebaseUI-web,FirebaseCore-web\" aren't viewed as different.\n    this.frameworks.sort();\n    this.clientVersion = _getClientVersion(\n      this.config.clientPlatform,\n      this._getFrameworks()\n    );\n  }\n  _getFrameworks(): readonly string[] {\n    return this.frameworks;\n  }\n  async _getAdditionalHeaders(): Promise<Record<string, string>> {\n    // Additional headers on every request\n    const headers: Record<string, string> = {\n      [HttpHeader.X_CLIENT_VERSION]: this.clientVersion\n    };\n\n    if (this.app.options.appId) {\n      headers[HttpHeader.X_FIREBASE_GMPID] = this.app.options.appId;\n    }\n\n    // If the heartbeat service exists, add the heartbeat string\n    const heartbeatsHeader = await this.heartbeatServiceProvider\n      .getImmediate({\n        optional: true\n      })\n      ?.getHeartbeatsHeader();\n    if (heartbeatsHeader) {\n      headers[HttpHeader.X_FIREBASE_CLIENT] = heartbeatsHeader;\n    }\n\n    // If the App Check service exists, add the App Check token in the headers\n    const appCheckToken = await this._getAppCheckToken();\n    if (appCheckToken) {\n      headers[HttpHeader.X_FIREBASE_APP_CHECK] = appCheckToken;\n    }\n\n    return headers;\n  }\n\n  async _getAppCheckToken(): Promise<string | undefined> {\n    const appCheckTokenResult = await this.appCheckServiceProvider\n      .getImmediate({ optional: true })\n      ?.getToken();\n    if (appCheckTokenResult?.error) {\n      // Context: appCheck.getToken() will never throw even if an error happened.\n      // In the error case, a dummy token will be returned along with an error field describing\n      // the error. In general, we shouldn't care about the error condition and just use\n      // the token (actual or dummy) to send requests.\n      _logWarn(\n        `Error while retrieving App Check token: ${appCheckTokenResult.error}`\n      );\n    }\n    return appCheckTokenResult?.token;\n  }\n}\n\n/**\n * Method to be used to cast down to our private implmentation of Auth.\n * It will also handle unwrapping from the compat type if necessary\n *\n * @param auth Auth object passed in from developer\n */\nexport function _castAuth(auth: Auth): AuthInternal {\n  return getModularInstance(auth) as AuthInternal;\n}\n\n/** Helper class to wrap subscriber logic */\nclass Subscription<T> {\n  private observer: Observer<T | null> | null = null;\n  readonly addObserver: Subscribe<T | null> = createSubscribe(\n    observer => (this.observer = observer)\n  );\n\n  constructor(readonly auth: AuthInternal) {}\n\n  get next(): NextFn<T | null> {\n    _assert(this.observer, this.auth, AuthErrorCode.INTERNAL_ERROR);\n    return this.observer.next.bind(this.observer);\n  }\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ninterface ExternalJSProvider {\n  loadJS(url: string): Promise<Event>;\n  recaptchaV2Script: string;\n  recaptchaEnterpriseScript: string;\n  gapiScript: string;\n}\n\nlet externalJSProvider: ExternalJSProvider = {\n  async loadJS() {\n    throw new Error('Unable to load external scripts');\n  },\n\n  recaptchaV2Script: '',\n  recaptchaEnterpriseScript: '',\n  gapiScript: ''\n};\n\nexport function _setExternalJSProvider(p: ExternalJSProvider): void {\n  externalJSProvider = p;\n}\n\nexport function _loadJS(url: string): Promise<Event> {\n  return externalJSProvider.loadJS(url);\n}\n\nexport function _recaptchaV2ScriptUrl(): string {\n  return externalJSProvider.recaptchaV2Script;\n}\n\nexport function _recaptchaEnterpriseScriptUrl(): string {\n  return externalJSProvider.recaptchaEnterpriseScript;\n}\n\nexport function _gapiScriptUrl(): string {\n  return externalJSProvider.gapiScript;\n}\n\nexport function _generateCallbackName(prefix: string): string {\n  return `__${prefix}${Math.floor(Math.random() * 1000000)}`;\n}\n", "/* eslint-disable @typescript-eslint/no-require-imports */\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isEnterprise, RecaptchaConfig } from './recaptcha';\nimport { getRecaptchaConfig } from '../../api/authentication/recaptcha';\nimport {\n  RecaptchaClientType,\n  RecaptchaVersion,\n  RecaptchaActionName,\n  RecaptchaProvider\n} from '../../api';\n\nimport { Auth } from '../../model/public_types';\nimport { AuthInternal } from '../../model/auth';\nimport { _castAuth } from '../../core/auth/auth_impl';\nimport * as jsHelpers from '../load_js';\nimport { AuthErrorCode } from '../../core/errors';\n\nexport const RECAPTCHA_ENTERPRISE_VERIFIER_TYPE = 'recaptcha-enterprise';\nexport const FAKE_TOKEN = 'NO_RECAPTCHA';\n\nexport class RecaptchaEnterpriseVerifier {\n  /**\n   * Identifies the type of application verifier (e.g. \"recaptcha-enterprise\").\n   */\n  readonly type = RECAPTCHA_ENTERPRISE_VERIFIER_TYPE;\n\n  private readonly auth: AuthInternal;\n\n  /**\n   *\n   * @param authExtern - The corresponding Firebase {@link Auth} instance.\n   *\n   */\n  constructor(authExtern: Auth) {\n    this.auth = _castAuth(authExtern);\n  }\n\n  /**\n   * Executes the verification process.\n   *\n   * @returns A Promise for a token that can be used to assert the validity of a request.\n   */\n  async verify(\n    action: string = 'verify',\n    forceRefresh = false\n  ): Promise<string> {\n    async function retrieveSiteKey(auth: AuthInternal): Promise<string> {\n      if (!forceRefresh) {\n        if (auth.tenantId == null && auth._agentRecaptchaConfig != null) {\n          return auth._agentRecaptchaConfig.siteKey;\n        }\n        if (\n          auth.tenantId != null &&\n          auth._tenantRecaptchaConfigs[auth.tenantId] !== undefined\n        ) {\n          return auth._tenantRecaptchaConfigs[auth.tenantId].siteKey;\n        }\n      }\n\n      return new Promise<string>(async (resolve, reject) => {\n        getRecaptchaConfig(auth, {\n          clientType: RecaptchaClientType.WEB,\n          version: RecaptchaVersion.ENTERPRISE\n        })\n          .then(response => {\n            if (response.recaptchaKey === undefined) {\n              reject(new Error('recaptcha Enterprise site key undefined'));\n            } else {\n              const config = new RecaptchaConfig(response);\n              if (auth.tenantId == null) {\n                auth._agentRecaptchaConfig = config;\n              } else {\n                auth._tenantRecaptchaConfigs[auth.tenantId] = config;\n              }\n              return resolve(config.siteKey);\n            }\n          })\n          .catch(error => {\n            reject(error);\n          });\n      });\n    }\n\n    function retrieveRecaptchaToken(\n      siteKey: string,\n      resolve: (value: string | PromiseLike<string>) => void,\n      reject: (reason?: unknown) => void\n    ): void {\n      const grecaptcha = window.grecaptcha;\n      if (isEnterprise(grecaptcha)) {\n        grecaptcha.enterprise.ready(() => {\n          grecaptcha.enterprise\n            .execute(siteKey, { action })\n            .then(token => {\n              resolve(token);\n            })\n            .catch(() => {\n              resolve(FAKE_TOKEN);\n            });\n        });\n      } else {\n        reject(Error('No reCAPTCHA enterprise script loaded.'));\n      }\n    }\n\n    return new Promise<string>((resolve, reject) => {\n      retrieveSiteKey(this.auth)\n        .then(siteKey => {\n          if (!forceRefresh && isEnterprise(window.grecaptcha)) {\n            retrieveRecaptchaToken(siteKey, resolve, reject);\n          } else {\n            if (typeof window === 'undefined') {\n              reject(\n                new Error('RecaptchaVerifier is only supported in browser')\n              );\n              return;\n            }\n            let url = jsHelpers._recaptchaEnterpriseScriptUrl();\n            if (url.length !== 0) {\n              url += siteKey;\n            }\n            jsHelpers\n              ._loadJS(url)\n              .then(() => {\n                retrieveRecaptchaToken(siteKey, resolve, reject);\n              })\n              .catch(error => {\n                reject(error);\n              });\n          }\n        })\n        .catch(error => {\n          reject(error);\n        });\n    });\n  }\n}\n\nexport async function injectRecaptchaFields<T>(\n  auth: AuthInternal,\n  request: T,\n  action: RecaptchaActionName,\n  captchaResp = false\n): Promise<T> {\n  const verifier = new RecaptchaEnterpriseVerifier(auth);\n  let captchaResponse;\n  try {\n    captchaResponse = await verifier.verify(action);\n  } catch (error) {\n    captchaResponse = await verifier.verify(action, true);\n  }\n  const newRequest = { ...request };\n  if (!captchaResp) {\n    Object.assign(newRequest, { captchaResponse });\n  } else {\n    Object.assign(newRequest, { 'captchaResp': captchaResponse });\n  }\n  Object.assign(newRequest, { 'clientType': RecaptchaClientType.WEB });\n  Object.assign(newRequest, {\n    'recaptchaVersion': RecaptchaVersion.ENTERPRISE\n  });\n  return newRequest;\n}\n\ntype ActionMethod<TRequest, TResponse> = (\n  auth: Auth,\n  request: TRequest\n) => Promise<TResponse>;\n\nexport async function handleRecaptchaFlow<TRequest, TResponse>(\n  authInstance: AuthInternal,\n  request: TRequest,\n  actionName: RecaptchaActionName,\n  actionMethod: ActionMethod<TRequest, TResponse>\n): Promise<TResponse> {\n  if (\n    authInstance\n      ._getRecaptchaConfig()\n      ?.isProviderEnabled(RecaptchaProvider.EMAIL_PASSWORD_PROVIDER)\n  ) {\n    const requestWithRecaptcha = await injectRecaptchaFields(\n      authInstance,\n      request,\n      actionName,\n      actionName === RecaptchaActionName.GET_OOB_CODE\n    );\n    return actionMethod(authInstance, requestWithRecaptcha);\n  } else {\n    return actionMethod(authInstance, request).catch(async error => {\n      if (error.code === `auth/${AuthErrorCode.MISSING_RECAPTCHA_TOKEN}`) {\n        console.log(\n          `${actionName} is protected by reCAPTCHA Enterprise for this project. Automatically triggering the reCAPTCHA flow and restarting the flow.`\n        );\n        const requestWithRecaptcha = await injectRecaptchaFields(\n          authInstance,\n          request,\n          actionName,\n          actionName === RecaptchaActionName.GET_OOB_CODE\n        );\n        return actionMethod(authInstance, requestWithRecaptcha);\n      } else {\n        return Promise.reject(error);\n      }\n    });\n  }\n}\n\nexport async function _initializeRecaptchaConfig(auth: Auth): Promise<void> {\n  const authInternal = _castAuth(auth);\n\n  const response = await getRecaptchaConfig(authInternal, {\n    clientType: RecaptchaClientType.WEB,\n    version: RecaptchaVersion.ENTERPRISE\n  });\n\n  const config = new RecaptchaConfig(response);\n  if (authInternal.tenantId == null) {\n    authInternal._agentRecaptchaConfig = config;\n  } else {\n    authInternal._tenantRecaptchaConfigs[authInternal.tenantId] = config;\n  }\n\n  if (config.isProviderEnabled(RecaptchaProvider.EMAIL_PASSWORD_PROVIDER)) {\n    const verifier = new RecaptchaEnterpriseVerifier(authInternal);\n    void verifier.verify();\n  }\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _getProvider, FirebaseApp } from '@firebase/app';\nimport { deepEqual } from '@firebase/util';\nimport { Auth, Dependencies } from '../../model/public_types';\n\nimport { AuthErrorCode } from '../errors';\nimport { PersistenceInternal } from '../persistence';\nimport { _fail } from '../util/assert';\nimport { _getInstance } from '../util/instantiator';\nimport { AuthImpl } from './auth_impl';\n\n/**\n * Initializes an {@link Auth} instance with fine-grained control over\n * {@link Dependencies}.\n *\n * @remarks\n *\n * This function allows more control over the {@link Auth} instance than\n * {@link getAuth}. `getAuth` uses platform-specific defaults to supply\n * the {@link Dependencies}. In general, `getAuth` is the easiest way to\n * initialize Auth and works for most use cases. Use `initializeAuth` if you\n * need control over which persistence layer is used, or to minimize bundle\n * size if you're not using either `signInWithPopup` or `signInWithRedirect`.\n *\n * For example, if your app only uses anonymous accounts and you only want\n * accounts saved for the current session, initialize `Auth` with:\n *\n * ```js\n * const auth = initializeAuth(app, {\n *   persistence: browserSessionPersistence,\n *   popupRedirectResolver: undefined,\n * });\n * ```\n *\n * @public\n */\nexport function initializeAuth(app: FirebaseApp, deps?: Dependencies): Auth {\n  const provider = _getProvider(app, 'auth');\n\n  if (provider.isInitialized()) {\n    const auth = provider.getImmediate() as AuthImpl;\n    const initialOptions = provider.getOptions() as Dependencies;\n    if (deepEqual(initialOptions, deps ?? {})) {\n      return auth;\n    } else {\n      _fail(auth, AuthErrorCode.ALREADY_INITIALIZED);\n    }\n  }\n\n  const auth = provider.initialize({ options: deps }) as AuthImpl;\n\n  return auth;\n}\n\nexport function _initializeAuthInstance(\n  auth: AuthImpl,\n  deps?: Dependencies\n): void {\n  const persistence = deps?.persistence || [];\n  const hierarchy = (\n    Array.isArray(persistence) ? persistence : [persistence]\n  ).map<PersistenceInternal>(_getInstance);\n  if (deps?.errorMap) {\n    auth._updateErrorMap(deps.errorMap);\n  }\n\n  // This promise is intended to float; auth initialization happens in the\n  // background, meanwhile the auth object may be used by the app.\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  auth._initializeWithPersistence(hierarchy, deps?.popupRedirectResolver);\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Auth } from '../../model/public_types';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from '../util/assert';\nimport { _castAuth } from './auth_impl';\n\n/**\n * Changes the {@link Auth} instance to communicate with the Firebase Auth Emulator, instead of production\n * Firebase Auth services.\n *\n * @remarks\n * This must be called synchronously immediately following the first call to\n * {@link initializeAuth}.  Do not use with production credentials as emulator\n * traffic is not encrypted.\n *\n *\n * @example\n * ```javascript\n * connectAuthEmulator(auth, 'http://127.0.0.1:9099', { disableWarnings: true });\n * ```\n *\n * @param auth - The {@link Auth} instance.\n * @param url - The URL at which the emulator is running (eg, 'http://localhost:9099').\n * @param options - Optional. `options.disableWarnings` defaults to `false`. Set it to\n * `true` to disable the warning banner attached to the DOM.\n *\n * @public\n */\nexport function connectAuthEmulator(\n  auth: Auth,\n  url: string,\n  options?: { disableWarnings: boolean }\n): void {\n  const authInternal = _castAuth(auth);\n  _assert(\n    authInternal._canInitEmulator,\n    authInternal,\n    AuthErrorCode.EMULATOR_CONFIG_FAILED\n  );\n\n  _assert(\n    /^https?:\\/\\//.test(url),\n    authInternal,\n    AuthErrorCode.INVALID_EMULATOR_SCHEME\n  );\n\n  const disableWarnings = !!options?.disableWarnings;\n\n  const protocol = extractProtocol(url);\n  const { host, port } = extractHostAndPort(url);\n  const portStr = port === null ? '' : `:${port}`;\n\n  // Always replace path with \"/\" (even if input url had no path at all, or had a different one).\n  authInternal.config.emulator = { url: `${protocol}//${host}${portStr}/` };\n  authInternal.settings.appVerificationDisabledForTesting = true;\n  authInternal.emulatorConfig = Object.freeze({\n    host,\n    port,\n    protocol: protocol.replace(':', ''),\n    options: Object.freeze({ disableWarnings })\n  });\n\n  if (!disableWarnings) {\n    emitEmulatorWarning();\n  }\n}\n\nfunction extractProtocol(url: string): string {\n  const protocolEnd = url.indexOf(':');\n  return protocolEnd < 0 ? '' : url.substr(0, protocolEnd + 1);\n}\n\nfunction extractHostAndPort(url: string): {\n  host: string;\n  port: number | null;\n} {\n  const protocol = extractProtocol(url);\n  const authority = /(\\/\\/)?([^?#/]+)/.exec(url.substr(protocol.length)); // Between // and /, ? or #.\n  if (!authority) {\n    return { host: '', port: null };\n  }\n  const hostAndPort = authority[2].split('@').pop() || ''; // Strip out \"username:password@\".\n  const bracketedIPv6 = /^(\\[[^\\]]+\\])(:|$)/.exec(hostAndPort);\n  if (bracketedIPv6) {\n    const host = bracketedIPv6[1];\n    return { host, port: parsePort(hostAndPort.substr(host.length + 1)) };\n  } else {\n    const [host, port] = hostAndPort.split(':');\n    return { host, port: parsePort(port) };\n  }\n}\n\nfunction parsePort(portStr: string): number | null {\n  if (!portStr) {\n    return null;\n  }\n  const port = Number(portStr);\n  if (isNaN(port)) {\n    return null;\n  }\n  return port;\n}\n\nfunction emitEmulatorWarning(): void {\n  function attachBanner(): void {\n    const el = document.createElement('p');\n    const sty = el.style;\n    el.innerText =\n      'Running in emulator mode. Do not use with production credentials.';\n    sty.position = 'fixed';\n    sty.width = '100%';\n    sty.backgroundColor = '#ffffff';\n    sty.border = '.1em solid #000000';\n    sty.color = '#b50000';\n    sty.bottom = '0px';\n    sty.left = '0px';\n    sty.margin = '0px';\n    sty.zIndex = '10000';\n    sty.textAlign = 'center';\n    el.classList.add('firebase-emulator-warning');\n    document.body.appendChild(el);\n  }\n\n  if (typeof console !== 'undefined' && typeof console.info === 'function') {\n    console.info(\n      'WARNING: You are using the Auth Emulator,' +\n        ' which is intended for local testing only.  Do not use with' +\n        ' production credentials.'\n    );\n  }\n  if (typeof window !== 'undefined' && typeof document !== 'undefined') {\n    if (document.readyState === 'loading') {\n      window.addEventListener('DOMContentLoaded', attachBanner);\n    } else {\n      attachBanner();\n    }\n  }\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PhoneOrOauthTokenResponse } from '../../api/authentication/mfa';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { debugFail } from '../util/assert';\n\n/**\n * Interface that represents the credentials returned by an {@link AuthProvider}.\n *\n * @remarks\n * Implementations specify the details about each auth provider's credential requirements.\n *\n * @public\n */\nexport class AuthCredential {\n  /** @internal */\n  protected constructor(\n    /**\n     * The authentication provider ID for the credential.\n     *\n     * @remarks\n     * For example, 'facebook.com', or 'google.com'.\n     */\n    readonly providerId: string,\n    /**\n     * The authentication sign in method for the credential.\n     *\n     * @remarks\n     * For example, {@link SignInMethod}.EMAIL_PASSWORD, or\n     * {@link SignInMethod}.EMAIL_LINK. This corresponds to the sign-in method\n     * identifier as returned in {@link fetchSignInMethodsForEmail}.\n     */\n    readonly signInMethod: string\n  ) {}\n\n  /**\n   * Returns a JSON-serializable representation of this object.\n   *\n   * @returns a JSON-serializable representation of this object.\n   */\n  toJSON(): object {\n    return debugFail('not implemented');\n  }\n\n  /** @internal */\n  _getIdTokenResponse(_auth: AuthInternal): Promise<PhoneOrOauthTokenResponse> {\n    return debugFail('not implemented');\n  }\n  /** @internal */\n  _linkToIdToken(\n    _auth: AuthInternal,\n    _idToken: string\n  ): Promise<IdTokenResponse> {\n    return debugFail('not implemented');\n  }\n  /** @internal */\n  _getReauthenticationResolver(_auth: AuthInternal): Promise<IdTokenResponse> {\n    return debugFail('not implemented');\n  }\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ActionCodeOperation, Auth } from '../../model/public_types';\n\nimport {\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary,\n  _performApiRequest\n} from '../index';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { MfaEnrollment } from './mfa';\nimport { SignUpRequest, SignUpResponse } from '../authentication/sign_up';\n\nexport interface ResetPasswordRequest {\n  oobCode: string;\n  newPassword?: string;\n  tenantId?: string;\n}\n\nexport interface ResetPasswordResponse {\n  email: string;\n  newEmail?: string;\n  requestType?: ActionCodeOperation;\n  mfaInfo?: MfaEnrollment;\n}\n\nexport async function resetPassword(\n  auth: Auth,\n  request: ResetPasswordRequest\n): Promise<ResetPasswordResponse> {\n  return _performApiRequest<ResetPasswordRequest, ResetPasswordResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.RESET_PASSWORD,\n    _addTidIfNecessary(auth, request)\n  );\n}\nexport interface UpdateEmailPasswordRequest {\n  idToken: string;\n  returnSecureToken?: boolean;\n  email?: string;\n  password?: string;\n}\n\nexport interface UpdateEmailPasswordResponse extends IdTokenResponse {}\n\nexport async function updateEmailPassword(\n  auth: Auth,\n  request: UpdateEmailPasswordRequest\n): Promise<UpdateEmailPasswordResponse> {\n  return _performApiRequest<\n    UpdateEmailPasswordRequest,\n    UpdateEmailPasswordResponse\n  >(auth, HttpMethod.POST, Endpoint.SET_ACCOUNT_INFO, request);\n}\n\n// Used for linking an email/password account to an existing idToken. Uses the same request/response\n// format as updateEmailPassword.\nexport async function linkEmailPassword(\n  auth: Auth,\n  request: SignUpRequest\n): Promise<SignUpResponse> {\n  return _performApiRequest<SignUpRequest, SignUpResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_UP,\n    request\n  );\n}\n\nexport interface ApplyActionCodeRequest {\n  oobCode: string;\n  tenantId?: string;\n}\n\nexport interface ApplyActionCodeResponse {}\n\nexport async function applyActionCode(\n  auth: Auth,\n  request: ApplyActionCodeRequest\n): Promise<ApplyActionCodeResponse> {\n  return _performApiRequest<ApplyActionCodeRequest, ApplyActionCodeResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SET_ACCOUNT_INFO,\n    _addTidIfNecessary(auth, request)\n  );\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ActionCodeOperation, Auth } from '../../model/public_types';\n\nimport {\n  Endpoint,\n  HttpMethod,\n  RecaptchaClientType,\n  RecaptchaVersion,\n  _addTidIfNecessary,\n  _performApiRequest,\n  _performSignInRequest\n} from '../index';\nimport { IdToken, IdTokenResponse } from '../../model/id_token';\n\nexport interface SignInWithPasswordRequest {\n  returnSecureToken?: boolean;\n  email: string;\n  password: string;\n  tenantId?: string;\n  captchaResponse?: string;\n  clientType?: RecaptchaClientType;\n  recaptchaVersion?: RecaptchaVersion;\n}\n\nexport interface SignInWithPasswordResponse extends IdTokenResponse {\n  email: string;\n  displayName: string;\n}\n\nexport async function signInWithPassword(\n  auth: Auth,\n  request: SignInWithPasswordRequest\n): Promise<SignInWithPasswordResponse> {\n  return _performSignInRequest<\n    SignInWithPasswordRequest,\n    SignInWithPasswordResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_PASSWORD,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport interface GetOobCodeRequest {\n  email?: string; // Everything except VERIFY_AND_CHANGE_EMAIL\n  continueUrl?: string;\n  iOSBundleId?: string;\n  iosAppStoreId?: string;\n  androidPackageName?: string;\n  androidInstallApp?: boolean;\n  androidMinimumVersionCode?: string;\n  canHandleCodeInApp?: boolean;\n  dynamicLinkDomain?: string;\n  tenantId?: string;\n  targetProjectid?: string;\n}\n\nexport interface VerifyEmailRequest extends GetOobCodeRequest {\n  requestType: ActionCodeOperation.VERIFY_EMAIL;\n  idToken: IdToken;\n}\n\nexport interface PasswordResetRequest extends GetOobCodeRequest {\n  requestType: ActionCodeOperation.PASSWORD_RESET;\n  email: string;\n  captchaResp?: string;\n  clientType?: RecaptchaClientType;\n  recaptchaVersion?: RecaptchaVersion;\n}\n\nexport interface EmailSignInRequest extends GetOobCodeRequest {\n  requestType: ActionCodeOperation.EMAIL_SIGNIN;\n  email: string;\n  captchaResp?: string;\n  clientType?: RecaptchaClientType;\n  recaptchaVersion?: RecaptchaVersion;\n}\n\nexport interface VerifyAndChangeEmailRequest extends GetOobCodeRequest {\n  requestType: ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL;\n  idToken: IdToken;\n  newEmail: string;\n}\n\ninterface GetOobCodeResponse {\n  email: string;\n}\n\nexport interface VerifyEmailResponse extends GetOobCodeResponse {}\nexport interface PasswordResetResponse extends GetOobCodeResponse {}\nexport interface EmailSignInResponse extends GetOobCodeResponse {}\nexport interface VerifyAndChangeEmailResponse extends GetOobCodeRequest {}\n\nasync function sendOobCode(\n  auth: Auth,\n  request: GetOobCodeRequest\n): Promise<GetOobCodeResponse> {\n  return _performApiRequest<GetOobCodeRequest, GetOobCodeResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SEND_OOB_CODE,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport async function sendEmailVerification(\n  auth: Auth,\n  request: VerifyEmailRequest\n): Promise<VerifyEmailResponse> {\n  return sendOobCode(auth, request);\n}\n\nexport async function sendPasswordResetEmail(\n  auth: Auth,\n  request: PasswordResetRequest\n): Promise<PasswordResetResponse> {\n  return sendOobCode(auth, request);\n}\n\nexport async function sendSignInLinkToEmail(\n  auth: Auth,\n  request: EmailSignInRequest\n): Promise<EmailSignInResponse> {\n  return sendOobCode(auth, request);\n}\n\nexport async function verifyAndChangeEmail(\n  auth: Auth,\n  request: VerifyAndChangeEmailRequest\n): Promise<VerifyAndChangeEmailResponse> {\n  return sendOobCode(auth, request);\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  _performSignInRequest,\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary\n} from '../index';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { Auth } from '../../model/public_types';\n\nexport interface SignInWithEmailLinkRequest {\n  email: string;\n  oobCode: string;\n  tenantId?: string;\n}\n\nexport interface SignInWithEmailLinkResponse extends IdTokenResponse {\n  email: string;\n  isNewUser: boolean;\n}\n\nexport async function signInWithEmailLink(\n  auth: Auth,\n  request: SignInWithEmailLinkRequest\n): Promise<SignInWithEmailLinkResponse> {\n  return _performSignInRequest<\n    SignInWithEmailLinkRequest,\n    SignInWithEmailLinkResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_EMAIL_LINK,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport interface SignInWithEmailLinkForLinkingRequest\n  extends SignInWithEmailLinkRequest {\n  idToken: string;\n}\n\nexport async function signInWithEmailLinkForLinking(\n  auth: Auth,\n  request: SignInWithEmailLinkForLinkingRequest\n): Promise<SignInWithEmailLinkResponse> {\n  return _performSignInRequest<\n    SignInWithEmailLinkForLinkingRequest,\n    SignInWithEmailLinkResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_EMAIL_LINK,\n    _addTidIfNecessary(auth, request)\n  );\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ProviderId, SignInMethod } from '../../model/enums';\n\nimport { linkEmailPassword } from '../../api/account_management/email_and_password';\nimport {\n  signInWithPassword,\n  SignInWithPasswordRequest\n} from '../../api/authentication/email_and_password';\nimport {\n  signInWithEmailLink,\n  signInWithEmailLinkForLinking\n} from '../../api/authentication/email_link';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { AuthErrorCode } from '../errors';\nimport { _fail } from '../util/assert';\nimport { AuthCredential } from './auth_credential';\nimport { handleRecaptchaFlow } from '../../platform_browser/recaptcha/recaptcha_enterprise_verifier';\nimport { RecaptchaActionName, RecaptchaClientType } from '../../api';\nimport { SignUpRequest } from '../../api/authentication/sign_up';\n/**\n * Interface that represents the credentials returned by {@link EmailAuthProvider} for\n * {@link ProviderId}.PASSWORD\n *\n * @remarks\n * Covers both {@link SignInMethod}.EMAIL_PASSWORD and\n * {@link SignInMethod}.EMAIL_LINK.\n *\n * @public\n */\nexport class EmailAuthCredential extends AuthCredential {\n  /** @internal */\n  private constructor(\n    /** @internal */\n    readonly _email: string,\n    /** @internal */\n    readonly _password: string,\n    signInMethod: SignInMethod,\n    /** @internal */\n    readonly _tenantId: string | null = null\n  ) {\n    super(ProviderId.PASSWORD, signInMethod);\n  }\n\n  /** @internal */\n  static _fromEmailAndPassword(\n    email: string,\n    password: string\n  ): EmailAuthCredential {\n    return new EmailAuthCredential(\n      email,\n      password,\n      SignInMethod.EMAIL_PASSWORD\n    );\n  }\n\n  /** @internal */\n  static _fromEmailAndCode(\n    email: string,\n    oobCode: string,\n    tenantId: string | null = null\n  ): EmailAuthCredential {\n    return new EmailAuthCredential(\n      email,\n      oobCode,\n      SignInMethod.EMAIL_LINK,\n      tenantId\n    );\n  }\n\n  /** {@inheritdoc AuthCredential.toJSON} */\n  toJSON(): object {\n    return {\n      email: this._email,\n      password: this._password,\n      signInMethod: this.signInMethod,\n      tenantId: this._tenantId\n    };\n  }\n\n  /**\n   * Static method to deserialize a JSON representation of an object into an {@link  AuthCredential}.\n   *\n   * @param json - Either `object` or the stringified representation of the object. When string is\n   * provided, `JSON.parse` would be called first.\n   *\n   * @returns If the JSON input does not represent an {@link AuthCredential}, null is returned.\n   */\n  static fromJSON(json: object | string): EmailAuthCredential | null {\n    const obj = typeof json === 'string' ? JSON.parse(json) : json;\n    if (obj?.email && obj?.password) {\n      if (obj.signInMethod === SignInMethod.EMAIL_PASSWORD) {\n        return this._fromEmailAndPassword(obj.email, obj.password);\n      } else if (obj.signInMethod === SignInMethod.EMAIL_LINK) {\n        return this._fromEmailAndCode(obj.email, obj.password, obj.tenantId);\n      }\n    }\n    return null;\n  }\n\n  /** @internal */\n  async _getIdTokenResponse(auth: AuthInternal): Promise<IdTokenResponse> {\n    switch (this.signInMethod) {\n      case SignInMethod.EMAIL_PASSWORD:\n        const request: SignInWithPasswordRequest = {\n          returnSecureToken: true,\n          email: this._email,\n          password: this._password,\n          clientType: RecaptchaClientType.WEB\n        };\n        return handleRecaptchaFlow(\n          auth,\n          request,\n          RecaptchaActionName.SIGN_IN_WITH_PASSWORD,\n          signInWithPassword\n        );\n      case SignInMethod.EMAIL_LINK:\n        return signInWithEmailLink(auth, {\n          email: this._email,\n          oobCode: this._password\n        });\n      default:\n        _fail(auth, AuthErrorCode.INTERNAL_ERROR);\n    }\n  }\n\n  /** @internal */\n  async _linkToIdToken(\n    auth: AuthInternal,\n    idToken: string\n  ): Promise<IdTokenResponse> {\n    switch (this.signInMethod) {\n      case SignInMethod.EMAIL_PASSWORD:\n        const request: SignUpRequest = {\n          idToken,\n          returnSecureToken: true,\n          email: this._email,\n          password: this._password,\n          clientType: RecaptchaClientType.WEB\n        };\n        return handleRecaptchaFlow(\n          auth,\n          request,\n          RecaptchaActionName.SIGN_UP_PASSWORD,\n          linkEmailPassword\n        );\n      case SignInMethod.EMAIL_LINK:\n        return signInWithEmailLinkForLinking(auth, {\n          idToken,\n          email: this._email,\n          oobCode: this._password\n        });\n      default:\n        _fail(auth, AuthErrorCode.INTERNAL_ERROR);\n    }\n  }\n\n  /** @internal */\n  _getReauthenticationResolver(auth: AuthInternal): Promise<IdTokenResponse> {\n    return this._getIdTokenResponse(auth);\n  }\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary,\n  _performSignInRequest\n} from '../index';\nimport { IdToken, IdTokenResponse } from '../../model/id_token';\nimport { Auth } from '../../model/public_types';\n\nexport interface SignInWithIdpRequest {\n  requestUri: string;\n  postBody?: string;\n  sessionId?: string;\n  tenantId?: string;\n  returnSecureToken: boolean;\n  returnIdpCredential?: boolean;\n  idToken?: IdToken;\n  autoCreate?: boolean;\n  pendingToken?: string;\n}\n\n/**\n * @internal\n */\nexport interface SignInWithIdpResponse extends IdTokenResponse {\n  oauthAccessToken?: string;\n  oauthTokenSecret?: string;\n  nonce?: string;\n  oauthIdToken?: string;\n  pendingToken?: string;\n}\n\nexport async function signInWithIdp(\n  auth: Auth,\n  request: SignInWithIdpRequest\n): Promise<SignInWithIdpResponse> {\n  return _performSignInRequest<SignInWithIdpRequest, SignInWithIdpResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_IDP,\n    _addTidIfNecessary(auth, request)\n  );\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { querystring } from '@firebase/util';\n\nimport {\n  signInWithIdp,\n  SignInWithIdpRequest\n} from '../../api/authentication/idp';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { AuthErrorCode } from '../errors';\nimport { _fail } from '../util/assert';\nimport { AuthCredential } from './auth_credential';\n\nconst IDP_REQUEST_URI = 'http://localhost';\n\nexport interface OAuthCredentialParams {\n  // OAuth 2 uses either id token or access token\n  idToken?: string | null;\n  accessToken?: string | null;\n\n  // These fields are used with OAuth 1\n  oauthToken?: string;\n  secret?: string;\n  oauthTokenSecret?: string;\n\n  // Nonce is only set if pendingToken is not present\n  nonce?: string;\n  pendingToken?: string;\n\n  // Utilities\n  providerId: string;\n  signInMethod: string;\n}\n\n/**\n * Represents the OAuth credentials returned by an {@link OAuthProvider}.\n *\n * @remarks\n * Implementations specify the details about each auth provider's credential requirements.\n *\n * @public\n */\nexport class OAuthCredential extends AuthCredential {\n  /**\n   * The OAuth ID token associated with the credential if it belongs to an OIDC provider,\n   * such as `google.com`.\n   * @readonly\n   */\n  idToken?: string;\n  /**\n   * The OAuth access token associated with the credential if it belongs to an\n   * {@link OAuthProvider}, such as `facebook.com`, `twitter.com`, etc.\n   * @readonly\n   */\n  accessToken?: string;\n  /**\n   * The OAuth access token secret associated with the credential if it belongs to an OAuth 1.0\n   * provider, such as `twitter.com`.\n   * @readonly\n   */\n  secret?: string;\n\n  private nonce?: string;\n  private pendingToken: string | null = null;\n\n  /** @internal */\n  static _fromParams(params: OAuthCredentialParams): OAuthCredential {\n    const cred = new OAuthCredential(params.providerId, params.signInMethod);\n\n    if (params.idToken || params.accessToken) {\n      // OAuth 2 and either ID token or access token.\n      if (params.idToken) {\n        cred.idToken = params.idToken;\n      }\n\n      if (params.accessToken) {\n        cred.accessToken = params.accessToken;\n      }\n\n      // Add nonce if available and no pendingToken is present.\n      if (params.nonce && !params.pendingToken) {\n        cred.nonce = params.nonce;\n      }\n\n      if (params.pendingToken) {\n        cred.pendingToken = params.pendingToken;\n      }\n    } else if (params.oauthToken && params.oauthTokenSecret) {\n      // OAuth 1 and OAuth token with token secret\n      cred.accessToken = params.oauthToken;\n      cred.secret = params.oauthTokenSecret;\n    } else {\n      _fail(AuthErrorCode.ARGUMENT_ERROR);\n    }\n\n    return cred;\n  }\n\n  /** {@inheritdoc AuthCredential.toJSON}  */\n  toJSON(): object {\n    return {\n      idToken: this.idToken,\n      accessToken: this.accessToken,\n      secret: this.secret,\n      nonce: this.nonce,\n      pendingToken: this.pendingToken,\n      providerId: this.providerId,\n      signInMethod: this.signInMethod\n    };\n  }\n\n  /**\n   * Static method to deserialize a JSON representation of an object into an\n   * {@link  AuthCredential}.\n   *\n   * @param json - Input can be either Object or the stringified representation of the object.\n   * When string is provided, JSON.parse would be called first.\n   *\n   * @returns If the JSON input does not represent an {@link  AuthCredential}, null is returned.\n   */\n  static fromJSON(json: string | object): OAuthCredential | null {\n    const obj = typeof json === 'string' ? JSON.parse(json) : json;\n    const { providerId, signInMethod, ...rest }: OAuthCredentialParams = obj;\n    if (!providerId || !signInMethod) {\n      return null;\n    }\n\n    const cred = new OAuthCredential(providerId, signInMethod);\n    cred.idToken = rest.idToken || undefined;\n    cred.accessToken = rest.accessToken || undefined;\n    cred.secret = rest.secret;\n    cred.nonce = rest.nonce;\n    cred.pendingToken = rest.pendingToken || null;\n    return cred;\n  }\n\n  /** @internal */\n  _getIdTokenResponse(auth: AuthInternal): Promise<IdTokenResponse> {\n    const request = this.buildRequest();\n    return signInWithIdp(auth, request);\n  }\n\n  /** @internal */\n  _linkToIdToken(\n    auth: AuthInternal,\n    idToken: string\n  ): Promise<IdTokenResponse> {\n    const request = this.buildRequest();\n    request.idToken = idToken;\n    return signInWithIdp(auth, request);\n  }\n\n  /** @internal */\n  _getReauthenticationResolver(auth: AuthInternal): Promise<IdTokenResponse> {\n    const request = this.buildRequest();\n    request.autoCreate = false;\n    return signInWithIdp(auth, request);\n  }\n\n  private buildRequest(): SignInWithIdpRequest {\n    const request: SignInWithIdpRequest = {\n      requestUri: IDP_REQUEST_URI,\n      returnSecureToken: true\n    };\n\n    if (this.pendingToken) {\n      request.pendingToken = this.pendingToken;\n    } else {\n      const postBody: Record<string, string> = {};\n      if (this.idToken) {\n        postBody['id_token'] = this.idToken;\n      }\n      if (this.accessToken) {\n        postBody['access_token'] = this.accessToken;\n      }\n      if (this.secret) {\n        postBody['oauth_token_secret'] = this.secret;\n      }\n\n      postBody['providerId'] = this.providerId;\n      if (this.nonce && !this.pendingToken) {\n        postBody['nonce'] = this.nonce;\n      }\n\n      request.postBody = querystring(postBody);\n    }\n\n    return request;\n  }\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary,\n  _makeTaggedError,\n  _performApiRequest,\n  _performSignInRequest\n} from '../index';\nimport { AuthErrorCode } from '../../core/errors';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { ServerError, ServerErrorMap } from '../errors';\nimport { Auth } from '../../model/public_types';\n\nexport interface SendPhoneVerificationCodeRequest {\n  phoneNumber: string;\n  recaptchaToken: string;\n  tenantId?: string;\n}\n\nexport interface SendPhoneVerificationCodeResponse {\n  sessionInfo: string;\n}\n\nexport async function sendPhoneVerificationCode(\n  auth: Auth,\n  request: SendPhoneVerificationCodeRequest\n): Promise<SendPhoneVerificationCodeResponse> {\n  return _performApiRequest<\n    SendPhoneVerificationCodeRequest,\n    SendPhoneVerificationCodeResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SEND_VERIFICATION_CODE,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\n/**\n * @internal\n */\nexport interface SignInWithPhoneNumberRequest {\n  temporaryProof?: string;\n  phoneNumber?: string;\n  sessionInfo?: string;\n  code?: string;\n  tenantId?: string;\n}\n\nexport interface LinkWithPhoneNumberRequest\n  extends SignInWithPhoneNumberRequest {\n  idToken: string;\n}\n\n/**\n * @internal\n */\nexport interface SignInWithPhoneNumberResponse extends IdTokenResponse {\n  temporaryProof?: string;\n  phoneNumber?: string;\n}\n\nexport async function signInWithPhoneNumber(\n  auth: Auth,\n  request: SignInWithPhoneNumberRequest\n): Promise<SignInWithPhoneNumberResponse> {\n  return _performSignInRequest<\n    SignInWithPhoneNumberRequest,\n    SignInWithPhoneNumberResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_PHONE_NUMBER,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport async function linkWithPhoneNumber(\n  auth: Auth,\n  request: LinkWithPhoneNumberRequest\n): Promise<SignInWithPhoneNumberResponse> {\n  const response = await _performSignInRequest<\n    LinkWithPhoneNumberRequest,\n    SignInWithPhoneNumberResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_PHONE_NUMBER,\n    _addTidIfNecessary(auth, request)\n  );\n  if (response.temporaryProof) {\n    throw _makeTaggedError(auth, AuthErrorCode.NEED_CONFIRMATION, response);\n  }\n  return response;\n}\n\ninterface VerifyPhoneNumberForExistingRequest\n  extends SignInWithPhoneNumberRequest {\n  operation: 'REAUTH';\n}\n\nconst VERIFY_PHONE_NUMBER_FOR_EXISTING_ERROR_MAP_: Partial<\n  ServerErrorMap<ServerError>\n> = {\n  [ServerError.USER_NOT_FOUND]: AuthErrorCode.USER_DELETED\n};\n\nexport async function verifyPhoneNumberForExisting(\n  auth: Auth,\n  request: SignInWithPhoneNumberRequest\n): Promise<SignInWithPhoneNumberResponse> {\n  const apiRequest: VerifyPhoneNumberForExistingRequest = {\n    ...request,\n    operation: 'REAUTH'\n  };\n  return _performSignInRequest<\n    VerifyPhoneNumberForExistingRequest,\n    SignInWithPhoneNumberResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_PHONE_NUMBER,\n    _addTidIfNecessary(auth, apiRequest),\n    VERIFY_PHONE_NUMBER_FOR_EXISTING_ERROR_MAP_\n  );\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ProviderId, SignInMethod } from '../../model/enums';\n\nimport { PhoneOrOauthTokenResponse } from '../../api/authentication/mfa';\nimport {\n  linkWithPhoneNumber,\n  signInWithPhoneNumber,\n  SignInWithPhoneNumberRequest,\n  verifyPhoneNumberForExisting\n} from '../../api/authentication/sms';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { AuthCredential } from './auth_credential';\n\nexport interface PhoneAuthCredentialParameters {\n  verificationId?: string;\n  verificationCode?: string;\n  phoneNumber?: string;\n  temporaryProof?: string;\n}\n\n/**\n * Represents the credentials returned by {@link PhoneAuthProvider}.\n *\n * @public\n */\nexport class PhoneAuthCredential extends AuthCredential {\n  private constructor(private readonly params: PhoneAuthCredentialParameters) {\n    super(ProviderId.PHONE, SignInMethod.PHONE);\n  }\n\n  /** @internal */\n  static _fromVerification(\n    verificationId: string,\n    verificationCode: string\n  ): PhoneAuthCredential {\n    return new PhoneAuthCredential({ verificationId, verificationCode });\n  }\n\n  /** @internal */\n  static _fromTokenResponse(\n    phoneNumber: string,\n    temporaryProof: string\n  ): PhoneAuthCredential {\n    return new PhoneAuthCredential({ phoneNumber, temporaryProof });\n  }\n\n  /** @internal */\n  _getIdTokenResponse(auth: AuthInternal): Promise<PhoneOrOauthTokenResponse> {\n    return signInWithPhoneNumber(auth, this._makeVerificationRequest());\n  }\n\n  /** @internal */\n  _linkToIdToken(\n    auth: AuthInternal,\n    idToken: string\n  ): Promise<IdTokenResponse> {\n    return linkWithPhoneNumber(auth, {\n      idToken,\n      ...this._makeVerificationRequest()\n    });\n  }\n\n  /** @internal */\n  _getReauthenticationResolver(auth: AuthInternal): Promise<IdTokenResponse> {\n    return verifyPhoneNumberForExisting(auth, this._makeVerificationRequest());\n  }\n\n  /** @internal */\n  _makeVerificationRequest(): SignInWithPhoneNumberRequest {\n    const { temporaryProof, phoneNumber, verificationId, verificationCode } =\n      this.params;\n    if (temporaryProof && phoneNumber) {\n      return { temporaryProof, phoneNumber };\n    }\n\n    return {\n      sessionInfo: verificationId,\n      code: verificationCode\n    };\n  }\n\n  /** {@inheritdoc AuthCredential.toJSON} */\n  toJSON(): object {\n    const obj: Record<string, string> = {\n      providerId: this.providerId\n    };\n    if (this.params.phoneNumber) {\n      obj.phoneNumber = this.params.phoneNumber;\n    }\n    if (this.params.temporaryProof) {\n      obj.temporaryProof = this.params.temporaryProof;\n    }\n    if (this.params.verificationCode) {\n      obj.verificationCode = this.params.verificationCode;\n    }\n    if (this.params.verificationId) {\n      obj.verificationId = this.params.verificationId;\n    }\n\n    return obj;\n  }\n\n  /** Generates a phone credential based on a plain object or a JSON string. */\n  static fromJSON(json: object | string): PhoneAuthCredential | null {\n    if (typeof json === 'string') {\n      json = JSON.parse(json);\n    }\n\n    const { verificationId, verificationCode, phoneNumber, temporaryProof } =\n      json as { [key: string]: string };\n    if (\n      !verificationCode &&\n      !verificationId &&\n      !phoneNumber &&\n      !temporaryProof\n    ) {\n      return null;\n    }\n\n    return new PhoneAuthCredential({\n      verificationId,\n      verificationCode,\n      phoneNumber,\n      temporaryProof\n    });\n  }\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { extractQuerystring, querystringDecode } from '@firebase/util';\nimport { ActionCodeOperation } from '../model/public_types';\nimport { AuthErrorCode } from './errors';\nimport { _assert } from './util/assert';\n\n/**\n * Enums for fields in URL query string.\n *\n * @enum {string}\n */\nconst enum QueryField {\n  API_KEY = 'apiKey',\n  CODE = 'oobCode',\n  CONTINUE_URL = 'continueUrl',\n  LANGUAGE_CODE = 'languageCode',\n  MODE = 'mode',\n  TENANT_ID = 'tenantId'\n}\n\n/**\n * Maps the mode string in action code URL to Action Code Info operation.\n *\n * @param mode\n */\nfunction parseMode(mode: string | null): ActionCodeOperation | null {\n  switch (mode) {\n    case 'recoverEmail':\n      return ActionCodeOperation.RECOVER_EMAIL;\n    case 'resetPassword':\n      return ActionCodeOperation.PASSWORD_RESET;\n    case 'signIn':\n      return ActionCodeOperation.EMAIL_SIGNIN;\n    case 'verifyEmail':\n      return ActionCodeOperation.VERIFY_EMAIL;\n    case 'verifyAndChangeEmail':\n      return ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL;\n    case 'revertSecondFactorAddition':\n      return ActionCodeOperation.REVERT_SECOND_FACTOR_ADDITION;\n    default:\n      return null;\n  }\n}\n\n/**\n * Helper to parse FDL links\n *\n * @param url\n */\nfunction parseDeepLink(url: string): string {\n  const link = querystringDecode(extractQuerystring(url))['link'];\n\n  // Double link case (automatic redirect).\n  const doubleDeepLink = link\n    ? querystringDecode(extractQuerystring(link))['deep_link_id']\n    : null;\n  // iOS custom scheme links.\n  const iOSDeepLink = querystringDecode(extractQuerystring(url))[\n    'deep_link_id'\n  ];\n  const iOSDoubleDeepLink = iOSDeepLink\n    ? querystringDecode(extractQuerystring(iOSDeepLink))['link']\n    : null;\n  return iOSDoubleDeepLink || iOSDeepLink || doubleDeepLink || link || url;\n}\n\n/**\n * A utility class to parse email action URLs such as password reset, email verification,\n * email link sign in, etc.\n *\n * @public\n */\nexport class ActionCodeURL {\n  /**\n   * The API key of the email action link.\n   */\n  readonly apiKey: string;\n  /**\n   * The action code of the email action link.\n   */\n  readonly code: string;\n  /**\n   * The continue URL of the email action link. Null if not provided.\n   */\n  readonly continueUrl: string | null;\n  /**\n   * The language code of the email action link. Null if not provided.\n   */\n  readonly languageCode: string | null;\n  /**\n   * The action performed by the email action link. It returns from one of the types from\n   * {@link ActionCodeInfo}\n   */\n  readonly operation: string;\n  /**\n   * The tenant ID of the email action link. Null if the email action is from the parent project.\n   */\n  readonly tenantId: string | null;\n\n  /**\n   * @param actionLink - The link from which to extract the URL.\n   * @returns The {@link ActionCodeURL} object, or null if the link is invalid.\n   *\n   * @internal\n   */\n  constructor(actionLink: string) {\n    const searchParams = querystringDecode(extractQuerystring(actionLink));\n    const apiKey = searchParams[QueryField.API_KEY] ?? null;\n    const code = searchParams[QueryField.CODE] ?? null;\n    const operation = parseMode(searchParams[QueryField.MODE] ?? null);\n    // Validate API key, code and mode.\n    _assert(apiKey && code && operation, AuthErrorCode.ARGUMENT_ERROR);\n    this.apiKey = apiKey;\n    this.operation = operation;\n    this.code = code;\n    this.continueUrl = searchParams[QueryField.CONTINUE_URL] ?? null;\n    this.languageCode = searchParams[QueryField.LANGUAGE_CODE] ?? null;\n    this.tenantId = searchParams[QueryField.TENANT_ID] ?? null;\n  }\n\n  /**\n   * Parses the email action link string and returns an {@link ActionCodeURL} if the link is valid,\n   * otherwise returns null.\n   *\n   * @param link  - The email action link string.\n   * @returns The {@link ActionCodeURL} object, or null if the link is invalid.\n   *\n   * @public\n   */\n  static parseLink(link: string): ActionCodeURL | null {\n    const actionLink = parseDeepLink(link);\n    try {\n      return new ActionCodeURL(actionLink);\n    } catch {\n      return null;\n    }\n  }\n}\n\n/**\n * Parses the email action link string and returns an {@link ActionCodeURL} if\n * the link is valid, otherwise returns null.\n *\n * @public\n */\nexport function parseActionCodeURL(link: string): ActionCodeURL | null {\n  return ActionCodeURL.parseLink(link);\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ProviderId, SignInMethod } from '../../model/enums';\nimport { AuthProvider } from '../../model/public_types';\n\nimport { ActionCodeURL } from '../action_code_url';\nimport { EmailAuthCredential } from '../credentials/email';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from '../util/assert';\n\n/**\n * Provider for generating {@link EmailAuthCredential}.\n *\n * @public\n */\nexport class EmailAuthProvider implements AuthProvider {\n  /**\n   * Always set to {@link ProviderId}.PASSWORD, even for email link.\n   */\n  static readonly PROVIDER_ID: 'password' = ProviderId.PASSWORD;\n  /**\n   * Always set to {@link SignInMethod}.EMAIL_PASSWORD.\n   */\n  static readonly EMAIL_PASSWORD_SIGN_IN_METHOD: 'password' =\n    SignInMethod.EMAIL_PASSWORD;\n  /**\n   * Always set to {@link SignInMethod}.EMAIL_LINK.\n   */\n  static readonly EMAIL_LINK_SIGN_IN_METHOD: 'emailLink' =\n    SignInMethod.EMAIL_LINK;\n  /**\n   * Always set to {@link ProviderId}.PASSWORD, even for email link.\n   */\n  readonly providerId = EmailAuthProvider.PROVIDER_ID;\n\n  /**\n   * Initialize an {@link AuthCredential} using an email and password.\n   *\n   * @example\n   * ```javascript\n   * const authCredential = EmailAuthProvider.credential(email, password);\n   * const userCredential = await signInWithCredential(auth, authCredential);\n   * ```\n   *\n   * @example\n   * ```javascript\n   * const userCredential = await signInWithEmailAndPassword(auth, email, password);\n   * ```\n   *\n   * @param email - Email address.\n   * @param password - User account password.\n   * @returns The auth provider credential.\n   */\n  static credential(email: string, password: string): EmailAuthCredential {\n    return EmailAuthCredential._fromEmailAndPassword(email, password);\n  }\n\n  /**\n   * Initialize an {@link AuthCredential} using an email and an email link after a sign in with\n   * email link operation.\n   *\n   * @example\n   * ```javascript\n   * const authCredential = EmailAuthProvider.credentialWithLink(auth, email, emailLink);\n   * const userCredential = await signInWithCredential(auth, authCredential);\n   * ```\n   *\n   * @example\n   * ```javascript\n   * await sendSignInLinkToEmail(auth, email);\n   * // Obtain emailLink from user.\n   * const userCredential = await signInWithEmailLink(auth, email, emailLink);\n   * ```\n   *\n   * @param auth - The {@link Auth} instance used to verify the link.\n   * @param email - Email address.\n   * @param emailLink - Sign-in email link.\n   * @returns - The auth provider credential.\n   */\n  static credentialWithLink(\n    email: string,\n    emailLink: string\n  ): EmailAuthCredential {\n    const actionCodeUrl = ActionCodeURL.parseLink(emailLink);\n    _assert(actionCodeUrl, AuthErrorCode.ARGUMENT_ERROR);\n\n    return EmailAuthCredential._fromEmailAndCode(\n      email,\n      actionCodeUrl.code,\n      actionCodeUrl.tenantId\n    );\n  }\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthProvider } from '../../model/public_types';\n\n/**\n * Map of OAuth Custom Parameters.\n *\n * @public\n */\nexport type CustomParameters = Record<string, string>;\n\n/**\n * The base class for all Federated providers (OAuth (including OIDC), SAML).\n *\n * This class is not meant to be instantiated directly.\n *\n * @public\n */\nexport abstract class FederatedAuthProvider implements AuthProvider {\n  /** @internal */\n  defaultLanguageCode: string | null = null;\n  /** @internal */\n  private customParameters: CustomParameters = {};\n\n  /**\n   * Constructor for generic OAuth providers.\n   *\n   * @param providerId - Provider for which credentials should be generated.\n   */\n  constructor(readonly providerId: string) {}\n\n  /**\n   * Set the language gode.\n   *\n   * @param languageCode - language code\n   */\n  setDefaultLanguage(languageCode: string | null): void {\n    this.defaultLanguageCode = languageCode;\n  }\n\n  /**\n   * Sets the OAuth custom parameters to pass in an OAuth request for popup and redirect sign-in\n   * operations.\n   *\n   * @remarks\n   * For a detailed list, check the reserved required OAuth 2.0 parameters such as `client_id`,\n   * `redirect_uri`, `scope`, `response_type`, and `state` are not allowed and will be ignored.\n   *\n   * @param customOAuthParameters - The custom OAuth parameters to pass in the OAuth request.\n   */\n  setCustomParameters(customOAuthParameters: CustomParameters): AuthProvider {\n    this.customParameters = customOAuthParameters;\n    return this;\n  }\n\n  /**\n   * Retrieve the current list of {@link CustomParameters}.\n   */\n  getCustomParameters(): CustomParameters {\n    return this.customParameters;\n  }\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthProvider, UserCredential } from '../../model/public_types';\n\nimport { _assert } from '../util/assert';\nimport { AuthErrorCode } from '../errors';\n\nimport { OAuthCredential, OAuthCredentialParams } from '../credentials/oauth';\nimport { UserCredentialInternal } from '../../model/user';\nimport { FirebaseError } from '@firebase/util';\nimport { TaggedWithTokenResponse } from '../../model/id_token';\nimport { SignInWithIdpResponse } from '../../../internal';\nimport { FederatedAuthProvider } from './federated';\n\n/**\n * Defines the options for initializing an {@link OAuthCredential}.\n *\n * @remarks\n * For ID tokens with nonce claim, the raw nonce has to also be provided.\n *\n * @public\n */\nexport interface OAuthCredentialOptions {\n  /**\n   * The OAuth ID token used to initialize the {@link OAuthCredential}.\n   */\n  idToken?: string;\n  /**\n   * The OAuth access token used to initialize the {@link OAuthCredential}.\n   */\n  accessToken?: string;\n  /**\n   * The raw nonce associated with the ID token.\n   *\n   * @remarks\n   * It is required when an ID token with a nonce field is provided. The SHA-256 hash of the\n   * raw nonce must match the nonce field in the ID token.\n   */\n  rawNonce?: string;\n}\n\n/**\n * Common code to all OAuth providers. This is separate from the\n * {@link OAuthProvider} so that child providers (like\n * {@link GoogleAuthProvider}) don't inherit the `credential` instance method.\n * Instead, they rely on a static `credential` method.\n */\nexport abstract class BaseOAuthProvider\n  extends FederatedAuthProvider\n  implements AuthProvider\n{\n  /** @internal */\n  private scopes: string[] = [];\n\n  /**\n   * Add an OAuth scope to the credential.\n   *\n   * @param scope - Provider OAuth scope to add.\n   */\n  addScope(scope: string): AuthProvider {\n    // If not already added, add scope to list.\n    if (!this.scopes.includes(scope)) {\n      this.scopes.push(scope);\n    }\n    return this;\n  }\n\n  /**\n   * Retrieve the current list of OAuth scopes.\n   */\n  getScopes(): string[] {\n    return [...this.scopes];\n  }\n}\n\n/**\n * Provider for generating generic {@link OAuthCredential}.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new OAuthProvider('google.com');\n * // Start a sign in process for an unauthenticated user.\n * provider.addScope('profile');\n * provider.addScope('email');\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a OAuth Access Token for the provider.\n *   const credential = provider.credentialFromResult(auth, result);\n *   const token = credential.accessToken;\n * }\n * ```\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new OAuthProvider('google.com');\n * provider.addScope('profile');\n * provider.addScope('email');\n * const result = await signInWithPopup(auth, provider);\n *\n * // The signed-in user info.\n * const user = result.user;\n * // This gives you a OAuth Access Token for the provider.\n * const credential = provider.credentialFromResult(auth, result);\n * const token = credential.accessToken;\n * ```\n * @public\n */\nexport class OAuthProvider extends BaseOAuthProvider {\n  /**\n   * Creates an {@link OAuthCredential} from a JSON string or a plain object.\n   * @param json - A plain object or a JSON string\n   */\n  static credentialFromJSON(json: object | string): OAuthCredential {\n    const obj = typeof json === 'string' ? JSON.parse(json) : json;\n    _assert(\n      'providerId' in obj && 'signInMethod' in obj,\n      AuthErrorCode.ARGUMENT_ERROR\n    );\n    return OAuthCredential._fromParams(obj);\n  }\n\n  /**\n   * Creates a {@link OAuthCredential} from a generic OAuth provider's access token or ID token.\n   *\n   * @remarks\n   * The raw nonce is required when an ID token with a nonce field is provided. The SHA-256 hash of\n   * the raw nonce must match the nonce field in the ID token.\n   *\n   * @example\n   * ```javascript\n   * // `googleUser` from the onsuccess Google Sign In callback.\n   * // Initialize a generate OAuth provider with a `google.com` providerId.\n   * const provider = new OAuthProvider('google.com');\n   * const credential = provider.credential({\n   *   idToken: googleUser.getAuthResponse().id_token,\n   * });\n   * const result = await signInWithCredential(credential);\n   * ```\n   *\n   * @param params - Either the options object containing the ID token, access token and raw nonce\n   * or the ID token string.\n   */\n  credential(params: OAuthCredentialOptions): OAuthCredential {\n    return this._credential({ ...params, nonce: params.rawNonce });\n  }\n\n  /** An internal credential method that accepts more permissive options */\n  private _credential(\n    params: Omit<OAuthCredentialParams, 'signInMethod' | 'providerId'>\n  ): OAuthCredential {\n    _assert(params.idToken || params.accessToken, AuthErrorCode.ARGUMENT_ERROR);\n    // For OAuthCredential, sign in method is same as providerId.\n    return OAuthCredential._fromParams({\n      ...params,\n      providerId: this.providerId,\n      signInMethod: this.providerId\n    });\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromResult(\n    userCredential: UserCredential\n  ): OAuthCredential | null {\n    return OAuthProvider.oauthCredentialFromTaggedObject(\n      userCredential as UserCredentialInternal\n    );\n  }\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\n   * thrown during a sign-in, link, or reauthenticate operation.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromError(error: FirebaseError): OAuthCredential | null {\n    return OAuthProvider.oauthCredentialFromTaggedObject(\n      (error.customData || {}) as TaggedWithTokenResponse\n    );\n  }\n\n  private static oauthCredentialFromTaggedObject({\n    _tokenResponse: tokenResponse\n  }: TaggedWithTokenResponse): OAuthCredential | null {\n    if (!tokenResponse) {\n      return null;\n    }\n\n    const {\n      oauthIdToken,\n      oauthAccessToken,\n      oauthTokenSecret,\n      pendingToken,\n      nonce,\n      providerId\n    } = tokenResponse as SignInWithIdpResponse;\n    if (\n      !oauthAccessToken &&\n      !oauthTokenSecret &&\n      !oauthIdToken &&\n      !pendingToken\n    ) {\n      return null;\n    }\n\n    if (!providerId) {\n      return null;\n    }\n\n    try {\n      return new OAuthProvider(providerId)._credential({\n        idToken: oauthIdToken,\n        accessToken: oauthAccessToken,\n        nonce,\n        pendingToken\n      });\n    } catch (e) {\n      return null;\n    }\n  }\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserCredential } from '../../model/public_types';\nimport { FirebaseError } from '@firebase/util';\n\nimport { TaggedWithTokenResponse } from '../../model/id_token';\nimport { UserCredentialInternal } from '../../model/user';\nimport { OAuthCredential } from '../credentials/oauth';\nimport { BaseOAuthProvider } from './oauth';\nimport { ProviderId, SignInMethod } from '../../model/enums';\n\n/**\n * Provider for generating an {@link OAuthCredential} for {@link ProviderId}.FACEBOOK.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new FacebookAuthProvider();\n * // Start a sign in process for an unauthenticated user.\n * provider.addScope('user_birthday');\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a Facebook Access Token.\n *   const credential = FacebookAuthProvider.credentialFromResult(result);\n *   const token = credential.accessToken;\n * }\n * ```\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new FacebookAuthProvider();\n * provider.addScope('user_birthday');\n * const result = await signInWithPopup(auth, provider);\n *\n * // The signed-in user info.\n * const user = result.user;\n * // This gives you a Facebook Access Token.\n * const credential = FacebookAuthProvider.credentialFromResult(result);\n * const token = credential.accessToken;\n * ```\n *\n * @public\n */\nexport class FacebookAuthProvider extends BaseOAuthProvider {\n  /** Always set to {@link SignInMethod}.FACEBOOK. */\n  static readonly FACEBOOK_SIGN_IN_METHOD: 'facebook.com' =\n    SignInMethod.FACEBOOK;\n  /** Always set to {@link ProviderId}.FACEBOOK. */\n  static readonly PROVIDER_ID: 'facebook.com' = ProviderId.FACEBOOK;\n\n  constructor() {\n    super(ProviderId.FACEBOOK);\n  }\n\n  /**\n   * Creates a credential for Facebook.\n   *\n   * @example\n   * ```javascript\n   * // `event` from the Facebook auth.authResponseChange callback.\n   * const credential = FacebookAuthProvider.credential(event.authResponse.accessToken);\n   * const result = await signInWithCredential(credential);\n   * ```\n   *\n   * @param accessToken - Facebook access token.\n   */\n  static credential(accessToken: string): OAuthCredential {\n    return OAuthCredential._fromParams({\n      providerId: FacebookAuthProvider.PROVIDER_ID,\n      signInMethod: FacebookAuthProvider.FACEBOOK_SIGN_IN_METHOD,\n      accessToken\n    });\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromResult(\n    userCredential: UserCredential\n  ): OAuthCredential | null {\n    return FacebookAuthProvider.credentialFromTaggedObject(\n      userCredential as UserCredentialInternal\n    );\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\n   * thrown during a sign-in, link, or reauthenticate operation.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromError(error: FirebaseError): OAuthCredential | null {\n    return FacebookAuthProvider.credentialFromTaggedObject(\n      (error.customData || {}) as TaggedWithTokenResponse\n    );\n  }\n\n  private static credentialFromTaggedObject({\n    _tokenResponse: tokenResponse\n  }: TaggedWithTokenResponse): OAuthCredential | null {\n    if (!tokenResponse || !('oauthAccessToken' in tokenResponse)) {\n      return null;\n    }\n\n    if (!tokenResponse.oauthAccessToken) {\n      return null;\n    }\n\n    try {\n      return FacebookAuthProvider.credential(tokenResponse.oauthAccessToken);\n    } catch {\n      return null;\n    }\n  }\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserCredential } from '../../model/public_types';\nimport { FirebaseError } from '@firebase/util';\n\nimport { SignInWithIdpResponse } from '../../api/authentication/idp';\nimport { TaggedWithTokenResponse } from '../../model/id_token';\nimport { UserCredentialInternal } from '../../model/user';\nimport { OAuthCredential } from '../credentials/oauth';\nimport { BaseOAuthProvider } from './oauth';\nimport { ProviderId, SignInMethod } from '../../model/enums';\n\n/**\n * Provider for generating an {@link OAuthCredential} for {@link ProviderId}.GOOGLE.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new GoogleAuthProvider();\n * // Start a sign in process for an unauthenticated user.\n * provider.addScope('profile');\n * provider.addScope('email');\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a Google Access Token.\n *   const credential = GoogleAuthProvider.credentialFromResult(result);\n *   const token = credential.accessToken;\n * }\n * ```\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new GoogleAuthProvider();\n * provider.addScope('profile');\n * provider.addScope('email');\n * const result = await signInWithPopup(auth, provider);\n *\n * // The signed-in user info.\n * const user = result.user;\n * // This gives you a Google Access Token.\n * const credential = GoogleAuthProvider.credentialFromResult(result);\n * const token = credential.accessToken;\n * ```\n *\n * @public\n */\nexport class GoogleAuthProvider extends BaseOAuthProvider {\n  /** Always set to {@link SignInMethod}.GOOGLE. */\n  static readonly GOOGLE_SIGN_IN_METHOD: 'google.com' = SignInMethod.GOOGLE;\n  /** Always set to {@link ProviderId}.GOOGLE. */\n  static readonly PROVIDER_ID: 'google.com' = ProviderId.GOOGLE;\n\n  constructor() {\n    super(ProviderId.GOOGLE);\n    this.addScope('profile');\n  }\n\n  /**\n   * Creates a credential for Google. At least one of ID token and access token is required.\n   *\n   * @example\n   * ```javascript\n   * // \\`googleUser\\` from the onsuccess Google Sign In callback.\n   * const credential = GoogleAuthProvider.credential(googleUser.getAuthResponse().id_token);\n   * const result = await signInWithCredential(credential);\n   * ```\n   *\n   * @param idToken - Google ID token.\n   * @param accessToken - Google access token.\n   */\n  static credential(\n    idToken?: string | null,\n    accessToken?: string | null\n  ): OAuthCredential {\n    return OAuthCredential._fromParams({\n      providerId: GoogleAuthProvider.PROVIDER_ID,\n      signInMethod: GoogleAuthProvider.GOOGLE_SIGN_IN_METHOD,\n      idToken,\n      accessToken\n    });\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromResult(\n    userCredential: UserCredential\n  ): OAuthCredential | null {\n    return GoogleAuthProvider.credentialFromTaggedObject(\n      userCredential as UserCredentialInternal\n    );\n  }\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\n   * thrown during a sign-in, link, or reauthenticate operation.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromError(error: FirebaseError): OAuthCredential | null {\n    return GoogleAuthProvider.credentialFromTaggedObject(\n      (error.customData || {}) as TaggedWithTokenResponse\n    );\n  }\n\n  private static credentialFromTaggedObject({\n    _tokenResponse: tokenResponse\n  }: TaggedWithTokenResponse): OAuthCredential | null {\n    if (!tokenResponse) {\n      return null;\n    }\n\n    const { oauthIdToken, oauthAccessToken } =\n      tokenResponse as SignInWithIdpResponse;\n    if (!oauthIdToken && !oauthAccessToken) {\n      // This could be an oauth 1 credential or a phone credential\n      return null;\n    }\n\n    try {\n      return GoogleAuthProvider.credential(oauthIdToken, oauthAccessToken);\n    } catch {\n      return null;\n    }\n  }\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserCredential } from '../../model/public_types';\nimport { FirebaseError } from '@firebase/util';\n\nimport { TaggedWithTokenResponse } from '../../model/id_token';\nimport { UserCredentialInternal } from '../../model/user';\nimport { OAuthCredential } from '../credentials/oauth';\nimport { BaseOAuthProvider } from './oauth';\nimport { ProviderId, SignInMethod } from '../../model/enums';\n\n/**\n * Provider for generating an {@link OAuthCredential} for {@link ProviderId}.GITHUB.\n *\n * @remarks\n * GitHub requires an OAuth 2.0 redirect, so you can either handle the redirect directly, or use\n * the {@link signInWithPopup} handler:\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new GithubAuthProvider();\n * // Start a sign in process for an unauthenticated user.\n * provider.addScope('repo');\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a Github Access Token.\n *   const credential = GithubAuthProvider.credentialFromResult(result);\n *   const token = credential.accessToken;\n * }\n * ```\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new GithubAuthProvider();\n * provider.addScope('repo');\n * const result = await signInWithPopup(auth, provider);\n *\n * // The signed-in user info.\n * const user = result.user;\n * // This gives you a Github Access Token.\n * const credential = GithubAuthProvider.credentialFromResult(result);\n * const token = credential.accessToken;\n * ```\n * @public\n */\nexport class GithubAuthProvider extends BaseOAuthProvider {\n  /** Always set to {@link SignInMethod}.GITHUB. */\n  static readonly GITHUB_SIGN_IN_METHOD: 'github.com' = SignInMethod.GITHUB;\n  /** Always set to {@link ProviderId}.GITHUB. */\n  static readonly PROVIDER_ID: 'github.com' = ProviderId.GITHUB;\n\n  constructor() {\n    super(ProviderId.GITHUB);\n  }\n\n  /**\n   * Creates a credential for Github.\n   *\n   * @param accessToken - Github access token.\n   */\n  static credential(accessToken: string): OAuthCredential {\n    return OAuthCredential._fromParams({\n      providerId: GithubAuthProvider.PROVIDER_ID,\n      signInMethod: GithubAuthProvider.GITHUB_SIGN_IN_METHOD,\n      accessToken\n    });\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromResult(\n    userCredential: UserCredential\n  ): OAuthCredential | null {\n    return GithubAuthProvider.credentialFromTaggedObject(\n      userCredential as UserCredentialInternal\n    );\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\n   * thrown during a sign-in, link, or reauthenticate operation.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromError(error: FirebaseError): OAuthCredential | null {\n    return GithubAuthProvider.credentialFromTaggedObject(\n      (error.customData || {}) as TaggedWithTokenResponse\n    );\n  }\n\n  private static credentialFromTaggedObject({\n    _tokenResponse: tokenResponse\n  }: TaggedWithTokenResponse): OAuthCredential | null {\n    if (!tokenResponse || !('oauthAccessToken' in tokenResponse)) {\n      return null;\n    }\n\n    if (!tokenResponse.oauthAccessToken) {\n      return null;\n    }\n\n    try {\n      return GithubAuthProvider.credential(tokenResponse.oauthAccessToken);\n    } catch {\n      return null;\n    }\n  }\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Represents the SAML credentials returned by an {@link SAMLAuthProvider}.\n *\n * @public\n */\n\nimport {\n  signInWithIdp,\n  SignInWithIdpRequest\n} from '../../api/authentication/idp';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { AuthCredential } from './auth_credential';\n\nconst IDP_REQUEST_URI = 'http://localhost';\n\n/**\n * @public\n */\nexport class SAMLAuthCredential extends AuthCredential {\n  /** @internal */\n  private constructor(\n    providerId: string,\n    private readonly pendingToken: string\n  ) {\n    super(providerId, providerId);\n  }\n\n  /** @internal */\n  _getIdTokenResponse(auth: AuthInternal): Promise<IdTokenResponse> {\n    const request = this.buildRequest();\n    return signInWithIdp(auth, request);\n  }\n\n  /** @internal */\n  _linkToIdToken(\n    auth: AuthInternal,\n    idToken: string\n  ): Promise<IdTokenResponse> {\n    const request = this.buildRequest();\n    request.idToken = idToken;\n    return signInWithIdp(auth, request);\n  }\n\n  /** @internal */\n  _getReauthenticationResolver(auth: AuthInternal): Promise<IdTokenResponse> {\n    const request = this.buildRequest();\n    request.autoCreate = false;\n    return signInWithIdp(auth, request);\n  }\n\n  /** {@inheritdoc AuthCredential.toJSON}  */\n  toJSON(): object {\n    return {\n      signInMethod: this.signInMethod,\n      providerId: this.providerId,\n      pendingToken: this.pendingToken\n    };\n  }\n\n  /**\n   * Static method to deserialize a JSON representation of an object into an\n   * {@link  AuthCredential}.\n   *\n   * @param json - Input can be either Object or the stringified representation of the object.\n   * When string is provided, JSON.parse would be called first.\n   *\n   * @returns If the JSON input does not represent an {@link  AuthCredential}, null is returned.\n   */\n  static fromJSON(json: string | object): SAMLAuthCredential | null {\n    const obj = typeof json === 'string' ? JSON.parse(json) : json;\n    const { providerId, signInMethod, pendingToken }: Record<string, string> =\n      obj;\n    if (\n      !providerId ||\n      !signInMethod ||\n      !pendingToken ||\n      providerId !== signInMethod\n    ) {\n      return null;\n    }\n\n    return new SAMLAuthCredential(providerId, pendingToken);\n  }\n\n  /**\n   * Helper static method to avoid exposing the constructor to end users.\n   *\n   * @internal\n   */\n  static _create(providerId: string, pendingToken: string): SAMLAuthCredential {\n    return new SAMLAuthCredential(providerId, pendingToken);\n  }\n\n  private buildRequest(): SignInWithIdpRequest {\n    return {\n      requestUri: IDP_REQUEST_URI,\n      returnSecureToken: true,\n      pendingToken: this.pendingToken\n    };\n  }\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { SignInWithIdpResponse } from '../../api/authentication/idp';\nimport { TaggedWithTokenResponse } from '../../model/id_token';\nimport { UserCredential } from '../../model/public_types';\nimport { UserCredentialInternal } from '../../model/user';\nimport { AuthCredential } from '../credentials';\nimport { SAMLAuthCredential } from '../credentials/saml';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from '../util/assert';\nimport { FederatedAuthProvider } from './federated';\n\nconst SAML_PROVIDER_PREFIX = 'saml.';\n\n/**\n * An {@link AuthProvider} for SAML.\n *\n * @public\n */\nexport class SAMLAuthProvider extends FederatedAuthProvider {\n  /**\n   * Constructor. The providerId must start with \"saml.\"\n   * @param providerId - SAML provider ID.\n   */\n  constructor(providerId: string) {\n    _assert(\n      providerId.startsWith(SAML_PROVIDER_PREFIX),\n      AuthErrorCode.ARGUMENT_ERROR\n    );\n    super(providerId);\n  }\n\n  /**\n   * Generates an {@link AuthCredential} from a {@link UserCredential} after a\n   * successful SAML flow completes.\n   *\n   * @remarks\n   *\n   * For example, to get an {@link AuthCredential}, you could write the\n   * following code:\n   *\n   * ```js\n   * const userCredential = await signInWithPopup(auth, samlProvider);\n   * const credential = SAMLAuthProvider.credentialFromResult(userCredential);\n   * ```\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromResult(\n    userCredential: UserCredential\n  ): AuthCredential | null {\n    return SAMLAuthProvider.samlCredentialFromTaggedObject(\n      userCredential as UserCredentialInternal\n    );\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\n   * thrown during a sign-in, link, or reauthenticate operation.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromError(error: FirebaseError): AuthCredential | null {\n    return SAMLAuthProvider.samlCredentialFromTaggedObject(\n      (error.customData || {}) as TaggedWithTokenResponse\n    );\n  }\n\n  /**\n   * Creates an {@link AuthCredential} from a JSON string or a plain object.\n   * @param json - A plain object or a JSON string\n   */\n  static credentialFromJSON(json: string | object): AuthCredential {\n    const credential = SAMLAuthCredential.fromJSON(json);\n    _assert(credential, AuthErrorCode.ARGUMENT_ERROR);\n    return credential;\n  }\n\n  private static samlCredentialFromTaggedObject({\n    _tokenResponse: tokenResponse\n  }: TaggedWithTokenResponse): SAMLAuthCredential | null {\n    if (!tokenResponse) {\n      return null;\n    }\n\n    const { pendingToken, providerId } = tokenResponse as SignInWithIdpResponse;\n\n    if (!pendingToken || !providerId) {\n      return null;\n    }\n\n    try {\n      return SAMLAuthCredential._create(providerId, pendingToken);\n    } catch (e) {\n      return null;\n    }\n  }\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @license\n * Copyright 2020 Twitter LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserCredential } from '../../model/public_types';\nimport { FirebaseError } from '@firebase/util';\n\nimport { SignInWithIdpResponse } from '../../api/authentication/idp';\nimport { TaggedWithTokenResponse } from '../../model/id_token';\nimport { UserCredentialInternal } from '../../model/user';\nimport { OAuthCredential } from '../credentials/oauth';\nimport { BaseOAuthProvider } from './oauth';\nimport { ProviderId, SignInMethod } from '../../model/enums';\n\n/**\n * Provider for generating an {@link OAuthCredential} for {@link ProviderId}.TWITTER.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new TwitterAuthProvider();\n * // Start a sign in process for an unauthenticated user.\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a Twitter Access Token and Secret.\n *   const credential = TwitterAuthProvider.credentialFromResult(result);\n *   const token = credential.accessToken;\n *   const secret = credential.secret;\n * }\n * ```\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new TwitterAuthProvider();\n * const result = await signInWithPopup(auth, provider);\n *\n * // The signed-in user info.\n * const user = result.user;\n * // This gives you a Twitter Access Token and Secret.\n * const credential = TwitterAuthProvider.credentialFromResult(result);\n * const token = credential.accessToken;\n * const secret = credential.secret;\n * ```\n *\n * @public\n */\nexport class TwitterAuthProvider extends BaseOAuthProvider {\n  /** Always set to {@link SignInMethod}.TWITTER. */\n  static readonly TWITTER_SIGN_IN_METHOD: 'twitter.com' = SignInMethod.TWITTER;\n  /** Always set to {@link ProviderId}.TWITTER. */\n  static readonly PROVIDER_ID: 'twitter.com' = ProviderId.TWITTER;\n\n  constructor() {\n    super(ProviderId.TWITTER);\n  }\n\n  /**\n   * Creates a credential for Twitter.\n   *\n   * @param token - Twitter access token.\n   * @param secret - Twitter secret.\n   */\n  static credential(token: string, secret: string): OAuthCredential {\n    return OAuthCredential._fromParams({\n      providerId: TwitterAuthProvider.PROVIDER_ID,\n      signInMethod: TwitterAuthProvider.TWITTER_SIGN_IN_METHOD,\n      oauthToken: token,\n      oauthTokenSecret: secret\n    });\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromResult(\n    userCredential: UserCredential\n  ): OAuthCredential | null {\n    return TwitterAuthProvider.credentialFromTaggedObject(\n      userCredential as UserCredentialInternal\n    );\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\n   * thrown during a sign-in, link, or reauthenticate operation.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromError(error: FirebaseError): OAuthCredential | null {\n    return TwitterAuthProvider.credentialFromTaggedObject(\n      (error.customData || {}) as TaggedWithTokenResponse\n    );\n  }\n\n  private static credentialFromTaggedObject({\n    _tokenResponse: tokenResponse\n  }: TaggedWithTokenResponse): OAuthCredential | null {\n    if (!tokenResponse) {\n      return null;\n    }\n    const { oauthAccessToken, oauthTokenSecret } =\n      tokenResponse as SignInWithIdpResponse;\n    if (!oauthAccessToken || !oauthTokenSecret) {\n      return null;\n    }\n\n    try {\n      return TwitterAuthProvider.credential(oauthAccessToken, oauthTokenSecret);\n    } catch {\n      return null;\n    }\n  }\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  HttpMethod,\n  RecaptchaClientType,\n  RecaptchaVersion,\n  _addTidIfNecessary,\n  _performSignInRequest\n} from '../index';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { Auth } from '../../model/public_types';\n\nexport interface SignUpRequest {\n  idToken?: string;\n  returnSecureToken?: boolean;\n  email?: string;\n  password?: string;\n  tenantId?: string;\n  captchaResponse?: string;\n  clientType?: RecaptchaClientType;\n  recaptchaVersion?: RecaptchaVersion;\n}\n\nexport interface SignUpResponse extends IdTokenResponse {\n  displayName?: string;\n  email?: string;\n}\n\nexport async function signUp(\n  auth: Auth,\n  request: SignUpRequest\n): Promise<SignUpResponse> {\n  return _performSignInRequest<SignUpRequest, SignUpResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_UP,\n    _addTidIfNecessary(auth, request)\n  );\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PhoneOrOauthTokenResponse } from '../../api/authentication/mfa';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { UserInternal, UserCredentialInternal } from '../../model/user';\nimport { UserImpl } from './user_impl';\nimport { AuthInternal } from '../../model/auth';\nimport { OperationType, ProviderId } from '../../model/enums';\n\ninterface UserCredentialParams {\n  readonly user: UserInternal;\n  readonly providerId: ProviderId | string | null;\n  readonly _tokenResponse?: PhoneOrOauthTokenResponse;\n  readonly operationType: OperationType;\n}\n\nexport class UserCredentialImpl\n  implements UserCredentialInternal, UserCredentialParams\n{\n  readonly user: UserInternal;\n  readonly providerId: ProviderId | string | null;\n  readonly _tokenResponse: PhoneOrOauthTokenResponse | undefined;\n  readonly operationType: OperationType;\n\n  constructor(params: UserCredentialParams) {\n    this.user = params.user;\n    this.providerId = params.providerId;\n    this._tokenResponse = params._tokenResponse;\n    this.operationType = params.operationType;\n  }\n\n  static async _fromIdTokenResponse(\n    auth: AuthInternal,\n    operationType: OperationType,\n    idTokenResponse: IdTokenResponse,\n    isAnonymous: boolean = false\n  ): Promise<UserCredentialInternal> {\n    const user = await UserImpl._fromIdTokenResponse(\n      auth,\n      idTokenResponse,\n      isAnonymous\n    );\n    const providerId = providerIdForResponse(idTokenResponse);\n    const userCred = new UserCredentialImpl({\n      user,\n      providerId,\n      _tokenResponse: idTokenResponse,\n      operationType\n    });\n    return userCred;\n  }\n\n  static async _forOperation(\n    user: UserInternal,\n    operationType: OperationType,\n    response: PhoneOrOauthTokenResponse\n  ): Promise<UserCredentialImpl> {\n    await user._updateTokensIfNecessary(response, /* reload */ true);\n    const providerId = providerIdForResponse(response);\n    return new UserCredentialImpl({\n      user,\n      providerId,\n      _tokenResponse: response,\n      operationType\n    });\n  }\n}\n\nfunction providerIdForResponse(\n  response: IdTokenResponse\n): ProviderId | string | null {\n  if (response.providerId) {\n    return response.providerId;\n  }\n\n  if ('phoneNumber' in response) {\n    return ProviderId.PHONE;\n  }\n\n  return null;\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Auth, UserCredential } from '../../model/public_types';\nimport { signUp } from '../../api/authentication/sign_up';\nimport { UserInternal } from '../../model/user';\nimport { UserCredentialImpl } from '../user/user_credential_impl';\nimport { _castAuth } from '../auth/auth_impl';\nimport { OperationType } from '../../model/enums';\nimport { _isFirebaseServerApp } from '@firebase/app';\nimport { _serverAppCurrentUserOperationNotSupportedError } from '../../core/util/assert';\n\n/**\n * Asynchronously signs in as an anonymous user.\n *\n * @remarks\n * If there is already an anonymous user signed in, that user will be returned; otherwise, a\n * new anonymous user identity will be created and returned.\n *\n * This method is not supported by {@link Auth} instances created with a\n * {@link @firebase/app#FirebaseServerApp}.\n *\n * @param auth - The {@link Auth} instance.\n *\n * @public\n */\nexport async function signInAnonymously(auth: Auth): Promise<UserCredential> {\n  if (_isFirebaseServerApp(auth.app)) {\n    return Promise.reject(\n      _serverAppCurrentUserOperationNotSupportedError(auth)\n    );\n  }\n  const authInternal = _castAuth(auth);\n  await authInternal._initializationPromise;\n  if (authInternal.currentUser?.isAnonymous) {\n    // If an anonymous user is already signed in, no need to sign them in again.\n    return new UserCredentialImpl({\n      user: authInternal.currentUser as UserInternal,\n      providerId: null,\n      operationType: OperationType.SIGN_IN\n    });\n  }\n  const response = await signUp(authInternal, {\n    returnSecureToken: true\n  });\n  const userCredential = await UserCredentialImpl._fromIdTokenResponse(\n    authInternal,\n    OperationType.SIGN_IN,\n    response,\n    true\n  );\n  await authInternal._updateCurrentUser(userCredential.user);\n  return userCredential;\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MultiFactorError as MultiFactorErrorPublic } from '../model/public_types';\nimport { FirebaseError } from '@firebase/util';\nimport { AuthInternal } from '../model/auth';\nimport { IdTokenResponse } from '../model/id_token';\nimport { AuthErrorCode } from '../core/errors';\nimport { UserInternal } from '../model/user';\nimport { AuthCredential } from '../core/credentials';\nimport { IdTokenMfaResponse } from '../api/authentication/mfa';\nimport { OperationType } from '../model/enums';\n\nexport type MultiFactorErrorData = MultiFactorErrorPublic['customData'] & {\n  _serverResponse: IdTokenMfaResponse;\n};\n\nexport class MultiFactorError\n  extends FirebaseError\n  implements MultiFactorErrorPublic\n{\n  readonly customData: MultiFactorErrorData;\n\n  private constructor(\n    auth: AuthInternal,\n    error: FirebaseError,\n    readonly operationType: OperationType,\n    readonly user?: UserInternal\n  ) {\n    super(error.code, error.message);\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, MultiFactorError.prototype);\n    this.customData = {\n      appName: auth.name,\n      tenantId: auth.tenantId ?? undefined,\n      _serverResponse: error.customData!._serverResponse as IdTokenMfaResponse,\n      operationType\n    };\n  }\n\n  static _fromErrorAndOperation(\n    auth: AuthInternal,\n    error: FirebaseError,\n    operationType: OperationType,\n    user?: UserInternal\n  ): MultiFactorError {\n    return new MultiFactorError(auth, error, operationType, user);\n  }\n}\n\nexport function _processCredentialSavingMfaContextIfNecessary(\n  auth: AuthInternal,\n  operationType: OperationType,\n  credential: AuthCredential,\n  user?: UserInternal\n): Promise<IdTokenResponse> {\n  const idTokenProvider =\n    operationType === OperationType.REAUTHENTICATE\n      ? credential._getReauthenticationResolver(auth)\n      : credential._getIdTokenResponse(auth);\n\n  return idTokenProvider.catch(error => {\n    if (error.code === `auth/${AuthErrorCode.MFA_REQUIRED}`) {\n      throw MultiFactorError._fromErrorAndOperation(\n        auth,\n        error,\n        operationType,\n        user\n      );\n    }\n\n    throw error;\n  });\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface ProviderAssociatedObject {\n  providerId?: string;\n}\n\n/**\n * Takes a set of UserInfo provider data and converts it to a set of names\n */\nexport function providerDataAsNames<T extends ProviderAssociatedObject>(\n  providerData: T[]\n): Set<string> {\n  return new Set(\n    providerData\n      .map(({ providerId }) => providerId)\n      .filter(pid => !!pid) as string[]\n  );\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { User } from '../../model/public_types';\n\nimport { deleteLinkedAccounts } from '../../api/account_management/account';\nimport { UserInternal, UserCredentialInternal } from '../../model/user';\nimport { AuthCredential } from '../credentials';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from '../util/assert';\nimport { providerDataAsNames } from '../util/providers';\nimport { _logoutIfInvalidated } from './invalidation';\nimport { _reloadWithoutSaving } from './reload';\nimport { UserCredentialImpl } from './user_credential_impl';\nimport { getModularInstance } from '@firebase/util';\nimport { OperationType, ProviderId } from '../../model/enums';\n\n/**\n * Unlinks a provider from a user account.\n *\n * @param user - The user.\n * @param providerId - The provider to unlink.\n *\n * @public\n */\nexport async function unlink(user: User, providerId: string): Promise<User> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  await _assertLinkedStatus(true, userInternal, providerId);\n  const { providerUserInfo } = await deleteLinkedAccounts(userInternal.auth, {\n    idToken: await userInternal.getIdToken(),\n    deleteProvider: [providerId]\n  });\n\n  const providersLeft = providerDataAsNames(providerUserInfo || []);\n\n  userInternal.providerData = userInternal.providerData.filter(pd =>\n    providersLeft.has(pd.providerId)\n  );\n  if (!providersLeft.has(ProviderId.PHONE)) {\n    userInternal.phoneNumber = null;\n  }\n\n  await userInternal.auth._persistUserIfCurrent(userInternal);\n  return userInternal;\n}\n\nexport async function _link(\n  user: UserInternal,\n  credential: AuthCredential,\n  bypassAuthState = false\n): Promise<UserCredentialInternal> {\n  const response = await _logoutIfInvalidated(\n    user,\n    credential._linkToIdToken(user.auth, await user.getIdToken()),\n    bypassAuthState\n  );\n  return UserCredentialImpl._forOperation(user, OperationType.LINK, response);\n}\n\nexport async function _assertLinkedStatus(\n  expected: boolean,\n  user: UserInternal,\n  provider: string\n): Promise<void> {\n  await _reloadWithoutSaving(user);\n  const providerIds = providerDataAsNames(user.providerData);\n\n  const code =\n    expected === false\n      ? AuthErrorCode.PROVIDER_ALREADY_LINKED\n      : AuthErrorCode.NO_SUCH_PROVIDER;\n  _assert(providerIds.has(provider) === expected, user.auth, code);\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { _processCredentialSavingMfaContextIfNecessary } from '../../mfa/mfa_error';\nimport { OperationType } from '../../model/enums';\nimport { UserInternal } from '../../model/user';\nimport { AuthCredential } from '../credentials';\nimport { AuthErrorCode } from '../errors';\nimport { _assert, _fail } from '../util/assert';\nimport { _parseToken } from './id_token_result';\nimport { _logoutIfInvalidated } from './invalidation';\nimport { UserCredentialImpl } from './user_credential_impl';\nimport { _isFirebaseServerApp } from '@firebase/app';\nimport { _serverAppCurrentUserOperationNotSupportedError } from '../../core/util/assert';\n\nexport async function _reauthenticate(\n  user: UserInternal,\n  credential: AuthCredential,\n  bypassAuthState = false\n): Promise<UserCredentialImpl> {\n  const { auth } = user;\n  if (_isFirebaseServerApp(auth.app)) {\n    return Promise.reject(\n      _serverAppCurrentUserOperationNotSupportedError(auth)\n    );\n  }\n  const operationType = OperationType.REAUTHENTICATE;\n\n  try {\n    const response = await _logoutIfInvalidated(\n      user,\n      _processCredentialSavingMfaContextIfNecessary(\n        auth,\n        operationType,\n        credential,\n        user\n      ),\n      bypassAuthState\n    );\n    _assert(response.idToken, auth, AuthErrorCode.INTERNAL_ERROR);\n    const parsed = _parseToken(response.idToken);\n    _assert(parsed, auth, AuthErrorCode.INTERNAL_ERROR);\n\n    const { sub: localId } = parsed;\n    _assert(user.uid === localId, auth, AuthErrorCode.USER_MISMATCH);\n\n    return UserCredentialImpl._forOperation(user, operationType, response);\n  } catch (e) {\n    // Convert user deleted error into user mismatch\n    if ((e as FirebaseError)?.code === `auth/${AuthErrorCode.USER_DELETED}`) {\n      _fail(auth, AuthErrorCode.USER_MISMATCH);\n    }\n    throw e;\n  }\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserCredential, Auth, User } from '../../model/public_types';\n\nimport { _processCredentialSavingMfaContextIfNecessary } from '../../mfa/mfa_error';\nimport { AuthInternal } from '../../model/auth';\nimport { UserInternal } from '../../model/user';\nimport { AuthCredential } from '../credentials';\nimport { _assertLinkedStatus, _link } from '../user/link_unlink';\nimport { _reauthenticate } from '../user/reauthenticate';\nimport { UserCredentialImpl } from '../user/user_credential_impl';\nimport { _castAuth } from '../auth/auth_impl';\nimport { getModularInstance } from '@firebase/util';\nimport { OperationType } from '../../model/enums';\nimport { _isFirebaseServerApp } from '@firebase/app';\nimport { _serverAppCurrentUserOperationNotSupportedError } from '../../core/util/assert';\n\nexport async function _signInWithCredential(\n  auth: AuthInternal,\n  credential: AuthCredential,\n  bypassAuthState = false\n): Promise<UserCredential> {\n  if (_isFirebaseServerApp(auth.app)) {\n    return Promise.reject(\n      _serverAppCurrentUserOperationNotSupportedError(auth)\n    );\n  }\n  const operationType = OperationType.SIGN_IN;\n  const response = await _processCredentialSavingMfaContextIfNecessary(\n    auth,\n    operationType,\n    credential\n  );\n  const userCredential = await UserCredentialImpl._fromIdTokenResponse(\n    auth,\n    operationType,\n    response\n  );\n\n  if (!bypassAuthState) {\n    await auth._updateCurrentUser(userCredential.user);\n  }\n  return userCredential;\n}\n\n/**\n * Asynchronously signs in with the given credentials.\n *\n * @remarks\n * An {@link AuthProvider} can be used to generate the credential.\n *\n * This method is not supported by {@link Auth} instances created with a\n * {@link @firebase/app#FirebaseServerApp}.\n *\n * @param auth - The {@link Auth} instance.\n * @param credential - The auth credential.\n *\n * @public\n */\nexport async function signInWithCredential(\n  auth: Auth,\n  credential: AuthCredential\n): Promise<UserCredential> {\n  return _signInWithCredential(_castAuth(auth), credential);\n}\n\n/**\n * Links the user account with the given credentials.\n *\n * @remarks\n * An {@link AuthProvider} can be used to generate the credential.\n *\n * @param user - The user.\n * @param credential - The auth credential.\n *\n * @public\n */\nexport async function linkWithCredential(\n  user: User,\n  credential: AuthCredential\n): Promise<UserCredential> {\n  const userInternal = getModularInstance(user) as UserInternal;\n\n  await _assertLinkedStatus(false, userInternal, credential.providerId);\n\n  return _link(userInternal, credential);\n}\n\n/**\n * Re-authenticates a user using a fresh credential.\n *\n * @remarks\n * Use before operations such as {@link updatePassword} that require tokens from recent sign-in\n * attempts. This method can be used to recover from a `CREDENTIAL_TOO_OLD_LOGIN_AGAIN` error\n * or a `TOKEN_EXPIRED` error.\n *\n * This method is not supported on any {@link User} signed in by {@link Auth} instances\n * created with a {@link @firebase/app#FirebaseServerApp}.\n *\n * @param user - The user.\n * @param credential - The auth credential.\n *\n * @public\n */\nexport async function reauthenticateWithCredential(\n  user: User,\n  credential: AuthCredential\n): Promise<UserCredential> {\n  return _reauthenticate(getModularInstance(user) as UserInternal, credential);\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary,\n  _performSignInRequest\n} from '../index';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { Auth } from '../../model/public_types';\n\nexport interface SignInWithCustomTokenRequest {\n  token: string;\n  returnSecureToken: boolean;\n  tenantId?: string;\n}\n\nexport interface SignInWithCustomTokenResponse extends IdTokenResponse {}\n\nexport async function signInWithCustomToken(\n  auth: Auth,\n  request: SignInWithCustomTokenRequest\n): Promise<SignInWithCustomTokenResponse> {\n  return _performSignInRequest<\n    SignInWithCustomTokenRequest,\n    SignInWithCustomTokenResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_CUSTOM_TOKEN,\n    _addTidIfNecessary(auth, request)\n  );\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Auth, UserCredential } from '../../model/public_types';\n\nimport { signInWithCustomToken as getIdTokenResponse } from '../../api/authentication/custom_token';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { UserCredentialImpl } from '../user/user_credential_impl';\nimport { _castAuth } from '../auth/auth_impl';\nimport { OperationType } from '../../model/enums';\nimport { _isFirebaseServerApp } from '@firebase/app';\nimport { _serverAppCurrentUserOperationNotSupportedError } from '../../core/util/assert';\n/**\n * Asynchronously signs in using a custom token.\n *\n * @remarks\n * Custom tokens are used to integrate Firebase Auth with existing auth systems, and must\n * be generated by an auth backend using the\n * {@link https://firebase.google.com/docs/reference/admin/node/admin.auth.Auth#createcustomtoken | createCustomToken}\n * method in the {@link https://firebase.google.com/docs/auth/admin | Admin SDK} .\n *\n * Fails with an error if the token is invalid, expired, or not accepted by the Firebase Auth service.\n *\n * This method is not supported by {@link Auth} instances created with a\n * {@link @firebase/app#FirebaseServerApp}.\n *\n * @param auth - The {@link Auth} instance.\n * @param customToken - The custom token to sign in with.\n *\n * @public\n */\nexport async function signInWithCustomToken(\n  auth: Auth,\n  customToken: string\n): Promise<UserCredential> {\n  if (_isFirebaseServerApp(auth.app)) {\n    return Promise.reject(\n      _serverAppCurrentUserOperationNotSupportedError(auth)\n    );\n  }\n  const authInternal = _castAuth(auth);\n  const response: IdTokenResponse = await getIdTokenResponse(authInternal, {\n    token: customToken,\n    returnSecureToken: true\n  });\n  const cred = await UserCredentialImpl._fromIdTokenResponse(\n    authInternal,\n    OperationType.SIGN_IN,\n    response\n  );\n  await authInternal._updateCurrentUser(cred.user);\n  return cred;\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FactorId,\n  MultiFactorInfo,\n  PhoneMultiFactorInfo,\n  TotpMultiFactorInfo\n} from '../model/public_types';\nimport {\n  PhoneMfaEnrollment,\n  MfaEnrollment,\n  TotpMfaEnrollment\n} from '../api/account_management/mfa';\nimport { AuthErrorCode } from '../core/errors';\nimport { _fail } from '../core/util/assert';\nimport { AuthInternal } from '../model/auth';\n\nexport abstract class MultiFactorInfoImpl implements MultiFactorInfo {\n  readonly uid: string;\n  readonly displayName?: string | null;\n  readonly enrollmentTime: string;\n\n  protected constructor(readonly factorId: FactorId, response: MfaEnrollment) {\n    this.uid = response.mfaEnrollmentId;\n    this.enrollmentTime = new Date(response.enrolledAt).toUTCString();\n    this.displayName = response.displayName;\n  }\n\n  static _fromServerResponse(\n    auth: AuthInternal,\n    enrollment: MfaEnrollment\n  ): MultiFactorInfoImpl {\n    if ('phoneInfo' in enrollment) {\n      return PhoneMultiFactorInfoImpl._fromServerResponse(auth, enrollment);\n    } else if ('totpInfo' in enrollment) {\n      return TotpMultiFactorInfoImpl._fromServerResponse(auth, enrollment);\n    }\n    return _fail(auth, AuthErrorCode.INTERNAL_ERROR);\n  }\n}\n\nexport class PhoneMultiFactorInfoImpl\n  extends MultiFactorInfoImpl\n  implements PhoneMultiFactorInfo\n{\n  readonly phoneNumber: string;\n\n  private constructor(response: PhoneMfaEnrollment) {\n    super(FactorId.PHONE, response);\n    this.phoneNumber = response.phoneInfo;\n  }\n\n  static _fromServerResponse(\n    _auth: AuthInternal,\n    enrollment: MfaEnrollment\n  ): PhoneMultiFactorInfoImpl {\n    return new PhoneMultiFactorInfoImpl(enrollment as PhoneMfaEnrollment);\n  }\n}\nexport class TotpMultiFactorInfoImpl\n  extends MultiFactorInfoImpl\n  implements TotpMultiFactorInfo\n{\n  private constructor(response: TotpMfaEnrollment) {\n    super(FactorId.TOTP, response);\n  }\n\n  static _fromServerResponse(\n    _auth: AuthInternal,\n    enrollment: MfaEnrollment\n  ): TotpMultiFactorInfoImpl {\n    return new TotpMultiFactorInfoImpl(enrollment as TotpMfaEnrollment);\n  }\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ActionCodeSettings, Auth } from '../../model/public_types';\n\nimport { GetOobCodeRequest } from '../../api/authentication/email_and_password';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from '../util/assert';\n\nexport function _setActionCodeSettingsOnRequest(\n  auth: Auth,\n  request: GetOobCodeRequest,\n  actionCodeSettings: ActionCodeSettings\n): void {\n  _assert(\n    actionCodeSettings.url?.length > 0,\n    auth,\n    AuthErrorCode.INVALID_CONTINUE_URI\n  );\n  _assert(\n    typeof actionCodeSettings.dynamicLinkDomain === 'undefined' ||\n      actionCodeSettings.dynamicLinkDomain.length > 0,\n    auth,\n    AuthErrorCode.INVALID_DYNAMIC_LINK_DOMAIN\n  );\n\n  request.continueUrl = actionCodeSettings.url;\n  request.dynamicLinkDomain = actionCodeSettings.dynamicLinkDomain;\n  request.canHandleCodeInApp = actionCodeSettings.handleCodeInApp;\n\n  if (actionCodeSettings.iOS) {\n    _assert(\n      actionCodeSettings.iOS.bundleId.length > 0,\n      auth,\n      AuthErrorCode.MISSING_IOS_BUNDLE_ID\n    );\n    request.iOSBundleId = actionCodeSettings.iOS.bundleId;\n  }\n\n  if (actionCodeSettings.android) {\n    _assert(\n      actionCodeSettings.android.packageName.length > 0,\n      auth,\n      AuthErrorCode.MISSING_ANDROID_PACKAGE_NAME\n    );\n    request.androidInstallApp = actionCodeSettings.android.installApp;\n    request.androidMinimumVersionCode =\n      actionCodeSettings.android.minimumVersion;\n    request.androidPackageName = actionCodeSettings.android.packageName;\n  }\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ActionCodeInfo,\n  ActionCodeOperation,\n  ActionCodeSettings,\n  Auth,\n  UserCredential\n} from '../../model/public_types';\n\nimport * as account from '../../api/account_management/email_and_password';\nimport * as authentication from '../../api/authentication/email_and_password';\nimport { signUp, SignUpRequest } from '../../api/authentication/sign_up';\nimport { MultiFactorInfoImpl } from '../../mfa/mfa_info';\nimport { EmailAuthProvider } from '../providers/email';\nimport { UserCredentialImpl } from '../user/user_credential_impl';\nimport {\n  _assert,\n  _serverAppCurrentUserOperationNotSupportedError\n} from '../util/assert';\nimport { _setActionCodeSettingsOnRequest } from './action_code_settings';\nimport { signInWithCredential } from './credential';\nimport { _castAuth } from '../auth/auth_impl';\nimport { AuthErrorCode } from '../errors';\nimport { getModularInstance } from '@firebase/util';\nimport { OperationType } from '../../model/enums';\nimport { handleRecaptchaFlow } from '../../platform_browser/recaptcha/recaptcha_enterprise_verifier';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { RecaptchaActionName, RecaptchaClientType } from '../../api';\nimport { _isFirebaseServerApp } from '@firebase/app';\n\n/**\n * Updates the password policy cached in the {@link Auth} instance if a policy is already\n * cached for the project or tenant.\n *\n * @remarks\n * We only fetch the password policy if the password did not meet policy requirements and\n * there is an existing policy cached. A developer must call validatePassword at least\n * once for the cache to be automatically updated.\n *\n * @param auth - The {@link Auth} instance.\n *\n * @private\n */\nasync function recachePasswordPolicy(auth: Auth): Promise<void> {\n  const authInternal = _castAuth(auth);\n  if (authInternal._getPasswordPolicyInternal()) {\n    await authInternal._updatePasswordPolicy();\n  }\n}\n\n/**\n * Sends a password reset email to the given email address. This method does not throw an error when\n * there's no user account with the given email address and\n * {@link https://cloud.google.com/identity-platform/docs/admin/email-enumeration-protection | Email Enumeration Protection}\n * is enabled.\n *\n * @remarks\n * To complete the password reset, call {@link confirmPasswordReset} with the code supplied in\n * the email sent to the user, along with the new password specified by the user.\n *\n * @example\n * ```javascript\n * const actionCodeSettings = {\n *   url: 'https://www.example.com/?email=user@example.com',\n *   iOS: {\n *      bundleId: 'com.example.ios'\n *   },\n *   android: {\n *     packageName: 'com.example.android',\n *     installApp: true,\n *     minimumVersion: '12'\n *   },\n *   handleCodeInApp: true\n * };\n * await sendPasswordResetEmail(auth, 'user@example.com', actionCodeSettings);\n * // Obtain code from user.\n * await confirmPasswordReset('user@example.com', code);\n * ```\n *\n * @param auth - The {@link Auth} instance.\n * @param email - The user's email address.\n * @param actionCodeSettings - The {@link ActionCodeSettings}.\n *\n * @public\n */\nexport async function sendPasswordResetEmail(\n  auth: Auth,\n  email: string,\n  actionCodeSettings?: ActionCodeSettings\n): Promise<void> {\n  const authInternal = _castAuth(auth);\n  const request: authentication.PasswordResetRequest = {\n    requestType: ActionCodeOperation.PASSWORD_RESET,\n    email,\n    clientType: RecaptchaClientType.WEB\n  };\n  if (actionCodeSettings) {\n    _setActionCodeSettingsOnRequest(authInternal, request, actionCodeSettings);\n  }\n  await handleRecaptchaFlow(\n    authInternal,\n    request,\n    RecaptchaActionName.GET_OOB_CODE,\n    authentication.sendPasswordResetEmail\n  );\n}\n\n/**\n * Completes the password reset process, given a confirmation code and new password.\n *\n * @param auth - The {@link Auth} instance.\n * @param oobCode - A confirmation code sent to the user.\n * @param newPassword - The new password.\n *\n * @public\n */\nexport async function confirmPasswordReset(\n  auth: Auth,\n  oobCode: string,\n  newPassword: string\n): Promise<void> {\n  await account\n    .resetPassword(getModularInstance(auth), {\n      oobCode,\n      newPassword\n    })\n    .catch(async error => {\n      if (\n        error.code ===\n        `auth/${AuthErrorCode.PASSWORD_DOES_NOT_MEET_REQUIREMENTS}`\n      ) {\n        void recachePasswordPolicy(auth);\n      }\n\n      throw error;\n    });\n  // Do not return the email.\n}\n\n/**\n * Applies a verification code sent to the user by email or other out-of-band mechanism.\n *\n * @param auth - The {@link Auth} instance.\n * @param oobCode - A verification code sent to the user.\n *\n * @public\n */\nexport async function applyActionCode(\n  auth: Auth,\n  oobCode: string\n): Promise<void> {\n  await account.applyActionCode(getModularInstance(auth), { oobCode });\n}\n\n/**\n * Checks a verification code sent to the user by email or other out-of-band mechanism.\n *\n * @returns metadata about the code.\n *\n * @param auth - The {@link Auth} instance.\n * @param oobCode - A verification code sent to the user.\n *\n * @public\n */\nexport async function checkActionCode(\n  auth: Auth,\n  oobCode: string\n): Promise<ActionCodeInfo> {\n  const authModular = getModularInstance(auth);\n  const response = await account.resetPassword(authModular, { oobCode });\n\n  // Email could be empty only if the request type is EMAIL_SIGNIN or\n  // VERIFY_AND_CHANGE_EMAIL.\n  // New email should not be empty if the request type is\n  // VERIFY_AND_CHANGE_EMAIL.\n  // Multi-factor info could not be empty if the request type is\n  // REVERT_SECOND_FACTOR_ADDITION.\n  const operation = response.requestType;\n  _assert(operation, authModular, AuthErrorCode.INTERNAL_ERROR);\n  switch (operation) {\n    case ActionCodeOperation.EMAIL_SIGNIN:\n      break;\n    case ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL:\n      _assert(response.newEmail, authModular, AuthErrorCode.INTERNAL_ERROR);\n      break;\n    case ActionCodeOperation.REVERT_SECOND_FACTOR_ADDITION:\n      _assert(response.mfaInfo, authModular, AuthErrorCode.INTERNAL_ERROR);\n    // fall through\n    default:\n      _assert(response.email, authModular, AuthErrorCode.INTERNAL_ERROR);\n  }\n\n  // The multi-factor info for revert second factor addition\n  let multiFactorInfo: MultiFactorInfoImpl | null = null;\n  if (response.mfaInfo) {\n    multiFactorInfo = MultiFactorInfoImpl._fromServerResponse(\n      _castAuth(authModular),\n      response.mfaInfo\n    );\n  }\n\n  return {\n    data: {\n      email:\n        (response.requestType === ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL\n          ? response.newEmail\n          : response.email) || null,\n      previousEmail:\n        (response.requestType === ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL\n          ? response.email\n          : response.newEmail) || null,\n      multiFactorInfo\n    },\n    operation\n  };\n}\n\n/**\n * Checks a password reset code sent to the user by email or other out-of-band mechanism.\n *\n * @returns the user's email address if valid.\n *\n * @param auth - The {@link Auth} instance.\n * @param code - A verification code sent to the user.\n *\n * @public\n */\nexport async function verifyPasswordResetCode(\n  auth: Auth,\n  code: string\n): Promise<string> {\n  const { data } = await checkActionCode(getModularInstance(auth), code);\n  // Email should always be present since a code was sent to it\n  return data.email!;\n}\n\n/**\n * Creates a new user account associated with the specified email address and password.\n *\n * @remarks\n * On successful creation of the user account, this user will also be signed in to your application.\n *\n * User account creation can fail if the account already exists or the password is invalid.\n *\n * This method is not supported on {@link Auth} instances created with a\n * {@link @firebase/app#FirebaseServerApp}.\n *\n * Note: The email address acts as a unique identifier for the user and enables an email-based\n * password reset. This function will create a new user account and set the initial user password.\n *\n * @param auth - The {@link Auth} instance.\n * @param email - The user's email address.\n * @param password - The user's chosen password.\n *\n * @public\n */\nexport async function createUserWithEmailAndPassword(\n  auth: Auth,\n  email: string,\n  password: string\n): Promise<UserCredential> {\n  if (_isFirebaseServerApp(auth.app)) {\n    return Promise.reject(\n      _serverAppCurrentUserOperationNotSupportedError(auth)\n    );\n  }\n  const authInternal = _castAuth(auth);\n  const request: SignUpRequest = {\n    returnSecureToken: true,\n    email,\n    password,\n    clientType: RecaptchaClientType.WEB\n  };\n  const signUpResponse: Promise<IdTokenResponse> = handleRecaptchaFlow(\n    authInternal,\n    request,\n    RecaptchaActionName.SIGN_UP_PASSWORD,\n    signUp\n  );\n  const response = await signUpResponse.catch(error => {\n    if (\n      error.code === `auth/${AuthErrorCode.PASSWORD_DOES_NOT_MEET_REQUIREMENTS}`\n    ) {\n      void recachePasswordPolicy(auth);\n    }\n\n    throw error;\n  });\n\n  const userCredential = await UserCredentialImpl._fromIdTokenResponse(\n    authInternal,\n    OperationType.SIGN_IN,\n    response\n  );\n  await authInternal._updateCurrentUser(userCredential.user);\n\n  return userCredential;\n}\n\n/**\n * Asynchronously signs in using an email and password.\n *\n * @remarks\n * Fails with an error if the email address and password do not match. When\n * {@link https://cloud.google.com/identity-platform/docs/admin/email-enumeration-protection | Email Enumeration Protection}\n * is enabled, this method fails with \"auth/invalid-credential\" in case of an invalid\n * email/password.\n *\n * This method is not supported on {@link Auth} instances created with a\n * {@link @firebase/app#FirebaseServerApp}.\n *\n * Note: The user's password is NOT the password used to access the user's email account. The\n * email address serves as a unique identifier for the user, and the password is used to access\n * the user's account in your Firebase project. See also: {@link createUserWithEmailAndPassword}.\n *\n *\n * @param auth - The {@link Auth} instance.\n * @param email - The users email address.\n * @param password - The users password.\n *\n * @public\n */\nexport function signInWithEmailAndPassword(\n  auth: Auth,\n  email: string,\n  password: string\n): Promise<UserCredential> {\n  if (_isFirebaseServerApp(auth.app)) {\n    return Promise.reject(\n      _serverAppCurrentUserOperationNotSupportedError(auth)\n    );\n  }\n  return signInWithCredential(\n    getModularInstance(auth),\n    EmailAuthProvider.credential(email, password)\n  ).catch(async error => {\n    if (\n      error.code === `auth/${AuthErrorCode.PASSWORD_DOES_NOT_MEET_REQUIREMENTS}`\n    ) {\n      void recachePasswordPolicy(auth);\n    }\n\n    throw error;\n  });\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ActionCodeOperation,\n  ActionCodeSettings,\n  Auth,\n  UserCredential\n} from '../../model/public_types';\n\nimport * as api from '../../api/authentication/email_and_password';\nimport { ActionCodeURL } from '../action_code_url';\nimport { EmailAuthProvider } from '../providers/email';\nimport { _getCurrentUrl } from '../util/location';\nimport { _setActionCodeSettingsOnRequest } from './action_code_settings';\nimport { signInWithCredential } from './credential';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from '../util/assert';\nimport { getModularInstance } from '@firebase/util';\nimport { _castAuth } from '../auth/auth_impl';\nimport { handleRecaptchaFlow } from '../../platform_browser/recaptcha/recaptcha_enterprise_verifier';\nimport { RecaptchaActionName, RecaptchaClientType } from '../../api';\nimport { _isFirebaseServerApp } from '@firebase/app';\nimport { _serverAppCurrentUserOperationNotSupportedError } from '../../core/util/assert';\n\n/**\n * Sends a sign-in email link to the user with the specified email.\n *\n * @remarks\n * The sign-in operation has to always be completed in the app unlike other out of band email\n * actions (password reset and email verifications). This is because, at the end of the flow,\n * the user is expected to be signed in and their Auth state persisted within the app.\n *\n * To complete sign in with the email link, call {@link signInWithEmailLink} with the email\n * address and the email link supplied in the email sent to the user.\n *\n * @example\n * ```javascript\n * const actionCodeSettings = {\n *   url: 'https://www.example.com/?email=user@example.com',\n *   iOS: {\n *      bundleId: 'com.example.ios'\n *   },\n *   android: {\n *     packageName: 'com.example.android',\n *     installApp: true,\n *     minimumVersion: '12'\n *   },\n *   handleCodeInApp: true\n * };\n * await sendSignInLinkToEmail(auth, 'user@example.com', actionCodeSettings);\n * // Obtain emailLink from the user.\n * if(isSignInWithEmailLink(auth, emailLink)) {\n *   await signInWithEmailLink(auth, 'user@example.com', emailLink);\n * }\n * ```\n *\n * @param authInternal - The {@link Auth} instance.\n * @param email - The user's email address.\n * @param actionCodeSettings - The {@link ActionCodeSettings}.\n *\n * @public\n */\nexport async function sendSignInLinkToEmail(\n  auth: Auth,\n  email: string,\n  actionCodeSettings: ActionCodeSettings\n): Promise<void> {\n  const authInternal = _castAuth(auth);\n  const request: api.EmailSignInRequest = {\n    requestType: ActionCodeOperation.EMAIL_SIGNIN,\n    email,\n    clientType: RecaptchaClientType.WEB\n  };\n  function setActionCodeSettings(\n    request: api.EmailSignInRequest,\n    actionCodeSettings: ActionCodeSettings\n  ): void {\n    _assert(\n      actionCodeSettings.handleCodeInApp,\n      authInternal,\n      AuthErrorCode.ARGUMENT_ERROR\n    );\n    if (actionCodeSettings) {\n      _setActionCodeSettingsOnRequest(\n        authInternal,\n        request,\n        actionCodeSettings\n      );\n    }\n  }\n  setActionCodeSettings(request, actionCodeSettings);\n  await handleRecaptchaFlow(\n    authInternal,\n    request,\n    RecaptchaActionName.GET_OOB_CODE,\n    api.sendSignInLinkToEmail\n  );\n}\n\n/**\n * Checks if an incoming link is a sign-in with email link suitable for {@link signInWithEmailLink}.\n *\n * @param auth - The {@link Auth} instance.\n * @param emailLink - The link sent to the user's email address.\n *\n * @public\n */\nexport function isSignInWithEmailLink(auth: Auth, emailLink: string): boolean {\n  const actionCodeUrl = ActionCodeURL.parseLink(emailLink);\n  return actionCodeUrl?.operation === ActionCodeOperation.EMAIL_SIGNIN;\n}\n\n/**\n * Asynchronously signs in using an email and sign-in email link.\n *\n * @remarks\n * If no link is passed, the link is inferred from the current URL.\n *\n * Fails with an error if the email address is invalid or OTP in email link expires.\n *\n * This method is not supported by {@link Auth} instances created with a\n * {@link @firebase/app#FirebaseServerApp}.\n *\n * Note: Confirm the link is a sign-in email link before calling this method firebase.auth.Auth.isSignInWithEmailLink.\n *\n * @example\n * ```javascript\n * const actionCodeSettings = {\n *   url: 'https://www.example.com/?email=user@example.com',\n *   iOS: {\n *      bundleId: 'com.example.ios'\n *   },\n *   android: {\n *     packageName: 'com.example.android',\n *     installApp: true,\n *     minimumVersion: '12'\n *   },\n *   handleCodeInApp: true\n * };\n * await sendSignInLinkToEmail(auth, 'user@example.com', actionCodeSettings);\n * // Obtain emailLink from the user.\n * if(isSignInWithEmailLink(auth, emailLink)) {\n *   await signInWithEmailLink(auth, 'user@example.com', emailLink);\n * }\n * ```\n *\n *\n * @param auth - The {@link Auth} instance.\n * @param email - The user's email address.\n * @param emailLink - The link sent to the user's email address.\n *\n * @public\n */\nexport async function signInWithEmailLink(\n  auth: Auth,\n  email: string,\n  emailLink?: string\n): Promise<UserCredential> {\n  if (_isFirebaseServerApp(auth.app)) {\n    return Promise.reject(\n      _serverAppCurrentUserOperationNotSupportedError(auth)\n    );\n  }\n  const authModular = getModularInstance(auth);\n  const credential = EmailAuthProvider.credentialWithLink(\n    email,\n    emailLink || _getCurrentUrl()\n  );\n  // Check if the tenant ID in the email link matches the tenant ID on Auth\n  // instance.\n  _assert(\n    credential._tenantId === (authModular.tenantId || null),\n    authModular,\n    AuthErrorCode.TENANT_ID_MISMATCH\n  );\n  return signInWithCredential(authModular, credential);\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary,\n  _performApiRequest\n} from '../index';\nimport { Auth } from '../../model/public_types';\n\nexport interface CreateAuthUriRequest {\n  identifier: string;\n  continueUri: string;\n  tenantId?: string;\n}\n\nexport interface CreateAuthUriResponse {\n  signinMethods: string[];\n}\n\nexport async function createAuthUri(\n  auth: Auth,\n  request: CreateAuthUriRequest\n): Promise<CreateAuthUriResponse> {\n  return _performApiRequest<CreateAuthUriRequest, CreateAuthUriResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.CREATE_AUTH_URI,\n    _addTidIfNecessary(auth, request)\n  );\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ActionCodeOperation,\n  ActionCodeSettings,\n  Auth,\n  User\n} from '../../model/public_types';\n\nimport {\n  createAuthUri,\n  CreateAuthUriRequest\n} from '../../api/authentication/create_auth_uri';\nimport * as api from '../../api/authentication/email_and_password';\nimport { UserInternal } from '../../model/user';\nimport { _getCurrentUrl, _isHttpOrHttps } from '../util/location';\nimport { _setActionCodeSettingsOnRequest } from './action_code_settings';\nimport { getModularInstance } from '@firebase/util';\n\n/**\n * Gets the list of possible sign in methods for the given email address. This method returns an\n * empty list when\n * {@link https://cloud.google.com/identity-platform/docs/admin/email-enumeration-protection | Email Enumeration Protection}\n * is enabled, irrespective of the number of authentication methods available for the given email.\n *\n * @remarks\n * This is useful to differentiate methods of sign-in for the same provider, eg.\n * {@link EmailAuthProvider} which has 2 methods of sign-in,\n * {@link SignInMethod}.EMAIL_PASSWORD and\n * {@link SignInMethod}.EMAIL_LINK.\n *\n * @param auth - The {@link Auth} instance.\n * @param email - The user's email address.\n *\n * Deprecated. Migrating off of this method is recommended as a security best-practice.\n * Learn more in the Identity Platform documentation for\n * {@link https://cloud.google.com/identity-platform/docs/admin/email-enumeration-protection | Email Enumeration Protection}.\n * @public\n */\nexport async function fetchSignInMethodsForEmail(\n  auth: Auth,\n  email: string\n): Promise<string[]> {\n  // createAuthUri returns an error if continue URI is not http or https.\n  // For environments like Cordova, Chrome extensions, native frameworks, file\n  // systems, etc, use http://localhost as continue URL.\n  const continueUri = _isHttpOrHttps() ? _getCurrentUrl() : 'http://localhost';\n  const request: CreateAuthUriRequest = {\n    identifier: email,\n    continueUri\n  };\n\n  const { signinMethods } = await createAuthUri(\n    getModularInstance(auth),\n    request\n  );\n\n  return signinMethods || [];\n}\n\n/**\n * Sends a verification email to a user.\n *\n * @remarks\n * The verification process is completed by calling {@link applyActionCode}.\n *\n * @example\n * ```javascript\n * const actionCodeSettings = {\n *   url: 'https://www.example.com/?email=user@example.com',\n *   iOS: {\n *      bundleId: 'com.example.ios'\n *   },\n *   android: {\n *     packageName: 'com.example.android',\n *     installApp: true,\n *     minimumVersion: '12'\n *   },\n *   handleCodeInApp: true\n * };\n * await sendEmailVerification(user, actionCodeSettings);\n * // Obtain code from the user.\n * await applyActionCode(auth, code);\n * ```\n *\n * @param user - The user.\n * @param actionCodeSettings - The {@link ActionCodeSettings}.\n *\n * @public\n */\nexport async function sendEmailVerification(\n  user: User,\n  actionCodeSettings?: ActionCodeSettings | null\n): Promise<void> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  const idToken = await user.getIdToken();\n  const request: api.VerifyEmailRequest = {\n    requestType: ActionCodeOperation.VERIFY_EMAIL,\n    idToken\n  };\n  if (actionCodeSettings) {\n    _setActionCodeSettingsOnRequest(\n      userInternal.auth,\n      request,\n      actionCodeSettings\n    );\n  }\n\n  const { email } = await api.sendEmailVerification(userInternal.auth, request);\n\n  if (email !== user.email) {\n    await user.reload();\n  }\n}\n\n/**\n * Sends a verification email to a new email address.\n *\n * @remarks\n * The user's email will be updated to the new one after being verified.\n *\n * If you have a custom email action handler, you can complete the verification process by calling\n * {@link applyActionCode}.\n *\n * @example\n * ```javascript\n * const actionCodeSettings = {\n *   url: 'https://www.example.com/?email=user@example.com',\n *   iOS: {\n *      bundleId: 'com.example.ios'\n *   },\n *   android: {\n *     packageName: 'com.example.android',\n *     installApp: true,\n *     minimumVersion: '12'\n *   },\n *   handleCodeInApp: true\n * };\n * await verifyBeforeUpdateEmail(user, 'newemail@example.com', actionCodeSettings);\n * // Obtain code from the user.\n * await applyActionCode(auth, code);\n * ```\n *\n * @param user - The user.\n * @param newEmail - The new email address to be verified before update.\n * @param actionCodeSettings - The {@link ActionCodeSettings}.\n *\n * @public\n */\nexport async function verifyBeforeUpdateEmail(\n  user: User,\n  newEmail: string,\n  actionCodeSettings?: ActionCodeSettings | null\n): Promise<void> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  const idToken = await user.getIdToken();\n  const request: api.VerifyAndChangeEmailRequest = {\n    requestType: ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL,\n    idToken,\n    newEmail\n  };\n  if (actionCodeSettings) {\n    _setActionCodeSettingsOnRequest(\n      userInternal.auth,\n      request,\n      actionCodeSettings\n    );\n  }\n\n  const { email } = await api.verifyAndChangeEmail(userInternal.auth, request);\n\n  if (email !== user.email) {\n    // If the local copy of the email on user is outdated, reload the\n    // user.\n    await user.reload();\n  }\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Endpoint, HttpMethod, _performApiRequest } from '../index';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { Auth } from '../../model/public_types';\n\nexport interface UpdateProfileRequest {\n  idToken: string;\n  displayName?: string | null;\n  photoUrl?: string | null;\n  returnSecureToken: boolean;\n}\n\nexport interface UpdateProfileResponse extends IdTokenResponse {\n  displayName?: string | null;\n  photoUrl?: string | null;\n}\n\nexport async function updateProfile(\n  auth: Auth,\n  request: UpdateProfileRequest\n): Promise<UpdateProfileResponse> {\n  return _performApiRequest<UpdateProfileRequest, UpdateProfileResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SET_ACCOUNT_INFO,\n    request\n  );\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { User } from '../../model/public_types';\n\nimport {\n  updateEmailPassword as apiUpdateEmailPassword,\n  UpdateEmailPasswordRequest\n} from '../../api/account_management/email_and_password';\nimport { updateProfile as apiUpdateProfile } from '../../api/account_management/profile';\nimport { UserInternal } from '../../model/user';\nimport { _logoutIfInvalidated } from './invalidation';\nimport { getModularInstance } from '@firebase/util';\nimport { ProviderId } from '../../model/enums';\nimport { _isFirebaseServerApp } from '@firebase/app';\nimport { _serverAppCurrentUserOperationNotSupportedError } from '../../core/util/assert';\n\n/**\n * Updates a user's profile data.\n *\n * @param user - The user.\n * @param profile - The profile's `displayName` and `photoURL` to update.\n *\n * @public\n */\nexport async function updateProfile(\n  user: User,\n  {\n    displayName,\n    photoURL: photoUrl\n  }: { displayName?: string | null; photoURL?: string | null }\n): Promise<void> {\n  if (displayName === undefined && photoUrl === undefined) {\n    return;\n  }\n\n  const userInternal = getModularInstance(user) as UserInternal;\n  const idToken = await userInternal.getIdToken();\n  const profileRequest = {\n    idToken,\n    displayName,\n    photoUrl,\n    returnSecureToken: true\n  };\n  const response = await _logoutIfInvalidated(\n    userInternal,\n    apiUpdateProfile(userInternal.auth, profileRequest)\n  );\n\n  userInternal.displayName = response.displayName || null;\n  userInternal.photoURL = response.photoUrl || null;\n\n  // Update the password provider as well\n  const passwordProvider = userInternal.providerData.find(\n    ({ providerId }) => providerId === ProviderId.PASSWORD\n  );\n  if (passwordProvider) {\n    passwordProvider.displayName = userInternal.displayName;\n    passwordProvider.photoURL = userInternal.photoURL;\n  }\n\n  await userInternal._updateTokensIfNecessary(response);\n}\n\n/**\n * Updates the user's email address.\n *\n * @remarks\n * An email will be sent to the original email address (if it was set) that allows to revoke the\n * email address change, in order to protect them from account hijacking.\n *\n * This method is not supported on any {@link User} signed in by {@link Auth} instances\n * created with a {@link @firebase/app#FirebaseServerApp}.\n *\n * Important: this is a security sensitive operation that requires the user to have recently signed\n * in. If this requirement isn't met, ask the user to authenticate again and then call\n * {@link reauthenticateWithCredential}.\n *\n * @param user - The user.\n * @param newEmail - The new email address.\n *\n * Throws \"auth/operation-not-allowed\" error when\n * {@link https://cloud.google.com/identity-platform/docs/admin/email-enumeration-protection | Email Enumeration Protection}\n * is enabled.\n * Deprecated - Use {@link verifyBeforeUpdateEmail} instead.\n *\n * @public\n */\nexport function updateEmail(user: User, newEmail: string): Promise<void> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  if (_isFirebaseServerApp(userInternal.auth.app)) {\n    return Promise.reject(\n      _serverAppCurrentUserOperationNotSupportedError(userInternal.auth)\n    );\n  }\n  return updateEmailOrPassword(userInternal, newEmail, null);\n}\n\n/**\n * Updates the user's password.\n *\n * @remarks\n * Important: this is a security sensitive operation that requires the user to have recently signed\n * in. If this requirement isn't met, ask the user to authenticate again and then call\n * {@link reauthenticateWithCredential}.\n *\n * @param user - The user.\n * @param newPassword - The new password.\n *\n * @public\n */\nexport function updatePassword(user: User, newPassword: string): Promise<void> {\n  return updateEmailOrPassword(\n    getModularInstance(user) as UserInternal,\n    null,\n    newPassword\n  );\n}\n\nasync function updateEmailOrPassword(\n  user: UserInternal,\n  email: string | null,\n  password: string | null\n): Promise<void> {\n  const { auth } = user;\n  const idToken = await user.getIdToken();\n  const request: UpdateEmailPasswordRequest = {\n    idToken,\n    returnSecureToken: true\n  };\n\n  if (email) {\n    request.email = email;\n  }\n\n  if (password) {\n    request.password = password;\n  }\n\n  const response = await _logoutIfInvalidated(\n    user,\n    apiUpdateEmailPassword(auth, request)\n  );\n  await user._updateTokensIfNecessary(response, /* reload */ true);\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AdditionalUserInfo, UserCredential } from '../../model/public_types';\nimport { IdTokenResponse, IdTokenResponseKind } from '../../model/id_token';\nimport { _parseToken } from './id_token_result';\nimport { UserCredentialInternal } from '../../model/user';\nimport { ProviderId } from '../../model/enums';\n\n/**\n * Parse the `AdditionalUserInfo` from the ID token response.\n *\n */\nexport function _fromIdTokenResponse(\n  idTokenResponse?: IdTokenResponse\n): AdditionalUserInfo | null {\n  if (!idTokenResponse) {\n    return null;\n  }\n  const { providerId } = idTokenResponse;\n  const profile = idTokenResponse.rawUserInfo\n    ? JSON.parse(idTokenResponse.rawUserInfo)\n    : {};\n  const isNewUser =\n    idTokenResponse.isNewUser ||\n    idTokenResponse.kind === IdTokenResponseKind.SignupNewUser;\n  if (!providerId && idTokenResponse?.idToken) {\n    const signInProvider = _parseToken(idTokenResponse.idToken)?.firebase?.[\n      'sign_in_provider'\n    ];\n    if (signInProvider) {\n      const filteredProviderId =\n        signInProvider !== ProviderId.ANONYMOUS &&\n        signInProvider !== ProviderId.CUSTOM\n          ? (signInProvider as ProviderId)\n          : null;\n      // Uses generic class in accordance with the legacy SDK.\n      return new GenericAdditionalUserInfo(isNewUser, filteredProviderId);\n    }\n  }\n  if (!providerId) {\n    return null;\n  }\n  switch (providerId) {\n    case ProviderId.FACEBOOK:\n      return new FacebookAdditionalUserInfo(isNewUser, profile);\n    case ProviderId.GITHUB:\n      return new GithubAdditionalUserInfo(isNewUser, profile);\n    case ProviderId.GOOGLE:\n      return new GoogleAdditionalUserInfo(isNewUser, profile);\n    case ProviderId.TWITTER:\n      return new TwitterAdditionalUserInfo(\n        isNewUser,\n        profile,\n        idTokenResponse.screenName || null\n      );\n    case ProviderId.CUSTOM:\n    case ProviderId.ANONYMOUS:\n      return new GenericAdditionalUserInfo(isNewUser, null);\n    default:\n      return new GenericAdditionalUserInfo(isNewUser, providerId, profile);\n  }\n}\n\nclass GenericAdditionalUserInfo implements AdditionalUserInfo {\n  constructor(\n    readonly isNewUser: boolean,\n    readonly providerId: ProviderId | string | null,\n    readonly profile: Record<string, unknown> = {}\n  ) {}\n}\n\nclass FederatedAdditionalUserInfoWithUsername extends GenericAdditionalUserInfo {\n  constructor(\n    isNewUser: boolean,\n    providerId: ProviderId,\n    profile: Record<string, unknown>,\n    readonly username: string | null\n  ) {\n    super(isNewUser, providerId, profile);\n  }\n}\n\nclass FacebookAdditionalUserInfo extends GenericAdditionalUserInfo {\n  constructor(isNewUser: boolean, profile: Record<string, unknown>) {\n    super(isNewUser, ProviderId.FACEBOOK, profile);\n  }\n}\n\nclass GithubAdditionalUserInfo extends FederatedAdditionalUserInfoWithUsername {\n  constructor(isNewUser: boolean, profile: Record<string, unknown>) {\n    super(\n      isNewUser,\n      ProviderId.GITHUB,\n      profile,\n      typeof profile?.login === 'string' ? profile?.login : null\n    );\n  }\n}\n\nclass GoogleAdditionalUserInfo extends GenericAdditionalUserInfo {\n  constructor(isNewUser: boolean, profile: Record<string, unknown>) {\n    super(isNewUser, ProviderId.GOOGLE, profile);\n  }\n}\n\nclass TwitterAdditionalUserInfo extends FederatedAdditionalUserInfoWithUsername {\n  constructor(\n    isNewUser: boolean,\n    profile: Record<string, unknown>,\n    screenName: string | null\n  ) {\n    super(isNewUser, ProviderId.TWITTER, profile, screenName);\n  }\n}\n\n/**\n * Extracts provider specific {@link AdditionalUserInfo} for the given credential.\n *\n * @param userCredential - The user credential.\n *\n * @public\n */\nexport function getAdditionalUserInfo(\n  userCredential: UserCredential\n): AdditionalUserInfo | null {\n  const { user, _tokenResponse } = userCredential as UserCredentialInternal;\n  if (user.isAnonymous && !_tokenResponse) {\n    // Handle the special case where signInAnonymously() gets called twice.\n    // No network call is made so there's nothing to actually fill this in\n    return {\n      providerId: null,\n      isNewUser: false,\n      profile: null\n    };\n  }\n\n  return _fromIdTokenResponse(_tokenResponse);\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getModularInstance } from '@firebase/util';\nimport {\n  Auth,\n  NextOrObserver,\n  Persistence,\n  User,\n  CompleteFn,\n  ErrorFn,\n  Unsubscribe,\n  PasswordValidationStatus\n} from '../model/public_types';\nimport { _initializeRecaptchaConfig } from '../platform_browser/recaptcha/recaptcha_enterprise_verifier';\nimport { _castAuth } from '../core/auth/auth_impl';\n\nexport {\n  debugErrorMap,\n  prodErrorMap,\n  AUTH_ERROR_CODES_MAP_DO_NOT_USE_INTERNALLY as AuthErrorCodes\n} from './errors';\n\n// Non-optional auth methods.\n/**\n * Changes the type of persistence on the {@link Auth} instance for the currently saved\n * `Auth` session and applies this type of persistence for future sign-in requests, including\n * sign-in with redirect requests.\n *\n * @remarks\n * This makes it easy for a user signing in to specify whether their session should be\n * remembered or not. It also makes it easier to never persist the `Auth` state for applications\n * that are shared by other users or have sensitive data.\n *\n * This method does not work in a Node.js environment or with {@link Auth} instances created with a\n * {@link @firebase/app#FirebaseServerApp}.\n *\n * @example\n * ```javascript\n * setPersistence(auth, browserSessionPersistence);\n * ```\n *\n * @param auth - The {@link Auth} instance.\n * @param persistence - The {@link Persistence} to use.\n * @returns A `Promise` that resolves once the persistence change has completed\n *\n * @public\n */\nexport function setPersistence(\n  auth: Auth,\n  persistence: Persistence\n): Promise<void> {\n  return getModularInstance(auth).setPersistence(persistence);\n}\n\n/**\n * Loads the reCAPTCHA configuration into the `Auth` instance.\n *\n * @remarks\n * This will load the reCAPTCHA config, which indicates whether the reCAPTCHA\n * verification flow should be triggered for each auth provider, into the\n * current Auth session.\n *\n * If initializeRecaptchaConfig() is not invoked, the auth flow will always start\n * without reCAPTCHA verification. If the provider is configured to require reCAPTCHA\n * verification, the SDK will transparently load the reCAPTCHA config and restart the\n * auth flows.\n *\n * Thus, by calling this optional method, you will reduce the latency of future auth flows.\n * Loading the reCAPTCHA config early will also enhance the signal collected by reCAPTCHA.\n *\n * This method does not work in a Node.js environment.\n *\n * @example\n * ```javascript\n * initializeRecaptchaConfig(auth);\n * ```\n *\n * @param auth - The {@link Auth} instance.\n *\n * @public\n */\nexport function initializeRecaptchaConfig(auth: Auth): Promise<void> {\n  return _initializeRecaptchaConfig(auth);\n}\n\n/**\n * Validates the password against the password policy configured for the project or tenant.\n *\n * @remarks\n * If no tenant ID is set on the `Auth` instance, then this method will use the password\n * policy configured for the project. Otherwise, this method will use the policy configured\n * for the tenant. If a password policy has not been configured, then the default policy\n * configured for all projects will be used.\n *\n * If an auth flow fails because a submitted password does not meet the password policy\n * requirements and this method has previously been called, then this method will use the\n * most recent policy available when called again.\n *\n * @example\n * ```javascript\n * validatePassword(auth, 'some-password');\n * ```\n *\n * @param auth The {@link Auth} instance.\n * @param password The password to validate.\n *\n * @public\n */\nexport async function validatePassword(\n  auth: Auth,\n  password: string\n): Promise<PasswordValidationStatus> {\n  const authInternal = _castAuth(auth);\n  return authInternal.validatePassword(password);\n}\n\n/**\n * Adds an observer for changes to the signed-in user's ID token.\n *\n * @remarks\n * This includes sign-in, sign-out, and token refresh events.\n * This will not be triggered automatically upon ID token expiration. Use {@link User.getIdToken} to refresh the ID token.\n *\n * @param auth - The {@link Auth} instance.\n * @param nextOrObserver - callback triggered on change.\n * @param error - Deprecated. This callback is never triggered. Errors\n * on signing in/out can be caught in promises returned from\n * sign-in/sign-out functions.\n * @param completed - Deprecated. This callback is never triggered.\n *\n * @public\n */\nexport function onIdTokenChanged(\n  auth: Auth,\n  nextOrObserver: NextOrObserver<User>,\n  error?: ErrorFn,\n  completed?: CompleteFn\n): Unsubscribe {\n  return getModularInstance(auth).onIdTokenChanged(\n    nextOrObserver,\n    error,\n    completed\n  );\n}\n/**\n * Adds a blocking callback that runs before an auth state change\n * sets a new user.\n *\n * @param auth - The {@link Auth} instance.\n * @param callback - callback triggered before new user value is set.\n *   If this throws, it blocks the user from being set.\n * @param onAbort - callback triggered if a later `beforeAuthStateChanged()`\n *   callback throws, allowing you to undo any side effects.\n */\nexport function beforeAuthStateChanged(\n  auth: Auth,\n  callback: (user: User | null) => void | Promise<void>,\n  onAbort?: () => void\n): Unsubscribe {\n  return getModularInstance(auth).beforeAuthStateChanged(callback, onAbort);\n}\n/**\n * Adds an observer for changes to the user's sign-in state.\n *\n * @remarks\n * To keep the old behavior, see {@link onIdTokenChanged}.\n *\n * @param auth - The {@link Auth} instance.\n * @param nextOrObserver - callback triggered on change.\n * @param error - Deprecated. This callback is never triggered. Errors\n * on signing in/out can be caught in promises returned from\n * sign-in/sign-out functions.\n * @param completed - Deprecated. This callback is never triggered.\n *\n * @public\n */\nexport function onAuthStateChanged(\n  auth: Auth,\n  nextOrObserver: NextOrObserver<User>,\n  error?: ErrorFn,\n  completed?: CompleteFn\n): Unsubscribe {\n  return getModularInstance(auth).onAuthStateChanged(\n    nextOrObserver,\n    error,\n    completed\n  );\n}\n/**\n * Sets the current language to the default device/browser preference.\n *\n * @param auth - The {@link Auth} instance.\n *\n * @public\n */\nexport function useDeviceLanguage(auth: Auth): void {\n  getModularInstance(auth).useDeviceLanguage();\n}\n/**\n * Asynchronously sets the provided user as {@link Auth.currentUser} on the\n * {@link Auth} instance.\n *\n * @remarks\n * A new instance copy of the user provided will be made and set as currentUser.\n *\n * This will trigger {@link onAuthStateChanged} and {@link onIdTokenChanged} listeners\n * like other sign in methods.\n *\n * The operation fails with an error if the user to be updated belongs to a different Firebase\n * project.\n *\n * This method is not supported by {@link Auth} instances created with a\n * {@link @firebase/app#FirebaseServerApp}.\n *\n * @param auth - The {@link Auth} instance.\n * @param user - The new {@link User}.\n *\n * @public\n */\nexport function updateCurrentUser(\n  auth: Auth,\n  user: User | null\n): Promise<void> {\n  return getModularInstance(auth).updateCurrentUser(user);\n}\n/**\n * Signs out the current user.\n *\n * @remarks\n * This method is not supported by {@link Auth} instances created with a\n * {@link @firebase/app#FirebaseServerApp}.\n *\n * @param auth - The {@link Auth} instance.\n *\n * @public\n */\nexport function signOut(auth: Auth): Promise<void> {\n  return getModularInstance(auth).signOut();\n}\n\n/**\n * Revokes the given access token. Currently only supports Apple OAuth access tokens.\n *\n * @param auth - The {@link Auth} instance.\n * @param token - The Apple OAuth access token.\n *\n * @public\n */\nexport function revokeAccessToken(auth: Auth, token: string): Promise<void> {\n  const authInternal = _castAuth(auth);\n  return authInternal.revokeAccessToken(token);\n}\n\nexport { initializeAuth } from './auth/initialize';\nexport { connectAuthEmulator } from './auth/emulator';\n\n// credentials\nexport { AuthCredential } from './credentials';\nexport { EmailAuthCredential } from './credentials/email';\nexport { OAuthCredential } from './credentials/oauth';\nexport { PhoneAuthCredential } from './credentials/phone';\n\n// persistence\nexport { inMemoryPersistence } from './persistence/in_memory';\n\n// providers\nexport { EmailAuthProvider } from './providers/email';\nexport { FacebookAuthProvider } from './providers/facebook';\nexport { CustomParameters } from './providers/federated';\nexport { GoogleAuthProvider } from './providers/google';\nexport { GithubAuthProvider } from './providers/github';\nexport { OAuthProvider, OAuthCredentialOptions } from './providers/oauth';\nexport { SAMLAuthProvider } from './providers/saml';\nexport { TwitterAuthProvider } from './providers/twitter';\n\n// strategies\nexport { signInAnonymously } from './strategies/anonymous';\nexport {\n  signInWithCredential,\n  linkWithCredential,\n  reauthenticateWithCredential\n} from './strategies/credential';\nexport { signInWithCustomToken } from './strategies/custom_token';\nexport {\n  sendPasswordResetEmail,\n  confirmPasswordReset,\n  applyActionCode,\n  checkActionCode,\n  verifyPasswordResetCode,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword\n} from './strategies/email_and_password';\nexport {\n  sendSignInLinkToEmail,\n  isSignInWithEmailLink,\n  signInWithEmailLink\n} from './strategies/email_link';\nexport {\n  fetchSignInMethodsForEmail,\n  sendEmailVerification,\n  verifyBeforeUpdateEmail\n} from './strategies/email';\n\n// core\nexport { ActionCodeURL, parseActionCodeURL } from './action_code_url';\n\n// user\nexport {\n  updateProfile,\n  updateEmail,\n  updatePassword\n} from './user/account_info';\nexport { getIdToken, getIdTokenResult } from './user/id_token_result';\nexport { unlink } from './user/link_unlink';\nexport { getAdditionalUserInfo } from './user/additional_user_info';\n\n// Non-optional user methods.\nexport { reload } from './user/reload';\n/**\n * Deletes and signs out the user.\n *\n * @remarks\n * Important: this is a security-sensitive operation that requires the user to have recently\n * signed in. If this requirement isn't met, ask the user to authenticate again and then call\n * {@link reauthenticateWithCredential}.\n *\n * @param user - The user.\n *\n * @public\n */\nexport async function deleteUser(user: User): Promise<void> {\n  return getModularInstance(user).delete();\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserInternal } from '../model/user';\nimport { MultiFactorSession } from '../model/public_types';\n\nexport const enum MultiFactorSessionType {\n  ENROLL = 'enroll',\n  SIGN_IN = 'signin'\n}\n\ninterface SerializedMultiFactorSession {\n  multiFactorSession: {\n    idToken?: string;\n    pendingCredential?: string;\n  };\n}\n\nexport class MultiFactorSessionImpl implements MultiFactorSession {\n  private constructor(\n    readonly type: MultiFactorSessionType,\n    readonly credential: string,\n    readonly user?: UserInternal\n  ) {}\n\n  static _fromIdtoken(\n    idToken: string,\n    user?: UserInternal\n  ): MultiFactorSessionImpl {\n    return new MultiFactorSessionImpl(\n      MultiFactorSessionType.ENROLL,\n      idToken,\n      user\n    );\n  }\n\n  static _fromMfaPendingCredential(\n    mfaPendingCredential: string\n  ): MultiFactorSessionImpl {\n    return new MultiFactorSessionImpl(\n      MultiFactorSessionType.SIGN_IN,\n      mfaPendingCredential\n    );\n  }\n\n  toJSON(): SerializedMultiFactorSession {\n    const key =\n      this.type === MultiFactorSessionType.ENROLL\n        ? 'idToken'\n        : 'pendingCredential';\n    return {\n      multiFactorSession: {\n        [key]: this.credential\n      }\n    };\n  }\n\n  static fromJSON(\n    obj: Partial<SerializedMultiFactorSession>\n  ): MultiFactorSessionImpl | null {\n    if (obj?.multiFactorSession) {\n      if (obj.multiFactorSession?.pendingCredential) {\n        return MultiFactorSessionImpl._fromMfaPendingCredential(\n          obj.multiFactorSession.pendingCredential\n        );\n      } else if (obj.multiFactorSession?.idToken) {\n        return MultiFactorSessionImpl._fromIdtoken(\n          obj.multiFactorSession.idToken\n        );\n      }\n    }\n    return null;\n  }\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Auth,\n  MultiFactorResolver,\n  UserCredential,\n  MultiFactorError\n} from '../model/public_types';\n\nimport { _castAuth } from '../core/auth/auth_impl';\nimport { AuthErrorCode } from '../core/errors';\nimport { UserCredentialImpl } from '../core/user/user_credential_impl';\nimport { _assert, _fail } from '../core/util/assert';\nimport { UserCredentialInternal } from '../model/user';\nimport { MultiFactorAssertionImpl } from './mfa_assertion';\nimport { MultiFactorError as MultiFactorErrorInternal } from './mfa_error';\nimport { MultiFactorInfoImpl } from './mfa_info';\nimport { MultiFactorSessionImpl } from './mfa_session';\nimport { getModularInstance } from '@firebase/util';\nimport { OperationType } from '../model/enums';\n\nexport class MultiFactorResolverImpl implements MultiFactorResolver {\n  private constructor(\n    readonly session: MultiFactorSessionImpl,\n    readonly hints: MultiFactorInfoImpl[],\n    private readonly signInResolver: (\n      assertion: MultiFactorAssertionImpl\n    ) => Promise<UserCredentialInternal>\n  ) {}\n\n  /** @internal */\n  static _fromError(\n    authExtern: Auth,\n    error: MultiFactorErrorInternal\n  ): MultiFactorResolverImpl {\n    const auth = _castAuth(authExtern);\n    const serverResponse = error.customData._serverResponse;\n    const hints = (serverResponse.mfaInfo || []).map(enrollment =>\n      MultiFactorInfoImpl._fromServerResponse(auth, enrollment)\n    );\n\n    _assert(\n      serverResponse.mfaPendingCredential,\n      auth,\n      AuthErrorCode.INTERNAL_ERROR\n    );\n    const session = MultiFactorSessionImpl._fromMfaPendingCredential(\n      serverResponse.mfaPendingCredential\n    );\n\n    return new MultiFactorResolverImpl(\n      session,\n      hints,\n      async (\n        assertion: MultiFactorAssertionImpl\n      ): Promise<UserCredentialInternal> => {\n        const mfaResponse = await assertion._process(auth, session);\n        // Clear out the unneeded fields from the old login response\n        delete serverResponse.mfaInfo;\n        delete serverResponse.mfaPendingCredential;\n\n        // Use in the new token & refresh token in the old response\n        const idTokenResponse = {\n          ...serverResponse,\n          idToken: mfaResponse.idToken,\n          refreshToken: mfaResponse.refreshToken\n        };\n\n        // TODO: we should collapse this switch statement into UserCredentialImpl._forOperation and have it support the SIGN_IN case\n        switch (error.operationType) {\n          case OperationType.SIGN_IN:\n            const userCredential =\n              await UserCredentialImpl._fromIdTokenResponse(\n                auth,\n                error.operationType,\n                idTokenResponse\n              );\n            await auth._updateCurrentUser(userCredential.user);\n            return userCredential;\n          case OperationType.REAUTHENTICATE:\n            _assert(error.user, auth, AuthErrorCode.INTERNAL_ERROR);\n            return UserCredentialImpl._forOperation(\n              error.user,\n              error.operationType,\n              idTokenResponse\n            );\n          default:\n            _fail(auth, AuthErrorCode.INTERNAL_ERROR);\n        }\n      }\n    );\n  }\n\n  async resolveSignIn(\n    assertionExtern: MultiFactorAssertionImpl\n  ): Promise<UserCredential> {\n    const assertion = assertionExtern as MultiFactorAssertionImpl;\n    return this.signInResolver(assertion);\n  }\n}\n\n/**\n * Provides a {@link MultiFactorResolver} suitable for completion of a\n * multi-factor flow.\n *\n * @param auth - The {@link Auth} instance.\n * @param error - The {@link MultiFactorError} raised during a sign-in, or\n * reauthentication operation.\n *\n * @public\n */\nexport function getMultiFactorResolver(\n  auth: Auth,\n  error: MultiFactorError\n): MultiFactorResolver {\n  const authModular = getModularInstance(auth);\n  const errorInternal = error as MultiFactorErrorInternal;\n  _assert(\n    error.customData.operationType,\n    authModular,\n    AuthErrorCode.ARGUMENT_ERROR\n  );\n  _assert(\n    errorInternal.customData._serverResponse?.mfaPendingCredential,\n    authModular,\n    AuthErrorCode.ARGUMENT_ERROR\n  );\n\n  return MultiFactorResolverImpl._fromError(authModular, errorInternal);\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary,\n  _performApiRequest\n} from '../index';\nimport { SignInWithPhoneNumberRequest } from '../authentication/sms';\nimport { FinalizeMfaResponse } from '../authentication/mfa';\nimport { AuthInternal } from '../../model/auth';\n\n/**\n * MFA Info as returned by the API.\n */\ninterface BaseMfaEnrollment {\n  mfaEnrollmentId: string;\n  enrolledAt: number;\n  displayName?: string;\n}\n\n/**\n * An MFA provided by SMS verification.\n */\nexport interface PhoneMfaEnrollment extends BaseMfaEnrollment {\n  phoneInfo: string;\n}\n\n/**\n * An MFA provided by TOTP (Time-based One Time Password).\n */\nexport interface TotpMfaEnrollment extends BaseMfaEnrollment {}\n\n/**\n * MfaEnrollment can be any subtype of BaseMfaEnrollment, currently only PhoneMfaEnrollment and TotpMfaEnrollment are supported.\n */\nexport type MfaEnrollment = PhoneMfaEnrollment | TotpMfaEnrollment;\n\nexport interface StartPhoneMfaEnrollmentRequest {\n  idToken: string;\n  phoneEnrollmentInfo: {\n    phoneNumber: string;\n    recaptchaToken: string;\n  };\n  tenantId?: string;\n}\n\nexport interface StartPhoneMfaEnrollmentResponse {\n  phoneSessionInfo: {\n    sessionInfo: string;\n  };\n}\n\nexport function startEnrollPhoneMfa(\n  auth: AuthInternal,\n  request: StartPhoneMfaEnrollmentRequest\n): Promise<StartPhoneMfaEnrollmentResponse> {\n  return _performApiRequest<\n    StartPhoneMfaEnrollmentRequest,\n    StartPhoneMfaEnrollmentResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.START_MFA_ENROLLMENT,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport interface FinalizePhoneMfaEnrollmentRequest {\n  idToken: string;\n  phoneVerificationInfo: SignInWithPhoneNumberRequest;\n  displayName?: string | null;\n  tenantId?: string;\n}\n\nexport interface FinalizePhoneMfaEnrollmentResponse\n  extends FinalizeMfaResponse {}\n\nexport function finalizeEnrollPhoneMfa(\n  auth: AuthInternal,\n  request: FinalizePhoneMfaEnrollmentRequest\n): Promise<FinalizePhoneMfaEnrollmentResponse> {\n  return _performApiRequest<\n    FinalizePhoneMfaEnrollmentRequest,\n    FinalizePhoneMfaEnrollmentResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.FINALIZE_MFA_ENROLLMENT,\n    _addTidIfNecessary(auth, request)\n  );\n}\nexport interface StartTotpMfaEnrollmentRequest {\n  idToken: string;\n  totpEnrollmentInfo: {};\n  tenantId?: string;\n}\n\nexport interface StartTotpMfaEnrollmentResponse {\n  totpSessionInfo: {\n    sharedSecretKey: string;\n    verificationCodeLength: number;\n    hashingAlgorithm: string;\n    periodSec: number;\n    sessionInfo: string;\n    finalizeEnrollmentTime: number;\n  };\n}\n\nexport function startEnrollTotpMfa(\n  auth: AuthInternal,\n  request: StartTotpMfaEnrollmentRequest\n): Promise<StartTotpMfaEnrollmentResponse> {\n  return _performApiRequest<\n    StartTotpMfaEnrollmentRequest,\n    StartTotpMfaEnrollmentResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.START_MFA_ENROLLMENT,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport interface TotpVerificationInfo {\n  sessionInfo: string;\n  verificationCode: string;\n}\nexport interface FinalizeTotpMfaEnrollmentRequest {\n  idToken: string;\n  totpVerificationInfo: TotpVerificationInfo;\n  displayName?: string | null;\n  tenantId?: string;\n}\n\nexport interface FinalizeTotpMfaEnrollmentResponse\n  extends FinalizeMfaResponse {}\n\nexport function finalizeEnrollTotpMfa(\n  auth: AuthInternal,\n  request: FinalizeTotpMfaEnrollmentRequest\n): Promise<FinalizeTotpMfaEnrollmentResponse> {\n  return _performApiRequest<\n    FinalizeTotpMfaEnrollmentRequest,\n    FinalizeTotpMfaEnrollmentResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.FINALIZE_MFA_ENROLLMENT,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport interface WithdrawMfaRequest {\n  idToken: string;\n  mfaEnrollmentId: string;\n  tenantId?: string;\n}\n\nexport interface WithdrawMfaResponse extends FinalizeMfaResponse {}\n\nexport function withdrawMfa(\n  auth: AuthInternal,\n  request: WithdrawMfaRequest\n): Promise<WithdrawMfaResponse> {\n  return _performApiRequest<WithdrawMfaRequest, WithdrawMfaResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.WITHDRAW_MFA,\n    _addTidIfNecessary(auth, request)\n  );\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  MultiFactorAssertion,\n  MultiFactorInfo,\n  MultiFactorSession,\n  MultiFactorUser,\n  User\n} from '../model/public_types';\n\nimport { withdrawMfa } from '../api/account_management/mfa';\nimport { _logoutIfInvalidated } from '../core/user/invalidation';\nimport { UserInternal } from '../model/user';\nimport { MultiFactorAssertionImpl } from './mfa_assertion';\nimport { MultiFactorInfoImpl } from './mfa_info';\nimport { MultiFactorSessionImpl } from './mfa_session';\nimport { getModularInstance } from '@firebase/util';\n\nexport class MultiFactorUserImpl implements MultiFactorUser {\n  enrolledFactors: MultiFactorInfo[] = [];\n\n  private constructor(readonly user: UserInternal) {\n    user._onReload(userInfo => {\n      if (userInfo.mfaInfo) {\n        this.enrolledFactors = userInfo.mfaInfo.map(enrollment =>\n          MultiFactorInfoImpl._fromServerResponse(user.auth, enrollment)\n        );\n      }\n    });\n  }\n\n  static _fromUser(user: UserInternal): MultiFactorUserImpl {\n    return new MultiFactorUserImpl(user);\n  }\n\n  async getSession(): Promise<MultiFactorSession> {\n    return MultiFactorSessionImpl._fromIdtoken(\n      await this.user.getIdToken(),\n      this.user\n    );\n  }\n\n  async enroll(\n    assertionExtern: MultiFactorAssertion,\n    displayName?: string | null\n  ): Promise<void> {\n    const assertion = assertionExtern as MultiFactorAssertionImpl;\n    const session = (await this.getSession()) as MultiFactorSessionImpl;\n    const finalizeMfaResponse = await _logoutIfInvalidated(\n      this.user,\n      assertion._process(this.user.auth, session, displayName)\n    );\n    // New tokens will be issued after enrollment of the new second factors.\n    // They need to be updated on the user.\n    await this.user._updateTokensIfNecessary(finalizeMfaResponse);\n    // The user needs to be reloaded to get the new multi-factor information\n    // from server. USER_RELOADED event will be triggered and `enrolledFactors`\n    // will be updated.\n    return this.user.reload();\n  }\n\n  async unenroll(infoOrUid: MultiFactorInfo | string): Promise<void> {\n    const mfaEnrollmentId =\n      typeof infoOrUid === 'string' ? infoOrUid : infoOrUid.uid;\n    const idToken = await this.user.getIdToken();\n    try {\n      const idTokenResponse = await _logoutIfInvalidated(\n        this.user,\n        withdrawMfa(this.user.auth, {\n          idToken,\n          mfaEnrollmentId\n        })\n      );\n      // Remove the second factor from the user's list.\n      this.enrolledFactors = this.enrolledFactors.filter(\n        ({ uid }) => uid !== mfaEnrollmentId\n      );\n      // Depending on whether the backend decided to revoke the user's session,\n      // the tokenResponse may be empty. If the tokens were not updated (and they\n      // are now invalid), reloading the user will discover this and invalidate\n      // the user's state accordingly.\n      await this.user._updateTokensIfNecessary(idTokenResponse);\n      await this.user.reload();\n    } catch (e) {\n      throw e;\n    }\n  }\n}\n\nconst multiFactorUserCache = new WeakMap<User, MultiFactorUser>();\n\n/**\n * The {@link MultiFactorUser} corresponding to the user.\n *\n * @remarks\n * This is used to access all multi-factor properties and operations related to the user.\n *\n * @param user - The user.\n *\n * @public\n */\nexport function multiFactor(user: User): MultiFactorUser {\n  const userModular = getModularInstance(user);\n  if (!multiFactorUserCache.has(userModular)) {\n    multiFactorUserCache.set(\n      userModular,\n      MultiFactorUserImpl._fromUser(userModular as UserInternal)\n    );\n  }\n  return multiFactorUserCache.get(userModular)!;\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Persistence } from '../../model/public_types';\n\nexport const enum PersistenceType {\n  SESSION = 'SESSION',\n  LOCAL = 'LOCAL',\n  NONE = 'NONE'\n}\n\nexport type PersistedBlob = Record<string, unknown>;\n\nexport interface Instantiator<T> {\n  (blob: PersistedBlob): T;\n}\n\nexport type PersistenceValue = PersistedBlob | string;\n\nexport const STORAGE_AVAILABLE_KEY = '__sak';\n\nexport interface StorageEventListener {\n  (value: PersistenceValue | null): void;\n}\n\nexport interface PersistenceInternal extends Persistence {\n  type: PersistenceType;\n  _isAvailable(): Promise<boolean>;\n  _set(key: string, value: PersistenceValue): Promise<void>;\n  _get<T extends PersistenceValue>(key: string): Promise<T | null>;\n  _remove(key: string): Promise<void>;\n  _addListener(key: string, listener: StorageEventListener): void;\n  _removeListener(key: string, listener: StorageEventListener): void;\n  // Should this persistence allow migration up the chosen hierarchy?\n  _shouldAllowMigration?: boolean;\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  PersistenceValue,\n  STORAGE_AVAILABLE_KEY,\n  PersistenceType\n} from '../../core/persistence';\n\n// There are two different browser persistence types: local and session.\n// Both have the same implementation but use a different underlying storage\n// object.\n\nexport abstract class BrowserPersistenceClass {\n  protected constructor(\n    protected readonly storageRetriever: () => Storage,\n    readonly type: PersistenceType\n  ) {}\n\n  _isAvailable(): Promise<boolean> {\n    try {\n      if (!this.storage) {\n        return Promise.resolve(false);\n      }\n      this.storage.setItem(STORAGE_AVAILABLE_KEY, '1');\n      this.storage.removeItem(STORAGE_AVAILABLE_KEY);\n      return Promise.resolve(true);\n    } catch {\n      return Promise.resolve(false);\n    }\n  }\n\n  _set(key: string, value: PersistenceValue): Promise<void> {\n    this.storage.setItem(key, JSON.stringify(value));\n    return Promise.resolve();\n  }\n\n  _get<T extends PersistenceValue>(key: string): Promise<T | null> {\n    const json = this.storage.getItem(key);\n    return Promise.resolve(json ? JSON.parse(json) : null);\n  }\n\n  _remove(key: string): Promise<void> {\n    this.storage.removeItem(key);\n    return Promise.resolve();\n  }\n\n  protected get storage(): Storage {\n    return this.storageRetriever();\n  }\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Persistence } from '../../model/public_types';\n\nimport { getUA } from '@firebase/util';\nimport {\n  _isSafari,\n  _isIOS,\n  _isIframe,\n  _isMobileBrowser,\n  _isIE10\n} from '../../core/util/browser';\nimport {\n  PersistenceInternal as InternalPersistence,\n  PersistenceType,\n  PersistenceValue,\n  StorageEventListener\n} from '../../core/persistence';\nimport { BrowserPersistenceClass } from './browser';\n\nfunction _iframeCannotSyncWebStorage(): boolean {\n  const ua = getUA();\n  return _isSafari(ua) || _isIOS(ua);\n}\n\n// The polling period in case events are not supported\nexport const _POLLING_INTERVAL_MS = 1000;\n\n// The IE 10 localStorage cross tab synchronization delay in milliseconds\nconst IE10_LOCAL_STORAGE_SYNC_DELAY = 10;\n\nclass BrowserLocalPersistence\n  extends BrowserPersistenceClass\n  implements InternalPersistence\n{\n  static type: 'LOCAL' = 'LOCAL';\n\n  constructor() {\n    super(() => window.localStorage, PersistenceType.LOCAL);\n  }\n\n  private readonly boundEventHandler = (\n    event: StorageEvent,\n    poll?: boolean\n  ): void => this.onStorageEvent(event, poll);\n  private readonly listeners: Record<string, Set<StorageEventListener>> = {};\n  private readonly localCache: Record<string, string | null> = {};\n  // setTimeout return value is platform specific\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private pollTimer: any | null = null;\n\n  // Safari or iOS browser and embedded in an iframe.\n  private readonly safariLocalStorageNotSynced =\n    _iframeCannotSyncWebStorage() && _isIframe();\n  // Whether to use polling instead of depending on window events\n  private readonly fallbackToPolling = _isMobileBrowser();\n  readonly _shouldAllowMigration = true;\n\n  private forAllChangedKeys(\n    cb: (key: string, oldValue: string | null, newValue: string | null) => void\n  ): void {\n    // Check all keys with listeners on them.\n    for (const key of Object.keys(this.listeners)) {\n      // Get value from localStorage.\n      const newValue = this.storage.getItem(key);\n      const oldValue = this.localCache[key];\n      // If local map value does not match, trigger listener with storage event.\n      // Differentiate this simulated event from the real storage event.\n      if (newValue !== oldValue) {\n        cb(key, oldValue, newValue);\n      }\n    }\n  }\n\n  private onStorageEvent(event: StorageEvent, poll = false): void {\n    // Key would be null in some situations, like when localStorage is cleared\n    if (!event.key) {\n      this.forAllChangedKeys(\n        (key: string, _oldValue: string | null, newValue: string | null) => {\n          this.notifyListeners(key, newValue);\n        }\n      );\n      return;\n    }\n\n    const key = event.key;\n\n    // Check the mechanism how this event was detected.\n    // The first event will dictate the mechanism to be used.\n    if (poll) {\n      // Environment detects storage changes via polling.\n      // Remove storage event listener to prevent possible event duplication.\n      this.detachListener();\n    } else {\n      // Environment detects storage changes via storage event listener.\n      // Remove polling listener to prevent possible event duplication.\n      this.stopPolling();\n    }\n\n    // Safari embedded iframe. Storage event will trigger with the delta\n    // changes but no changes will be applied to the iframe localStorage.\n    if (this.safariLocalStorageNotSynced) {\n      // Get current iframe page value.\n      const storedValue = this.storage.getItem(key);\n      // Value not synchronized, synchronize manually.\n      if (event.newValue !== storedValue) {\n        if (event.newValue !== null) {\n          // Value changed from current value.\n          this.storage.setItem(key, event.newValue);\n        } else {\n          // Current value deleted.\n          this.storage.removeItem(key);\n        }\n      } else if (this.localCache[key] === event.newValue && !poll) {\n        // Already detected and processed, do not trigger listeners again.\n        return;\n      }\n    }\n\n    const triggerListeners = (): void => {\n      // Keep local map up to date in case storage event is triggered before\n      // poll.\n      const storedValue = this.storage.getItem(key);\n      if (!poll && this.localCache[key] === storedValue) {\n        // Real storage event which has already been detected, do nothing.\n        // This seems to trigger in some IE browsers for some reason.\n        return;\n      }\n      this.notifyListeners(key, storedValue);\n    };\n\n    const storedValue = this.storage.getItem(key);\n    if (\n      _isIE10() &&\n      storedValue !== event.newValue &&\n      event.newValue !== event.oldValue\n    ) {\n      // IE 10 has this weird bug where a storage event would trigger with the\n      // correct key, oldValue and newValue but localStorage.getItem(key) does\n      // not yield the updated value until a few milliseconds. This ensures\n      // this recovers from that situation.\n      setTimeout(triggerListeners, IE10_LOCAL_STORAGE_SYNC_DELAY);\n    } else {\n      triggerListeners();\n    }\n  }\n\n  private notifyListeners(key: string, value: string | null): void {\n    this.localCache[key] = value;\n    const listeners = this.listeners[key];\n    if (listeners) {\n      for (const listener of Array.from(listeners)) {\n        listener(value ? JSON.parse(value) : value);\n      }\n    }\n  }\n\n  private startPolling(): void {\n    this.stopPolling();\n\n    this.pollTimer = setInterval(() => {\n      this.forAllChangedKeys(\n        (key: string, oldValue: string | null, newValue: string | null) => {\n          this.onStorageEvent(\n            new StorageEvent('storage', {\n              key,\n              oldValue,\n              newValue\n            }),\n            /* poll */ true\n          );\n        }\n      );\n    }, _POLLING_INTERVAL_MS);\n  }\n\n  private stopPolling(): void {\n    if (this.pollTimer) {\n      clearInterval(this.pollTimer);\n      this.pollTimer = null;\n    }\n  }\n\n  private attachListener(): void {\n    window.addEventListener('storage', this.boundEventHandler);\n  }\n\n  private detachListener(): void {\n    window.removeEventListener('storage', this.boundEventHandler);\n  }\n\n  _addListener(key: string, listener: StorageEventListener): void {\n    if (Object.keys(this.listeners).length === 0) {\n      // Whether browser can detect storage event when it had already been pushed to the background.\n      // This may happen in some mobile browsers. A localStorage change in the foreground window\n      // will not be detected in the background window via the storage event.\n      // This was detected in iOS 7.x mobile browsers\n      if (this.fallbackToPolling) {\n        this.startPolling();\n      } else {\n        this.attachListener();\n      }\n    }\n    if (!this.listeners[key]) {\n      this.listeners[key] = new Set();\n      // Populate the cache to avoid spuriously triggering on first poll.\n      this.localCache[key] = this.storage.getItem(key);\n    }\n    this.listeners[key].add(listener);\n  }\n\n  _removeListener(key: string, listener: StorageEventListener): void {\n    if (this.listeners[key]) {\n      this.listeners[key].delete(listener);\n\n      if (this.listeners[key].size === 0) {\n        delete this.listeners[key];\n      }\n    }\n\n    if (Object.keys(this.listeners).length === 0) {\n      this.detachListener();\n      this.stopPolling();\n    }\n  }\n\n  // Update local cache on base operations:\n\n  async _set(key: string, value: PersistenceValue): Promise<void> {\n    await super._set(key, value);\n    this.localCache[key] = JSON.stringify(value);\n  }\n\n  async _get<T extends PersistenceValue>(key: string): Promise<T | null> {\n    const value = await super._get<T>(key);\n    this.localCache[key] = JSON.stringify(value);\n    return value;\n  }\n\n  async _remove(key: string): Promise<void> {\n    await super._remove(key);\n    delete this.localCache[key];\n  }\n}\n\n/**\n * An implementation of {@link Persistence} of type `LOCAL` using `localStorage`\n * for the underlying storage.\n *\n * @public\n */\nexport const browserLocalPersistence: Persistence = BrowserLocalPersistence;\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Persistence } from '../../model/public_types';\n\nimport {\n  PersistenceInternal as InternalPersistence,\n  PersistenceType,\n  StorageEventListener\n} from '../../core/persistence';\nimport { BrowserPersistenceClass } from './browser';\n\nclass BrowserSessionPersistence\n  extends BrowserPersistenceClass\n  implements InternalPersistence\n{\n  static type: 'SESSION' = 'SESSION';\n\n  constructor() {\n    super(() => window.sessionStorage, PersistenceType.SESSION);\n  }\n\n  _addListener(_key: string, _listener: StorageEventListener): void {\n    // Listeners are not supported for session storage since it cannot be shared across windows\n    return;\n  }\n\n  _removeListener(_key: string, _listener: StorageEventListener): void {\n    // Listeners are not supported for session storage since it cannot be shared across windows\n    return;\n  }\n}\n\n/**\n * An implementation of {@link Persistence} of `SESSION` using `sessionStorage`\n * for the underlying storage.\n *\n * @public\n */\nexport const browserSessionPersistence: Persistence = BrowserSessionPersistence;\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** TODO: remove this once tslib has a polyfill for Promise.allSettled */\ninterface PromiseFulfilledResult<T> {\n  fulfilled: true;\n  value: T;\n}\n\ninterface PromiseRejectedResult {\n  fulfilled: false;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  reason: any;\n}\n\nexport type PromiseSettledResult<T> =\n  | PromiseFulfilledResult<T>\n  | PromiseRejectedResult;\n\n/**\n * Shim for Promise.allSettled, note the slightly different format of `fulfilled` vs `status`.\n *\n * @param promises - Array of promises to wait on.\n */\nexport function _allSettled<T>(\n  promises: Array<Promise<T>>\n): Promise<Array<PromiseSettledResult<T>>> {\n  return Promise.all(\n    promises.map(async promise => {\n      try {\n        const value = await promise;\n        return {\n          fulfilled: true,\n          value\n        } as PromiseFulfilledResult<T>;\n      } catch (reason) {\n        return {\n          fulfilled: false,\n          reason\n        } as PromiseRejectedResult;\n      }\n    })\n  );\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ReceiverHandler,\n  _EventType,\n  _ReceiverResponse,\n  SenderMessageEvent,\n  _Status,\n  _SenderRequest\n} from './index';\nimport { _allSettled } from './promise';\n\n/**\n * Interface class for receiving messages.\n *\n */\nexport class Receiver {\n  private static readonly receivers: Receiver[] = [];\n  private readonly boundEventHandler: EventListener;\n\n  private readonly handlersMap: {\n    // Typescript doesn't have existential types :(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    [eventType: string]: Set<ReceiverHandler<any, any>>;\n  } = {};\n\n  constructor(private readonly eventTarget: EventTarget) {\n    this.boundEventHandler = this.handleEvent.bind(this);\n  }\n\n  /**\n   * Obtain an instance of a Receiver for a given event target, if none exists it will be created.\n   *\n   * @param eventTarget - An event target (such as window or self) through which the underlying\n   * messages will be received.\n   */\n  static _getInstance(eventTarget: EventTarget): Receiver {\n    // The results are stored in an array since objects can't be keys for other\n    // objects. In addition, setting a unique property on an event target as a\n    // hash map key may not be allowed due to CORS restrictions.\n    const existingInstance = this.receivers.find(receiver =>\n      receiver.isListeningto(eventTarget)\n    );\n    if (existingInstance) {\n      return existingInstance;\n    }\n    const newInstance = new Receiver(eventTarget);\n    this.receivers.push(newInstance);\n    return newInstance;\n  }\n\n  private isListeningto(eventTarget: EventTarget): boolean {\n    return this.eventTarget === eventTarget;\n  }\n\n  /**\n   * Fans out a MessageEvent to the appropriate listeners.\n   *\n   * @remarks\n   * Sends an {@link Status.ACK} upon receipt and a {@link Status.DONE} once all handlers have\n   * finished processing.\n   *\n   * @param event - The MessageEvent.\n   *\n   */\n  private async handleEvent<\n    T extends _ReceiverResponse,\n    S extends _SenderRequest\n  >(event: Event): Promise<void> {\n    const messageEvent = event as MessageEvent<SenderMessageEvent<S>>;\n    const { eventId, eventType, data } = messageEvent.data;\n\n    const handlers: Set<ReceiverHandler<T, S>> | undefined =\n      this.handlersMap[eventType];\n    if (!handlers?.size) {\n      return;\n    }\n\n    messageEvent.ports[0].postMessage({\n      status: _Status.ACK,\n      eventId,\n      eventType\n    });\n\n    const promises = Array.from(handlers).map(async handler =>\n      handler(messageEvent.origin, data)\n    );\n    const response = await _allSettled(promises);\n    messageEvent.ports[0].postMessage({\n      status: _Status.DONE,\n      eventId,\n      eventType,\n      response\n    });\n  }\n\n  /**\n   * Subscribe an event handler for a particular event.\n   *\n   * @param eventType - Event name to subscribe to.\n   * @param eventHandler - The event handler which should receive the events.\n   *\n   */\n  _subscribe<T extends _ReceiverResponse, S extends _SenderRequest>(\n    eventType: _EventType,\n    eventHandler: ReceiverHandler<T, S>\n  ): void {\n    if (Object.keys(this.handlersMap).length === 0) {\n      this.eventTarget.addEventListener('message', this.boundEventHandler);\n    }\n\n    if (!this.handlersMap[eventType]) {\n      this.handlersMap[eventType] = new Set();\n    }\n\n    this.handlersMap[eventType].add(eventHandler);\n  }\n\n  /**\n   * Unsubscribe an event handler from a particular event.\n   *\n   * @param eventType - Event name to unsubscribe from.\n   * @param eventHandler - Optinoal event handler, if none provided, unsubscribe all handlers on this event.\n   *\n   */\n  _unsubscribe<T extends _ReceiverResponse, S extends _SenderRequest>(\n    eventType: _EventType,\n    eventHandler?: ReceiverHandler<T, S>\n  ): void {\n    if (this.handlersMap[eventType] && eventHandler) {\n      this.handlersMap[eventType].delete(eventHandler);\n    }\n    if (!eventHandler || this.handlersMap[eventType].size === 0) {\n      delete this.handlersMap[eventType];\n    }\n\n    if (Object.keys(this.handlersMap).length === 0) {\n      this.eventTarget.removeEventListener('message', this.boundEventHandler);\n    }\n  }\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function _generateEventId(prefix = '', digits = 10): string {\n  let random = '';\n  for (let i = 0; i < digits; i++) {\n    random += Math.floor(Math.random() * 10);\n  }\n  return prefix + random;\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _generateEventId } from '../../core/util/event_id';\nimport {\n  _SenderRequest,\n  _EventType,\n  ReceiverMessageEvent,\n  _MessageError,\n  SenderMessageEvent,\n  _Status,\n  _ReceiverMessageResponse,\n  _ReceiverResponse,\n  _TimeoutDuration\n} from './index';\n\ninterface MessageHandler {\n  messageChannel: MessageChannel;\n  onMessage: EventListenerOrEventListenerObject;\n}\n\n/**\n * Interface for sending messages and waiting for a completion response.\n *\n */\nexport class Sender {\n  private readonly handlers = new Set<MessageHandler>();\n\n  constructor(private readonly target: ServiceWorker) {}\n\n  /**\n   * Unsubscribe the handler and remove it from our tracking Set.\n   *\n   * @param handler - The handler to unsubscribe.\n   */\n  private removeMessageHandler(handler: MessageHandler): void {\n    if (handler.messageChannel) {\n      handler.messageChannel.port1.removeEventListener(\n        'message',\n        handler.onMessage\n      );\n      handler.messageChannel.port1.close();\n    }\n    this.handlers.delete(handler);\n  }\n\n  /**\n   * Send a message to the Receiver located at {@link target}.\n   *\n   * @remarks\n   * We'll first wait a bit for an ACK , if we get one we will wait significantly longer until the\n   * receiver has had a chance to fully process the event.\n   *\n   * @param eventType - Type of event to send.\n   * @param data - The payload of the event.\n   * @param timeout - Timeout for waiting on an ACK from the receiver.\n   *\n   * @returns An array of settled promises from all the handlers that were listening on the receiver.\n   */\n  async _send<T extends _ReceiverResponse, S extends _SenderRequest>(\n    eventType: _EventType,\n    data: S,\n    timeout = _TimeoutDuration.ACK\n  ): Promise<_ReceiverMessageResponse<T>> {\n    const messageChannel =\n      typeof MessageChannel !== 'undefined' ? new MessageChannel() : null;\n    if (!messageChannel) {\n      throw new Error(_MessageError.CONNECTION_UNAVAILABLE);\n    }\n    // Node timers and browser timers return fundamentally different types.\n    // We don't actually care what the value is but TS won't accept unknown and\n    // we can't cast properly in both environments.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let completionTimer: any;\n    let handler: MessageHandler;\n    return new Promise<_ReceiverMessageResponse<T>>((resolve, reject) => {\n      const eventId = _generateEventId('', 20);\n      messageChannel.port1.start();\n      const ackTimer = setTimeout(() => {\n        reject(new Error(_MessageError.UNSUPPORTED_EVENT));\n      }, timeout);\n      handler = {\n        messageChannel,\n        onMessage(event: Event): void {\n          const messageEvent = event as MessageEvent<ReceiverMessageEvent<T>>;\n          if (messageEvent.data.eventId !== eventId) {\n            return;\n          }\n          switch (messageEvent.data.status) {\n            case _Status.ACK:\n              // The receiver should ACK first.\n              clearTimeout(ackTimer);\n              completionTimer = setTimeout(() => {\n                reject(new Error(_MessageError.TIMEOUT));\n              }, _TimeoutDuration.COMPLETION);\n              break;\n            case _Status.DONE:\n              // Once the receiver's handlers are finished we will get the results.\n              clearTimeout(completionTimer);\n              resolve(messageEvent.data.response);\n              break;\n            default:\n              clearTimeout(ackTimer);\n              clearTimeout(completionTimer);\n              reject(new Error(_MessageError.INVALID_RESPONSE));\n              break;\n          }\n        }\n      };\n      this.handlers.add(handler);\n      messageChannel.port1.addEventListener('message', handler.onMessage);\n      this.target.postMessage(\n        {\n          eventType,\n          eventId,\n          data\n        } as SenderMessageEvent<S>,\n        [messageChannel.port2]\n      );\n    }).finally(() => {\n      if (handler) {\n        this.removeMessageHandler(handler);\n      }\n    });\n  }\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Recaptcha, GreCAPTCHATopLevel } from './recaptcha/recaptcha';\n\n/**\n * A specialized window type that melds the normal window type plus the\n * various bits we need. The three different blocks that are &'d together\n * cant be defined in the same block together.\n */\nexport type AuthWindow = {\n  // Standard window types\n  [T in keyof Window]: Window[T];\n} & {\n  // Any known / named properties we want to add\n  grecaptcha?: Recaptcha | GreCAPTCHATopLevel;\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  ___jsl?: Record<string, any>;\n  gapi?: typeof gapi;\n} & {\n  // A final catch-all for callbacks (which will have random names) that\n  // we will stick on the window.\n  [callback: string]: (...args: unknown[]) => void;\n};\n\n/**\n * Lazy accessor for window, since the compat layer won't tree shake this out,\n * we need to make sure not to mess with window unless we have to\n */\nexport function _window(): AuthWindow {\n  return window as unknown as AuthWindow;\n}\n\nexport function _setWindowLocation(url: string): void {\n  _window().location.href = url;\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _window } from '../auth_window';\n\nexport function _isWorker(): boolean {\n  return (\n    typeof _window()['WorkerGlobalScope'] !== 'undefined' &&\n    typeof _window()['importScripts'] === 'function'\n  );\n}\n\nexport async function _getActiveServiceWorker(): Promise<ServiceWorker | null> {\n  if (!navigator?.serviceWorker) {\n    return null;\n  }\n  try {\n    const registration = await navigator.serviceWorker.ready;\n    return registration.active;\n  } catch {\n    return null;\n  }\n}\n\nexport function _getServiceWorkerController(): ServiceWorker | null {\n  return navigator?.serviceWorker?.controller || null;\n}\n\nexport function _getWorkerGlobalScope(): ServiceWorker | null {\n  return _isWorker() ? (self as unknown as ServiceWorker) : null;\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Persistence } from '../../model/public_types';\nimport {\n  PersistedBlob,\n  PersistenceInternal as InternalPersistence,\n  PersistenceType,\n  PersistenceValue,\n  StorageEventListener,\n  STORAGE_AVAILABLE_KEY\n} from '../../core/persistence/';\nimport {\n  _EventType,\n  _PingResponse,\n  KeyChangedResponse,\n  KeyChangedRequest,\n  PingRequest,\n  _TimeoutDuration\n} from '../messagechannel/index';\nimport { Receiver } from '../messagechannel/receiver';\nimport { Sender } from '../messagechannel/sender';\nimport {\n  _isWorker,\n  _getActiveServiceWorker,\n  _getServiceWorkerController,\n  _getWorkerGlobalScope\n} from '../util/worker';\n\nexport const DB_NAME = 'firebaseLocalStorageDb';\nconst DB_VERSION = 1;\nconst DB_OBJECTSTORE_NAME = 'firebaseLocalStorage';\nconst DB_DATA_KEYPATH = 'fbase_key';\n\ninterface DBObject {\n  [DB_DATA_KEYPATH]: string;\n  value: PersistedBlob;\n}\n\n/**\n * Promise wrapper for IDBRequest\n *\n * Unfortunately we can't cleanly extend Promise<T> since promises are not callable in ES6\n *\n */\nclass DBPromise<T> {\n  constructor(private readonly request: IDBRequest) {}\n\n  toPromise(): Promise<T> {\n    return new Promise<T>((resolve, reject) => {\n      this.request.addEventListener('success', () => {\n        resolve(this.request.result);\n      });\n      this.request.addEventListener('error', () => {\n        reject(this.request.error);\n      });\n    });\n  }\n}\n\nfunction getObjectStore(db: IDBDatabase, isReadWrite: boolean): IDBObjectStore {\n  return db\n    .transaction([DB_OBJECTSTORE_NAME], isReadWrite ? 'readwrite' : 'readonly')\n    .objectStore(DB_OBJECTSTORE_NAME);\n}\n\nexport async function _clearDatabase(db: IDBDatabase): Promise<void> {\n  const objectStore = getObjectStore(db, true);\n  return new DBPromise<void>(objectStore.clear()).toPromise();\n}\n\nexport function _deleteDatabase(): Promise<void> {\n  const request = indexedDB.deleteDatabase(DB_NAME);\n  return new DBPromise<void>(request).toPromise();\n}\n\nexport function _openDatabase(): Promise<IDBDatabase> {\n  const request = indexedDB.open(DB_NAME, DB_VERSION);\n  return new Promise((resolve, reject) => {\n    request.addEventListener('error', () => {\n      reject(request.error);\n    });\n\n    request.addEventListener('upgradeneeded', () => {\n      const db = request.result;\n\n      try {\n        db.createObjectStore(DB_OBJECTSTORE_NAME, { keyPath: DB_DATA_KEYPATH });\n      } catch (e) {\n        reject(e);\n      }\n    });\n\n    request.addEventListener('success', async () => {\n      const db: IDBDatabase = request.result;\n      // Strange bug that occurs in Firefox when multiple tabs are opened at the\n      // same time. The only way to recover seems to be deleting the database\n      // and re-initializing it.\n      // https://github.com/firebase/firebase-js-sdk/issues/634\n\n      if (!db.objectStoreNames.contains(DB_OBJECTSTORE_NAME)) {\n        // Need to close the database or else you get a `blocked` event\n        db.close();\n        await _deleteDatabase();\n        resolve(await _openDatabase());\n      } else {\n        resolve(db);\n      }\n    });\n  });\n}\n\nexport async function _putObject(\n  db: IDBDatabase,\n  key: string,\n  value: PersistenceValue | string\n): Promise<void> {\n  const request = getObjectStore(db, true).put({\n    [DB_DATA_KEYPATH]: key,\n    value\n  });\n  return new DBPromise<void>(request).toPromise();\n}\n\nasync function getObject(\n  db: IDBDatabase,\n  key: string\n): Promise<PersistedBlob | null> {\n  const request = getObjectStore(db, false).get(key);\n  const data = await new DBPromise<DBObject | undefined>(request).toPromise();\n  return data === undefined ? null : data.value;\n}\n\nexport function _deleteObject(db: IDBDatabase, key: string): Promise<void> {\n  const request = getObjectStore(db, true).delete(key);\n  return new DBPromise<void>(request).toPromise();\n}\n\nexport const _POLLING_INTERVAL_MS = 800;\nexport const _TRANSACTION_RETRY_COUNT = 3;\n\nclass IndexedDBLocalPersistence implements InternalPersistence {\n  static type: 'LOCAL' = 'LOCAL';\n\n  type = PersistenceType.LOCAL;\n  db?: IDBDatabase;\n  readonly _shouldAllowMigration = true;\n\n  private readonly listeners: Record<string, Set<StorageEventListener>> = {};\n  private readonly localCache: Record<string, PersistenceValue | null> = {};\n  // setTimeout return value is platform specific\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private pollTimer: any | null = null;\n  private pendingWrites = 0;\n\n  private receiver: Receiver | null = null;\n  private sender: Sender | null = null;\n  private serviceWorkerReceiverAvailable = false;\n  private activeServiceWorker: ServiceWorker | null = null;\n  // Visible for testing only\n  readonly _workerInitializationPromise: Promise<void>;\n\n  constructor() {\n    // Fire & forget the service worker registration as it may never resolve\n    this._workerInitializationPromise =\n      this.initializeServiceWorkerMessaging().then(\n        () => {},\n        () => {}\n      );\n  }\n\n  async _openDb(): Promise<IDBDatabase> {\n    if (this.db) {\n      return this.db;\n    }\n    this.db = await _openDatabase();\n    return this.db;\n  }\n\n  async _withRetries<T>(op: (db: IDBDatabase) => Promise<T>): Promise<T> {\n    let numAttempts = 0;\n\n    while (true) {\n      try {\n        const db = await this._openDb();\n        return await op(db);\n      } catch (e) {\n        if (numAttempts++ > _TRANSACTION_RETRY_COUNT) {\n          throw e;\n        }\n        if (this.db) {\n          this.db.close();\n          this.db = undefined;\n        }\n        // TODO: consider adding exponential backoff\n      }\n    }\n  }\n\n  /**\n   * IndexedDB events do not propagate from the main window to the worker context.  We rely on a\n   * postMessage interface to send these events to the worker ourselves.\n   */\n  private async initializeServiceWorkerMessaging(): Promise<void> {\n    return _isWorker() ? this.initializeReceiver() : this.initializeSender();\n  }\n\n  /**\n   * As the worker we should listen to events from the main window.\n   */\n  private async initializeReceiver(): Promise<void> {\n    this.receiver = Receiver._getInstance(_getWorkerGlobalScope()!);\n    // Refresh from persistence if we receive a KeyChanged message.\n    this.receiver._subscribe(\n      _EventType.KEY_CHANGED,\n      async (_origin: string, data: KeyChangedRequest) => {\n        const keys = await this._poll();\n        return {\n          keyProcessed: keys.includes(data.key)\n        };\n      }\n    );\n    // Let the sender know that we are listening so they give us more timeout.\n    this.receiver._subscribe(\n      _EventType.PING,\n      async (_origin: string, _data: PingRequest) => {\n        return [_EventType.KEY_CHANGED];\n      }\n    );\n  }\n\n  /**\n   * As the main window, we should let the worker know when keys change (set and remove).\n   *\n   * @remarks\n   * {@link https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerContainer/ready | ServiceWorkerContainer.ready}\n   * may not resolve.\n   */\n  private async initializeSender(): Promise<void> {\n    // Check to see if there's an active service worker.\n    this.activeServiceWorker = await _getActiveServiceWorker();\n    if (!this.activeServiceWorker) {\n      return;\n    }\n    this.sender = new Sender(this.activeServiceWorker);\n    // Ping the service worker to check what events they can handle.\n    const results = await this.sender._send<_PingResponse, PingRequest>(\n      _EventType.PING,\n      {},\n      _TimeoutDuration.LONG_ACK\n    );\n    if (!results) {\n      return;\n    }\n    if (\n      results[0]?.fulfilled &&\n      results[0]?.value.includes(_EventType.KEY_CHANGED)\n    ) {\n      this.serviceWorkerReceiverAvailable = true;\n    }\n  }\n\n  /**\n   * Let the worker know about a changed key, the exact key doesn't technically matter since the\n   * worker will just trigger a full sync anyway.\n   *\n   * @remarks\n   * For now, we only support one service worker per page.\n   *\n   * @param key - Storage key which changed.\n   */\n  private async notifyServiceWorker(key: string): Promise<void> {\n    if (\n      !this.sender ||\n      !this.activeServiceWorker ||\n      _getServiceWorkerController() !== this.activeServiceWorker\n    ) {\n      return;\n    }\n    try {\n      await this.sender._send<KeyChangedResponse, KeyChangedRequest>(\n        _EventType.KEY_CHANGED,\n        { key },\n        // Use long timeout if receiver has previously responded to a ping from us.\n        this.serviceWorkerReceiverAvailable\n          ? _TimeoutDuration.LONG_ACK\n          : _TimeoutDuration.ACK\n      );\n    } catch {\n      // This is a best effort approach. Ignore errors.\n    }\n  }\n\n  async _isAvailable(): Promise<boolean> {\n    try {\n      if (!indexedDB) {\n        return false;\n      }\n      const db = await _openDatabase();\n      await _putObject(db, STORAGE_AVAILABLE_KEY, '1');\n      await _deleteObject(db, STORAGE_AVAILABLE_KEY);\n      return true;\n    } catch {}\n    return false;\n  }\n\n  private async _withPendingWrite(write: () => Promise<void>): Promise<void> {\n    this.pendingWrites++;\n    try {\n      await write();\n    } finally {\n      this.pendingWrites--;\n    }\n  }\n\n  async _set(key: string, value: PersistenceValue): Promise<void> {\n    return this._withPendingWrite(async () => {\n      await this._withRetries((db: IDBDatabase) => _putObject(db, key, value));\n      this.localCache[key] = value;\n      return this.notifyServiceWorker(key);\n    });\n  }\n\n  async _get<T extends PersistenceValue>(key: string): Promise<T | null> {\n    const obj = (await this._withRetries((db: IDBDatabase) =>\n      getObject(db, key)\n    )) as T;\n    this.localCache[key] = obj;\n    return obj;\n  }\n\n  async _remove(key: string): Promise<void> {\n    return this._withPendingWrite(async () => {\n      await this._withRetries((db: IDBDatabase) => _deleteObject(db, key));\n      delete this.localCache[key];\n      return this.notifyServiceWorker(key);\n    });\n  }\n\n  private async _poll(): Promise<string[]> {\n    // TODO: check if we need to fallback if getAll is not supported\n    const result = await this._withRetries((db: IDBDatabase) => {\n      const getAllRequest = getObjectStore(db, false).getAll();\n      return new DBPromise<DBObject[] | null>(getAllRequest).toPromise();\n    });\n\n    if (!result) {\n      return [];\n    }\n\n    // If we have pending writes in progress abort, we'll get picked up on the next poll\n    if (this.pendingWrites !== 0) {\n      return [];\n    }\n\n    const keys = [];\n    const keysInResult = new Set();\n    if (result.length !== 0) {\n      for (const { fbase_key: key, value } of result) {\n        keysInResult.add(key);\n        if (JSON.stringify(this.localCache[key]) !== JSON.stringify(value)) {\n          this.notifyListeners(key, value as PersistenceValue);\n          keys.push(key);\n        }\n      }\n    }\n\n    for (const localKey of Object.keys(this.localCache)) {\n      if (this.localCache[localKey] && !keysInResult.has(localKey)) {\n        // Deleted\n        this.notifyListeners(localKey, null);\n        keys.push(localKey);\n      }\n    }\n    return keys;\n  }\n\n  private notifyListeners(\n    key: string,\n    newValue: PersistenceValue | null\n  ): void {\n    this.localCache[key] = newValue;\n    const listeners = this.listeners[key];\n    if (listeners) {\n      for (const listener of Array.from(listeners)) {\n        listener(newValue);\n      }\n    }\n  }\n\n  private startPolling(): void {\n    this.stopPolling();\n\n    this.pollTimer = setInterval(\n      async () => this._poll(),\n      _POLLING_INTERVAL_MS\n    );\n  }\n\n  private stopPolling(): void {\n    if (this.pollTimer) {\n      clearInterval(this.pollTimer);\n      this.pollTimer = null;\n    }\n  }\n\n  _addListener(key: string, listener: StorageEventListener): void {\n    if (Object.keys(this.listeners).length === 0) {\n      this.startPolling();\n    }\n    if (!this.listeners[key]) {\n      this.listeners[key] = new Set();\n      // Populate the cache to avoid spuriously triggering on first poll.\n      void this._get(key); // This can happen in the background async and we can return immediately.\n    }\n    this.listeners[key].add(listener);\n  }\n\n  _removeListener(key: string, listener: StorageEventListener): void {\n    if (this.listeners[key]) {\n      this.listeners[key].delete(listener);\n\n      if (this.listeners[key].size === 0) {\n        delete this.listeners[key];\n      }\n    }\n\n    if (Object.keys(this.listeners).length === 0) {\n      this.stopPolling();\n    }\n  }\n}\n\n/**\n * An implementation of {@link Persistence} of type `LOCAL` using `indexedDB`\n * for the underlying storage.\n *\n * @public\n */\nexport const indexedDBLocalPersistence: Persistence = IndexedDBLocalPersistence;\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  _performApiRequest,\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary\n} from '../index';\nimport { Auth } from '../../model/public_types';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { MfaEnrollment } from '../account_management/mfa';\nimport { SignInWithIdpResponse } from './idp';\nimport {\n  SignInWithPhoneNumberRequest,\n  SignInWithPhoneNumberResponse\n} from './sms';\n\nexport interface FinalizeMfaResponse {\n  idToken: string;\n  refreshToken: string;\n}\n\n/**\n * @internal\n */\nexport interface IdTokenMfaResponse extends IdTokenResponse {\n  mfaPendingCredential?: string;\n  mfaInfo?: MfaEnrollment[];\n}\n\nexport interface StartPhoneMfaSignInRequest {\n  mfaPendingCredential: string;\n  mfaEnrollmentId: string;\n  phoneSignInInfo: {\n    recaptchaToken: string;\n  };\n  tenantId?: string;\n}\n\nexport interface StartPhoneMfaSignInResponse {\n  phoneResponseInfo: {\n    sessionInfo: string;\n  };\n}\n\nexport function startSignInPhoneMfa(\n  auth: Auth,\n  request: StartPhoneMfaSignInRequest\n): Promise<StartPhoneMfaSignInResponse> {\n  return _performApiRequest<\n    StartPhoneMfaSignInRequest,\n    StartPhoneMfaSignInResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.START_MFA_SIGN_IN,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport interface FinalizePhoneMfaSignInRequest {\n  mfaPendingCredential: string;\n  phoneVerificationInfo: SignInWithPhoneNumberRequest;\n  tenantId?: string;\n}\n\n// TOTP MFA Sign in only has a finalize phase. Phone MFA has a start phase to initiate sending an\n// SMS and a finalize phase to complete sign in. With TOTP, the user already has the OTP in the\n// TOTP/Authenticator app.\nexport interface FinalizeTotpMfaSignInRequest {\n  mfaPendingCredential: string;\n  totpVerificationInfo: { verificationCode: string };\n  tenantId?: string;\n  mfaEnrollmentId: string;\n}\n\nexport interface FinalizePhoneMfaSignInResponse extends FinalizeMfaResponse {}\n\nexport interface FinalizeTotpMfaSignInResponse extends FinalizeMfaResponse {}\n\nexport function finalizeSignInPhoneMfa(\n  auth: Auth,\n  request: FinalizePhoneMfaSignInRequest\n): Promise<FinalizePhoneMfaSignInResponse> {\n  return _performApiRequest<\n    FinalizePhoneMfaSignInRequest,\n    FinalizePhoneMfaSignInResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.FINALIZE_MFA_SIGN_IN,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport function finalizeSignInTotpMfa(\n  auth: Auth,\n  request: FinalizeTotpMfaSignInRequest\n): Promise<FinalizeTotpMfaSignInResponse> {\n  return _performApiRequest<\n    FinalizeTotpMfaSignInRequest,\n    FinalizeTotpMfaSignInResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.FINALIZE_MFA_SIGN_IN,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\n/**\n * @internal\n */\nexport type PhoneOrOauthTokenResponse =\n  | SignInWithPhoneNumberResponse\n  | SignInWithIdpResponse\n  | IdTokenResponse;\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthErrorCode } from '../../core/errors';\nimport { _assert } from '../../core/util/assert';\nimport { AuthInternal } from '../../model/auth';\nimport { RecaptchaParameters } from '../../model/public_types';\nimport {\n  Recaptcha,\n  GreCAPTCHATopLevel,\n  GreCAPTCHARenderOption,\n  GreCAPTCHA\n} from './recaptcha';\n\nexport const _SOLVE_TIME_MS = 500;\nexport const _EXPIRATION_TIME_MS = 60_000;\nexport const _WIDGET_ID_START = 1_000_000_000_000;\n\nexport interface Widget {\n  getResponse: () => string | null;\n  delete: () => void;\n  execute: () => void;\n}\n\nexport class MockReCaptcha implements Recaptcha {\n  private counter = _WIDGET_ID_START;\n  _widgets = new Map<number, Widget>();\n\n  constructor(private readonly auth: AuthInternal) {}\n\n  render(\n    container: string | HTMLElement,\n    parameters?: RecaptchaParameters\n  ): number {\n    const id = this.counter;\n    this._widgets.set(\n      id,\n      new MockWidget(container, this.auth.name, parameters || {})\n    );\n    this.counter++;\n    return id;\n  }\n\n  reset(optWidgetId?: number): void {\n    const id = optWidgetId || _WIDGET_ID_START;\n    void this._widgets.get(id)?.delete();\n    this._widgets.delete(id);\n  }\n\n  getResponse(optWidgetId?: number): string {\n    const id = optWidgetId || _WIDGET_ID_START;\n    return this._widgets.get(id)?.getResponse() || '';\n  }\n\n  async execute(optWidgetId?: number | string): Promise<string> {\n    const id: number = (optWidgetId as number) || _WIDGET_ID_START;\n    void this._widgets.get(id)?.execute();\n    return '';\n  }\n}\n\nexport class MockGreCAPTCHATopLevel implements GreCAPTCHATopLevel {\n  enterprise: GreCAPTCHA = new MockGreCAPTCHA();\n  ready(callback: () => void): void {\n    callback();\n  }\n\n  execute(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _siteKey: string,\n    _options: { action: string }\n  ): Promise<string> {\n    return Promise.resolve('token');\n  }\n  render(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _container: string | HTMLElement,\n    _parameters: GreCAPTCHARenderOption\n  ): string {\n    return '';\n  }\n}\n\nexport class MockGreCAPTCHA implements GreCAPTCHA {\n  ready(callback: () => void): void {\n    callback();\n  }\n\n  execute(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _siteKey: string,\n    _options: { action: string }\n  ): Promise<string> {\n    return Promise.resolve('token');\n  }\n  render(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _container: string | HTMLElement,\n    _parameters: GreCAPTCHARenderOption\n  ): string {\n    return '';\n  }\n}\n\nexport class MockWidget {\n  private readonly container: HTMLElement;\n  private readonly isVisible: boolean;\n  private timerId: number | null = null;\n  private deleted = false;\n  private responseToken: string | null = null;\n  private readonly clickHandler = (): void => {\n    this.execute();\n  };\n\n  constructor(\n    containerOrId: string | HTMLElement,\n    appName: string,\n    private readonly params: RecaptchaParameters\n  ) {\n    const container =\n      typeof containerOrId === 'string'\n        ? document.getElementById(containerOrId)\n        : containerOrId;\n    _assert(container, AuthErrorCode.ARGUMENT_ERROR, { appName });\n\n    this.container = container;\n    this.isVisible = this.params.size !== 'invisible';\n    if (this.isVisible) {\n      this.execute();\n    } else {\n      this.container.addEventListener('click', this.clickHandler);\n    }\n  }\n\n  getResponse(): string | null {\n    this.checkIfDeleted();\n    return this.responseToken;\n  }\n\n  delete(): void {\n    this.checkIfDeleted();\n    this.deleted = true;\n    if (this.timerId) {\n      clearTimeout(this.timerId);\n      this.timerId = null;\n    }\n    this.container.removeEventListener('click', this.clickHandler);\n  }\n\n  execute(): void {\n    this.checkIfDeleted();\n    if (this.timerId) {\n      return;\n    }\n\n    this.timerId = window.setTimeout(() => {\n      this.responseToken = generateRandomAlphaNumericString(50);\n      const { callback, 'expired-callback': expiredCallback } = this.params;\n      if (callback) {\n        try {\n          callback(this.responseToken);\n        } catch (e) {}\n      }\n\n      this.timerId = window.setTimeout(() => {\n        this.timerId = null;\n        this.responseToken = null;\n        if (expiredCallback) {\n          try {\n            expiredCallback();\n          } catch (e) {}\n        }\n\n        if (this.isVisible) {\n          this.execute();\n        }\n      }, _EXPIRATION_TIME_MS);\n    }, _SOLVE_TIME_MS);\n  }\n\n  private checkIfDeleted(): void {\n    if (this.deleted) {\n      throw new Error('reCAPTCHA mock was already deleted!');\n    }\n  }\n}\n\nfunction generateRandomAlphaNumericString(len: number): string {\n  const chars = [];\n  const allowedChars =\n    '1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  for (let i = 0; i < len; i++) {\n    chars.push(\n      allowedChars.charAt(Math.floor(Math.random() * allowedChars.length))\n    );\n  }\n  return chars.join('');\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { querystring } from '@firebase/util';\n\nimport { AuthErrorCode } from '../../core/errors';\nimport { _assert, _createError } from '../../core/util/assert';\nimport { Delay } from '../../core/util/delay';\nimport { AuthInternal } from '../../model/auth';\nimport { _window } from '../auth_window';\nimport * as jsHelpers from '../load_js';\nimport { Recaptcha, isV2 } from './recaptcha';\nimport { MockReCaptcha } from './recaptcha_mock';\n\n// ReCaptcha will load using the same callback, so the callback function needs\n// to be kept around\nexport const _JSLOAD_CALLBACK = jsHelpers._generateCallbackName('rcb');\nconst NETWORK_TIMEOUT_DELAY = new Delay(30000, 60000);\n\n/**\n * We need to mark this interface as internal explicitly to exclude it in the public typings, because\n * it references AuthInternal which has a circular dependency with UserInternal.\n *\n * @internal\n */\nexport interface ReCaptchaLoader {\n  load(auth: AuthInternal, hl?: string): Promise<Recaptcha>;\n  clearedOneInstance(): void;\n}\n\n/**\n * Loader for the GReCaptcha library. There should only ever be one of this.\n */\nexport class ReCaptchaLoaderImpl implements ReCaptchaLoader {\n  private hostLanguage = '';\n  private counter = 0;\n  /**\n   * Check for `render()` method. `window.grecaptcha` will exist if the Enterprise\n   * version of the ReCAPTCHA script was loaded by someone else (e.g. App Check) but\n   * `window.grecaptcha.render()` will not. Another load will add it.\n   */\n  private readonly librarySeparatelyLoaded = !!_window().grecaptcha?.render;\n\n  load(auth: AuthInternal, hl = ''): Promise<Recaptcha> {\n    _assert(isHostLanguageValid(hl), auth, AuthErrorCode.ARGUMENT_ERROR);\n\n    if (this.shouldResolveImmediately(hl) && isV2(_window().grecaptcha)) {\n      return Promise.resolve(_window().grecaptcha! as Recaptcha);\n    }\n    return new Promise<Recaptcha>((resolve, reject) => {\n      const networkTimeout = _window().setTimeout(() => {\n        reject(_createError(auth, AuthErrorCode.NETWORK_REQUEST_FAILED));\n      }, NETWORK_TIMEOUT_DELAY.get());\n\n      _window()[_JSLOAD_CALLBACK] = () => {\n        _window().clearTimeout(networkTimeout);\n        delete _window()[_JSLOAD_CALLBACK];\n\n        const recaptcha = _window().grecaptcha as Recaptcha;\n\n        if (!recaptcha || !isV2(recaptcha)) {\n          reject(_createError(auth, AuthErrorCode.INTERNAL_ERROR));\n          return;\n        }\n\n        // Wrap the greptcha render function so that we know if the developer has\n        // called it separately\n        const render = recaptcha.render;\n        recaptcha.render = (container, params) => {\n          const widgetId = render(container, params);\n          this.counter++;\n          return widgetId;\n        };\n\n        this.hostLanguage = hl;\n        resolve(recaptcha);\n      };\n\n      const url = `${jsHelpers._recaptchaV2ScriptUrl()}?${querystring({\n        onload: _JSLOAD_CALLBACK,\n        render: 'explicit',\n        hl\n      })}`;\n\n      jsHelpers._loadJS(url).catch(() => {\n        clearTimeout(networkTimeout);\n        reject(_createError(auth, AuthErrorCode.INTERNAL_ERROR));\n      });\n    });\n  }\n\n  clearedOneInstance(): void {\n    this.counter--;\n  }\n\n  private shouldResolveImmediately(hl: string): boolean {\n    // We can resolve immediately if:\n    //   • grecaptcha is already defined AND (\n    //     1. the requested language codes are the same OR\n    //     2. there exists already a ReCaptcha on the page\n    //     3. the library was already loaded by the app\n    // In cases (2) and (3), we _can't_ reload as it would break the recaptchas\n    // that are already in the page\n    return (\n      !!_window().grecaptcha?.render &&\n      (hl === this.hostLanguage ||\n        this.counter > 0 ||\n        this.librarySeparatelyLoaded)\n    );\n  }\n}\n\nfunction isHostLanguageValid(hl: string): boolean {\n  return hl.length <= 6 && /^\\s*[a-zA-Z0-9\\-]*\\s*$/.test(hl);\n}\n\nexport class MockReCaptchaLoaderImpl implements ReCaptchaLoader {\n  async load(auth: AuthInternal): Promise<Recaptcha> {\n    return new MockReCaptcha(auth);\n  }\n\n  clearedOneInstance(): void {}\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Auth, RecaptchaParameters } from '../../model/public_types';\nimport { getRecaptchaParams } from '../../api/authentication/recaptcha';\nimport { _castAuth } from '../../core/auth/auth_impl';\nimport { AuthErrorCode } from '../../core/errors';\nimport { _assert } from '../../core/util/assert';\nimport { _isHttpOrHttps } from '../../core/util/location';\nimport { ApplicationVerifierInternal } from '../../model/application_verifier';\nimport { AuthInternal } from '../../model/auth';\nimport { _window } from '../auth_window';\nimport { _isWorker } from '../util/worker';\nimport { Recaptcha } from './recaptcha';\nimport {\n  MockReCaptchaLoaderImpl,\n  ReCaptchaLoader,\n  ReCaptchaLoaderImpl\n} from './recaptcha_loader';\n\nexport const RECAPTCHA_VERIFIER_TYPE = 'recaptcha';\n\nconst DEFAULT_PARAMS: RecaptchaParameters = {\n  theme: 'light',\n  type: 'image'\n};\n\ntype TokenCallback = (token: string) => void;\n\n/**\n * An {@link https://www.google.com/recaptcha/ | reCAPTCHA}-based application verifier.\n *\n * @remarks\n * `RecaptchaVerifier` does not work in a Node.js environment.\n *\n * @public\n */\nexport class RecaptchaVerifier implements ApplicationVerifierInternal {\n  /**\n   * The application verifier type.\n   *\n   * @remarks\n   * For a reCAPTCHA verifier, this is 'recaptcha'.\n   */\n  readonly type = RECAPTCHA_VERIFIER_TYPE;\n  private destroyed = false;\n  private widgetId: number | null = null;\n  private readonly container: HTMLElement;\n  private readonly isInvisible: boolean;\n  private readonly tokenChangeListeners = new Set<TokenCallback>();\n  private renderPromise: Promise<number> | null = null;\n  private readonly auth: AuthInternal;\n\n  /** @internal */\n  readonly _recaptchaLoader: ReCaptchaLoader;\n  private recaptcha: Recaptcha | null = null;\n\n  /**\n   * @param authExtern - The corresponding Firebase {@link Auth} instance.\n   *\n   * @param containerOrId - The reCAPTCHA container parameter.\n   *\n   * @remarks\n   * This has different meaning depending on whether the reCAPTCHA is hidden or visible. For a\n   * visible reCAPTCHA the container must be empty. If a string is used, it has to correspond to\n   * an element ID. The corresponding element must also must be in the DOM at the time of\n   * initialization.\n   *\n   * @param parameters - The optional reCAPTCHA parameters.\n   *\n   * @remarks\n   * Check the reCAPTCHA docs for a comprehensive list. All parameters are accepted except for\n   * the sitekey. Firebase Auth backend provisions a reCAPTCHA for each project and will\n   * configure this upon rendering. For an invisible reCAPTCHA, a size key must have the value\n   * 'invisible'.\n   */\n  constructor(\n    authExtern: Auth,\n    containerOrId: HTMLElement | string,\n    private readonly parameters: RecaptchaParameters = {\n      ...DEFAULT_PARAMS\n    }\n  ) {\n    this.auth = _castAuth(authExtern);\n    this.isInvisible = this.parameters.size === 'invisible';\n    _assert(\n      typeof document !== 'undefined',\n      this.auth,\n      AuthErrorCode.OPERATION_NOT_SUPPORTED\n    );\n    const container =\n      typeof containerOrId === 'string'\n        ? document.getElementById(containerOrId)\n        : containerOrId;\n    _assert(container, this.auth, AuthErrorCode.ARGUMENT_ERROR);\n\n    this.container = container;\n    this.parameters.callback = this.makeTokenCallback(this.parameters.callback);\n\n    this._recaptchaLoader = this.auth.settings.appVerificationDisabledForTesting\n      ? new MockReCaptchaLoaderImpl()\n      : new ReCaptchaLoaderImpl();\n\n    this.validateStartingState();\n    // TODO: Figure out if sdk version is needed\n  }\n\n  /**\n   * Waits for the user to solve the reCAPTCHA and resolves with the reCAPTCHA token.\n   *\n   * @returns A Promise for the reCAPTCHA token.\n   */\n  async verify(): Promise<string> {\n    this.assertNotDestroyed();\n    const id = await this.render();\n    const recaptcha = this.getAssertedRecaptcha();\n\n    const response = recaptcha.getResponse(id);\n    if (response) {\n      return response;\n    }\n\n    return new Promise<string>(resolve => {\n      const tokenChange = (token: string): void => {\n        if (!token) {\n          return; // Ignore token expirations.\n        }\n        this.tokenChangeListeners.delete(tokenChange);\n        resolve(token);\n      };\n\n      this.tokenChangeListeners.add(tokenChange);\n      if (this.isInvisible) {\n        recaptcha.execute(id);\n      }\n    });\n  }\n\n  /**\n   * Renders the reCAPTCHA widget on the page.\n   *\n   * @returns A Promise that resolves with the reCAPTCHA widget ID.\n   */\n  render(): Promise<number> {\n    try {\n      this.assertNotDestroyed();\n    } catch (e) {\n      // This method returns a promise. Since it's not async (we want to return the\n      // _same_ promise if rendering is still occurring), the API surface should\n      // reject with the error rather than just throw\n      return Promise.reject(e);\n    }\n\n    if (this.renderPromise) {\n      return this.renderPromise;\n    }\n\n    this.renderPromise = this.makeRenderPromise().catch(e => {\n      this.renderPromise = null;\n      throw e;\n    });\n\n    return this.renderPromise;\n  }\n\n  /** @internal */\n  _reset(): void {\n    this.assertNotDestroyed();\n    if (this.widgetId !== null) {\n      this.getAssertedRecaptcha().reset(this.widgetId);\n    }\n  }\n\n  /**\n   * Clears the reCAPTCHA widget from the page and destroys the instance.\n   */\n  clear(): void {\n    this.assertNotDestroyed();\n    this.destroyed = true;\n    this._recaptchaLoader.clearedOneInstance();\n    if (!this.isInvisible) {\n      this.container.childNodes.forEach(node => {\n        this.container.removeChild(node);\n      });\n    }\n  }\n\n  private validateStartingState(): void {\n    _assert(!this.parameters.sitekey, this.auth, AuthErrorCode.ARGUMENT_ERROR);\n    _assert(\n      this.isInvisible || !this.container.hasChildNodes(),\n      this.auth,\n      AuthErrorCode.ARGUMENT_ERROR\n    );\n    _assert(\n      typeof document !== 'undefined',\n      this.auth,\n      AuthErrorCode.OPERATION_NOT_SUPPORTED\n    );\n  }\n\n  private makeTokenCallback(\n    existing: TokenCallback | string | undefined\n  ): TokenCallback {\n    return token => {\n      this.tokenChangeListeners.forEach(listener => listener(token));\n      if (typeof existing === 'function') {\n        existing(token);\n      } else if (typeof existing === 'string') {\n        const globalFunc = _window()[existing];\n        if (typeof globalFunc === 'function') {\n          globalFunc(token);\n        }\n      }\n    };\n  }\n\n  private assertNotDestroyed(): void {\n    _assert(!this.destroyed, this.auth, AuthErrorCode.INTERNAL_ERROR);\n  }\n\n  private async makeRenderPromise(): Promise<number> {\n    await this.init();\n    if (!this.widgetId) {\n      let container = this.container;\n      if (!this.isInvisible) {\n        const guaranteedEmpty = document.createElement('div');\n        container.appendChild(guaranteedEmpty);\n        container = guaranteedEmpty;\n      }\n\n      this.widgetId = this.getAssertedRecaptcha().render(\n        container,\n        this.parameters\n      );\n    }\n\n    return this.widgetId;\n  }\n\n  private async init(): Promise<void> {\n    _assert(\n      _isHttpOrHttps() && !_isWorker(),\n      this.auth,\n      AuthErrorCode.INTERNAL_ERROR\n    );\n\n    await domReady();\n    this.recaptcha = await this._recaptchaLoader.load(\n      this.auth,\n      this.auth.languageCode || undefined\n    );\n\n    const siteKey = await getRecaptchaParams(this.auth);\n    _assert(siteKey, this.auth, AuthErrorCode.INTERNAL_ERROR);\n    this.parameters.sitekey = siteKey;\n  }\n\n  private getAssertedRecaptcha(): Recaptcha {\n    _assert(this.recaptcha, this.auth, AuthErrorCode.INTERNAL_ERROR);\n    return this.recaptcha;\n  }\n}\n\nfunction domReady(): Promise<void> {\n  let resolver: (() => void) | null = null;\n  return new Promise<void>(resolve => {\n    if (document.readyState === 'complete') {\n      resolve();\n      return;\n    }\n\n    // Document not ready, wait for load before resolving.\n    // Save resolver, so we can remove listener in case it was externally\n    // cancelled.\n    resolver = () => resolve();\n    window.addEventListener('load', resolver);\n  }).catch(e => {\n    if (resolver) {\n      window.removeEventListener('load', resolver);\n    }\n\n    throw e;\n  });\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ApplicationVerifier,\n  Auth,\n  ConfirmationResult,\n  PhoneInfoOptions,\n  User,\n  UserCredential\n} from '../../model/public_types';\n\nimport { startEnrollPhoneMfa } from '../../api/account_management/mfa';\nimport { startSignInPhoneMfa } from '../../api/authentication/mfa';\nimport { sendPhoneVerificationCode } from '../../api/authentication/sms';\nimport { ApplicationVerifierInternal } from '../../model/application_verifier';\nimport { PhoneAuthCredential } from '../../core/credentials/phone';\nimport { AuthErrorCode } from '../../core/errors';\nimport { _assertLinkedStatus, _link } from '../../core/user/link_unlink';\nimport {\n  _assert,\n  _serverAppCurrentUserOperationNotSupportedError\n} from '../../core/util/assert';\nimport { AuthInternal } from '../../model/auth';\nimport {\n  linkWithCredential,\n  reauthenticateWithCredential,\n  signInWithCredential\n} from '../../core/strategies/credential';\nimport {\n  MultiFactorSessionImpl,\n  MultiFactorSessionType\n} from '../../mfa/mfa_session';\nimport { UserInternal } from '../../model/user';\nimport { RECAPTCHA_VERIFIER_TYPE } from '../recaptcha/recaptcha_verifier';\nimport { _castAuth } from '../../core/auth/auth_impl';\nimport { getModularInstance } from '@firebase/util';\nimport { ProviderId } from '../../model/enums';\nimport { _isFirebaseServerApp } from '@firebase/app';\n\ninterface OnConfirmationCallback {\n  (credential: PhoneAuthCredential): Promise<UserCredential>;\n}\n\nclass ConfirmationResultImpl implements ConfirmationResult {\n  constructor(\n    readonly verificationId: string,\n    private readonly onConfirmation: OnConfirmationCallback\n  ) {}\n\n  confirm(verificationCode: string): Promise<UserCredential> {\n    const authCredential = PhoneAuthCredential._fromVerification(\n      this.verificationId,\n      verificationCode\n    );\n    return this.onConfirmation(authCredential);\n  }\n}\n\n/**\n * Asynchronously signs in using a phone number.\n *\n * @remarks\n * This method sends a code via SMS to the given\n * phone number, and returns a {@link ConfirmationResult}. After the user\n * provides the code sent to their phone, call {@link ConfirmationResult.confirm}\n * with the code to sign the user in.\n *\n * For abuse prevention, this method also requires a {@link ApplicationVerifier}.\n * This SDK includes a reCAPTCHA-based implementation, {@link RecaptchaVerifier}.\n * This function can work on other platforms that do not support the\n * {@link RecaptchaVerifier} (like React Native), but you need to use a\n * third-party {@link ApplicationVerifier} implementation.\n *\n * This method does not work in a Node.js environment or with {@link Auth} instances created with a\n * {@link @firebase/app#FirebaseServerApp}.\n *\n * @example\n * ```javascript\n * // 'recaptcha-container' is the ID of an element in the DOM.\n * const applicationVerifier = new firebase.auth.RecaptchaVerifier('recaptcha-container');\n * const confirmationResult = await signInWithPhoneNumber(auth, phoneNumber, applicationVerifier);\n * // Obtain a verificationCode from the user.\n * const credential = await confirmationResult.confirm(verificationCode);\n * ```\n *\n * @param auth - The {@link Auth} instance.\n * @param phoneNumber - The user's phone number in E.164 format (e.g. +16505550101).\n * @param appVerifier - The {@link ApplicationVerifier}.\n *\n * @public\n */\nexport async function signInWithPhoneNumber(\n  auth: Auth,\n  phoneNumber: string,\n  appVerifier: ApplicationVerifier\n): Promise<ConfirmationResult> {\n  if (_isFirebaseServerApp(auth.app)) {\n    return Promise.reject(\n      _serverAppCurrentUserOperationNotSupportedError(auth)\n    );\n  }\n  const authInternal = _castAuth(auth);\n  const verificationId = await _verifyPhoneNumber(\n    authInternal,\n    phoneNumber,\n    getModularInstance(appVerifier as ApplicationVerifierInternal)\n  );\n  return new ConfirmationResultImpl(verificationId, cred =>\n    signInWithCredential(authInternal, cred)\n  );\n}\n\n/**\n * Links the user account with the given phone number.\n *\n * @remarks\n * This method does not work in a Node.js environment.\n *\n * @param user - The user.\n * @param phoneNumber - The user's phone number in E.164 format (e.g. +16505550101).\n * @param appVerifier - The {@link ApplicationVerifier}.\n *\n * @public\n */\nexport async function linkWithPhoneNumber(\n  user: User,\n  phoneNumber: string,\n  appVerifier: ApplicationVerifier\n): Promise<ConfirmationResult> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  await _assertLinkedStatus(false, userInternal, ProviderId.PHONE);\n  const verificationId = await _verifyPhoneNumber(\n    userInternal.auth,\n    phoneNumber,\n    getModularInstance(appVerifier as ApplicationVerifierInternal)\n  );\n  return new ConfirmationResultImpl(verificationId, cred =>\n    linkWithCredential(userInternal, cred)\n  );\n}\n\n/**\n * Re-authenticates a user using a fresh phone credential.\n *\n * @remarks\n * Use before operations such as {@link updatePassword} that require tokens from recent sign-in attempts.\n *\n * This method does not work in a Node.js environment or on any {@link User} signed in by\n * {@link Auth} instances created with a {@link @firebase/app#FirebaseServerApp}.\n *\n * @param user - The user.\n * @param phoneNumber - The user's phone number in E.164 format (e.g. +16505550101).\n * @param appVerifier - The {@link ApplicationVerifier}.\n *\n * @public\n */\nexport async function reauthenticateWithPhoneNumber(\n  user: User,\n  phoneNumber: string,\n  appVerifier: ApplicationVerifier\n): Promise<ConfirmationResult> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  if (_isFirebaseServerApp(userInternal.auth.app)) {\n    return Promise.reject(\n      _serverAppCurrentUserOperationNotSupportedError(userInternal.auth)\n    );\n  }\n  const verificationId = await _verifyPhoneNumber(\n    userInternal.auth,\n    phoneNumber,\n    getModularInstance(appVerifier as ApplicationVerifierInternal)\n  );\n  return new ConfirmationResultImpl(verificationId, cred =>\n    reauthenticateWithCredential(userInternal, cred)\n  );\n}\n\n/**\n * Returns a verification ID to be used in conjunction with the SMS code that is sent.\n *\n */\nexport async function _verifyPhoneNumber(\n  auth: AuthInternal,\n  options: PhoneInfoOptions | string,\n  verifier: ApplicationVerifierInternal\n): Promise<string> {\n  const recaptchaToken = await verifier.verify();\n\n  try {\n    _assert(\n      typeof recaptchaToken === 'string',\n      auth,\n      AuthErrorCode.ARGUMENT_ERROR\n    );\n    _assert(\n      verifier.type === RECAPTCHA_VERIFIER_TYPE,\n      auth,\n      AuthErrorCode.ARGUMENT_ERROR\n    );\n\n    let phoneInfoOptions: PhoneInfoOptions;\n\n    if (typeof options === 'string') {\n      phoneInfoOptions = {\n        phoneNumber: options\n      };\n    } else {\n      phoneInfoOptions = options;\n    }\n\n    if ('session' in phoneInfoOptions) {\n      const session = phoneInfoOptions.session as MultiFactorSessionImpl;\n\n      if ('phoneNumber' in phoneInfoOptions) {\n        _assert(\n          session.type === MultiFactorSessionType.ENROLL,\n          auth,\n          AuthErrorCode.INTERNAL_ERROR\n        );\n        const response = await startEnrollPhoneMfa(auth, {\n          idToken: session.credential,\n          phoneEnrollmentInfo: {\n            phoneNumber: phoneInfoOptions.phoneNumber,\n            recaptchaToken\n          }\n        });\n        return response.phoneSessionInfo.sessionInfo;\n      } else {\n        _assert(\n          session.type === MultiFactorSessionType.SIGN_IN,\n          auth,\n          AuthErrorCode.INTERNAL_ERROR\n        );\n        const mfaEnrollmentId =\n          phoneInfoOptions.multiFactorHint?.uid ||\n          phoneInfoOptions.multiFactorUid;\n        _assert(mfaEnrollmentId, auth, AuthErrorCode.MISSING_MFA_INFO);\n        const response = await startSignInPhoneMfa(auth, {\n          mfaPendingCredential: session.credential,\n          mfaEnrollmentId,\n          phoneSignInInfo: {\n            recaptchaToken\n          }\n        });\n        return response.phoneResponseInfo.sessionInfo;\n      }\n    } else {\n      const { sessionInfo } = await sendPhoneVerificationCode(auth, {\n        phoneNumber: phoneInfoOptions.phoneNumber,\n        recaptchaToken\n      });\n      return sessionInfo;\n    }\n  } finally {\n    verifier._reset();\n  }\n}\n\n/**\n * Updates the user's phone number.\n *\n * @remarks\n * This method does not work in a Node.js environment or on any {@link User} signed in by\n * {@link Auth} instances created with a {@link @firebase/app#FirebaseServerApp}.\n *\n * @example\n * ```\n * // 'recaptcha-container' is the ID of an element in the DOM.\n * const applicationVerifier = new RecaptchaVerifier('recaptcha-container');\n * const provider = new PhoneAuthProvider(auth);\n * const verificationId = await provider.verifyPhoneNumber('+16505550101', applicationVerifier);\n * // Obtain the verificationCode from the user.\n * const phoneCredential = PhoneAuthProvider.credential(verificationId, verificationCode);\n * await updatePhoneNumber(user, phoneCredential);\n * ```\n *\n * @param user - The user.\n * @param credential - A credential authenticating the new phone number.\n *\n * @public\n */\nexport async function updatePhoneNumber(\n  user: User,\n  credential: PhoneAuthCredential\n): Promise<void> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  if (_isFirebaseServerApp(userInternal.auth.app)) {\n    return Promise.reject(\n      _serverAppCurrentUserOperationNotSupportedError(userInternal.auth)\n    );\n  }\n  await _link(userInternal, credential);\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Auth,\n  PhoneInfoOptions,\n  ApplicationVerifier,\n  UserCredential\n} from '../../model/public_types';\n\nimport { SignInWithPhoneNumberResponse } from '../../api/authentication/sms';\nimport { ApplicationVerifierInternal as ApplicationVerifierInternal } from '../../model/application_verifier';\nimport { AuthInternal as AuthInternal } from '../../model/auth';\nimport { UserCredentialInternal as UserCredentialInternal } from '../../model/user';\nimport { PhoneAuthCredential } from '../../core/credentials/phone';\nimport { _verifyPhoneNumber } from '../strategies/phone';\nimport { _castAuth } from '../../core/auth/auth_impl';\nimport { AuthCredential } from '../../core';\nimport { FirebaseError, getModularInstance } from '@firebase/util';\nimport { TaggedWithTokenResponse } from '../../model/id_token';\nimport { ProviderId, SignInMethod } from '../../model/enums';\n\n/**\n * Provider for generating an {@link PhoneAuthCredential}.\n *\n * @remarks\n * `PhoneAuthProvider` does not work in a Node.js environment.\n *\n * @example\n * ```javascript\n * // 'recaptcha-container' is the ID of an element in the DOM.\n * const applicationVerifier = new RecaptchaVerifier('recaptcha-container');\n * const provider = new PhoneAuthProvider(auth);\n * const verificationId = await provider.verifyPhoneNumber('+16505550101', applicationVerifier);\n * // Obtain the verificationCode from the user.\n * const phoneCredential = PhoneAuthProvider.credential(verificationId, verificationCode);\n * const userCredential = await signInWithCredential(auth, phoneCredential);\n * ```\n *\n * @public\n */\nexport class PhoneAuthProvider {\n  /** Always set to {@link ProviderId}.PHONE. */\n  static readonly PROVIDER_ID: 'phone' = ProviderId.PHONE;\n  /** Always set to {@link SignInMethod}.PHONE. */\n  static readonly PHONE_SIGN_IN_METHOD: 'phone' = SignInMethod.PHONE;\n\n  /** Always set to {@link ProviderId}.PHONE. */\n  readonly providerId = PhoneAuthProvider.PROVIDER_ID;\n  private readonly auth: AuthInternal;\n\n  /**\n   * @param auth - The Firebase {@link Auth} instance in which sign-ins should occur.\n   *\n   */\n  constructor(auth: Auth) {\n    this.auth = _castAuth(auth);\n  }\n\n  /**\n   *\n   * Starts a phone number authentication flow by sending a verification code to the given phone\n   * number.\n   *\n   * @example\n   * ```javascript\n   * const provider = new PhoneAuthProvider(auth);\n   * const verificationId = await provider.verifyPhoneNumber(phoneNumber, applicationVerifier);\n   * // Obtain verificationCode from the user.\n   * const authCredential = PhoneAuthProvider.credential(verificationId, verificationCode);\n   * const userCredential = await signInWithCredential(auth, authCredential);\n   * ```\n   *\n   * @example\n   * An alternative flow is provided using the `signInWithPhoneNumber` method.\n   * ```javascript\n   * const confirmationResult = signInWithPhoneNumber(auth, phoneNumber, applicationVerifier);\n   * // Obtain verificationCode from the user.\n   * const userCredential = confirmationResult.confirm(verificationCode);\n   * ```\n   *\n   * @param phoneInfoOptions - The user's {@link PhoneInfoOptions}. The phone number should be in\n   * E.164 format (e.g. +16505550101).\n   * @param applicationVerifier - For abuse prevention, this method also requires a\n   * {@link ApplicationVerifier}. This SDK includes a reCAPTCHA-based implementation,\n   * {@link RecaptchaVerifier}.\n   *\n   * @returns A Promise for a verification ID that can be passed to\n   * {@link PhoneAuthProvider.credential} to identify this flow..\n   */\n  verifyPhoneNumber(\n    phoneOptions: PhoneInfoOptions | string,\n    applicationVerifier: ApplicationVerifier\n  ): Promise<string> {\n    return _verifyPhoneNumber(\n      this.auth,\n      phoneOptions,\n      getModularInstance(applicationVerifier as ApplicationVerifierInternal)\n    );\n  }\n\n  /**\n   * Creates a phone auth credential, given the verification ID from\n   * {@link PhoneAuthProvider.verifyPhoneNumber} and the code that was sent to the user's\n   * mobile device.\n   *\n   * @example\n   * ```javascript\n   * const provider = new PhoneAuthProvider(auth);\n   * const verificationId = provider.verifyPhoneNumber(phoneNumber, applicationVerifier);\n   * // Obtain verificationCode from the user.\n   * const authCredential = PhoneAuthProvider.credential(verificationId, verificationCode);\n   * const userCredential = signInWithCredential(auth, authCredential);\n   * ```\n   *\n   * @example\n   * An alternative flow is provided using the `signInWithPhoneNumber` method.\n   * ```javascript\n   * const confirmationResult = await signInWithPhoneNumber(auth, phoneNumber, applicationVerifier);\n   * // Obtain verificationCode from the user.\n   * const userCredential = await confirmationResult.confirm(verificationCode);\n   * ```\n   *\n   * @param verificationId - The verification ID returned from {@link PhoneAuthProvider.verifyPhoneNumber}.\n   * @param verificationCode - The verification code sent to the user's mobile device.\n   *\n   * @returns The auth provider credential.\n   */\n  static credential(\n    verificationId: string,\n    verificationCode: string\n  ): PhoneAuthCredential {\n    return PhoneAuthCredential._fromVerification(\n      verificationId,\n      verificationCode\n    );\n  }\n\n  /**\n   * Generates an {@link AuthCredential} from a {@link UserCredential}.\n   * @param userCredential - The user credential.\n   */\n  static credentialFromResult(\n    userCredential: UserCredential\n  ): AuthCredential | null {\n    const credential = userCredential as UserCredentialInternal;\n    return PhoneAuthProvider.credentialFromTaggedObject(credential);\n  }\n\n  /**\n   * Returns an {@link AuthCredential} when passed an error.\n   *\n   * @remarks\n   *\n   * This method works for errors like\n   * `auth/account-exists-with-different-credentials`. This is useful for\n   * recovering when attempting to set a user's phone number but the number\n   * in question is already tied to another account. For example, the following\n   * code tries to update the current user's phone number, and if that\n   * fails, links the user with the account associated with that number:\n   *\n   * ```js\n   * const provider = new PhoneAuthProvider(auth);\n   * const verificationId = await provider.verifyPhoneNumber(number, verifier);\n   * try {\n   *   const code = ''; // Prompt the user for the verification code\n   *   await updatePhoneNumber(\n   *       auth.currentUser,\n   *       PhoneAuthProvider.credential(verificationId, code));\n   * } catch (e) {\n   *   if ((e as FirebaseError)?.code === 'auth/account-exists-with-different-credential') {\n   *     const cred = PhoneAuthProvider.credentialFromError(e);\n   *     await linkWithCredential(auth.currentUser, cred);\n   *   }\n   * }\n   *\n   * // At this point, auth.currentUser.phoneNumber === number.\n   * ```\n   *\n   * @param error - The error to generate a credential from.\n   */\n  static credentialFromError(error: FirebaseError): AuthCredential | null {\n    return PhoneAuthProvider.credentialFromTaggedObject(\n      (error.customData || {}) as TaggedWithTokenResponse\n    );\n  }\n\n  private static credentialFromTaggedObject({\n    _tokenResponse: tokenResponse\n  }: TaggedWithTokenResponse): AuthCredential | null {\n    if (!tokenResponse) {\n      return null;\n    }\n    const { phoneNumber, temporaryProof } =\n      tokenResponse as SignInWithPhoneNumberResponse;\n    if (phoneNumber && temporaryProof) {\n      return PhoneAuthCredential._fromTokenResponse(\n        phoneNumber,\n        temporaryProof\n      );\n    }\n    return null;\n  }\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PopupRedirectResolver } from '../../model/public_types';\nimport { AuthInternal } from '../../model/auth';\nimport { PopupRedirectResolverInternal } from '../../model/popup_redirect';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from './assert';\nimport { _getInstance } from './instantiator';\n\n/**\n * Chooses a popup/redirect resolver to use. This prefers the override (which\n * is directly passed in), and falls back to the property set on the auth\n * object. If neither are available, this function errors w/ an argument error.\n */\nexport function _withDefaultResolver(\n  auth: AuthInternal,\n  resolverOverride: PopupRedirectResolver | undefined\n): PopupRedirectResolverInternal {\n  if (resolverOverride) {\n    return _getInstance(resolverOverride);\n  }\n\n  _assert(auth._popupRedirectResolver, auth, AuthErrorCode.ARGUMENT_ERROR);\n\n  return auth._popupRedirectResolver;\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  signInWithIdp,\n  SignInWithIdpRequest\n} from '../../api/authentication/idp';\nimport { PhoneOrOauthTokenResponse } from '../../api/authentication/mfa';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { UserInternal, UserCredentialInternal } from '../../model/user';\nimport { AuthCredential } from '../credentials';\nimport { _link as _linkUser } from '../user/link_unlink';\nimport { _reauthenticate } from '../user/reauthenticate';\nimport { _assert } from '../util/assert';\nimport { _signInWithCredential } from './credential';\nimport { AuthErrorCode } from '../errors';\nimport { ProviderId } from '../../model/enums';\n\nexport interface IdpTaskParams {\n  auth: AuthInternal;\n  requestUri: string;\n  sessionId?: string;\n  tenantId?: string;\n  postBody?: string;\n  pendingToken?: string;\n  user?: UserInternal;\n  bypassAuthState?: boolean;\n}\n\nexport type IdpTask = (\n  params: IdpTaskParams\n) => Promise<UserCredentialInternal>;\n\nclass IdpCredential extends AuthCredential {\n  constructor(readonly params: IdpTaskParams) {\n    super(ProviderId.CUSTOM, ProviderId.CUSTOM);\n  }\n\n  _getIdTokenResponse(auth: AuthInternal): Promise<PhoneOrOauthTokenResponse> {\n    return signInWithIdp(auth, this._buildIdpRequest());\n  }\n\n  _linkToIdToken(\n    auth: AuthInternal,\n    idToken: string\n  ): Promise<IdTokenResponse> {\n    return signInWithIdp(auth, this._buildIdpRequest(idToken));\n  }\n\n  _getReauthenticationResolver(auth: AuthInternal): Promise<IdTokenResponse> {\n    return signInWithIdp(auth, this._buildIdpRequest());\n  }\n\n  private _buildIdpRequest(idToken?: string): SignInWithIdpRequest {\n    const request: SignInWithIdpRequest = {\n      requestUri: this.params.requestUri,\n      sessionId: this.params.sessionId,\n      postBody: this.params.postBody,\n      tenantId: this.params.tenantId,\n      pendingToken: this.params.pendingToken,\n      returnSecureToken: true,\n      returnIdpCredential: true\n    };\n\n    if (idToken) {\n      request.idToken = idToken;\n    }\n\n    return request;\n  }\n}\n\nexport function _signIn(\n  params: IdpTaskParams\n): Promise<UserCredentialInternal> {\n  return _signInWithCredential(\n    params.auth,\n    new IdpCredential(params),\n    params.bypassAuthState\n  ) as Promise<UserCredentialInternal>;\n}\n\nexport function _reauth(\n  params: IdpTaskParams\n): Promise<UserCredentialInternal> {\n  const { auth, user } = params;\n  _assert(user, auth, AuthErrorCode.INTERNAL_ERROR);\n  return _reauthenticate(\n    user,\n    new IdpCredential(params),\n    params.bypassAuthState\n  );\n}\n\nexport async function _link(\n  params: IdpTaskParams\n): Promise<UserCredentialInternal> {\n  const { auth, user } = params;\n  _assert(user, auth, AuthErrorCode.INTERNAL_ERROR);\n  return _linkUser(user, new IdpCredential(params), params.bypassAuthState);\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\n\nimport {\n  AuthEvent,\n  AuthEventConsumer,\n  AuthEventType,\n  EventManager,\n  PopupRedirectResolverInternal\n} from '../../model/popup_redirect';\nimport { UserInternal, UserCredentialInternal } from '../../model/user';\nimport { AuthErrorCode } from '../errors';\nimport { debugAssert, _fail } from '../util/assert';\nimport {\n  _link,\n  _reauth,\n  _signIn,\n  IdpTask,\n  IdpTaskParams\n} from '../strategies/idp';\nimport { AuthInternal } from '../../model/auth';\n\ninterface PendingPromise {\n  resolve: (cred: UserCredentialInternal | null) => void;\n  reject: (error: Error) => void;\n}\n\n/**\n * Popup event manager. Handles the popup's entire lifecycle; listens to auth\n * events\n */\nexport abstract class AbstractPopupRedirectOperation\n  implements AuthEventConsumer\n{\n  private pendingPromise: PendingPromise | null = null;\n  private eventManager: EventManager | null = null;\n  readonly filter: AuthEventType[];\n\n  abstract eventId: string | null;\n\n  constructor(\n    protected readonly auth: AuthInternal,\n    filter: AuthEventType | AuthEventType[],\n    protected readonly resolver: PopupRedirectResolverInternal,\n    protected user?: UserInternal,\n    protected readonly bypassAuthState = false\n  ) {\n    this.filter = Array.isArray(filter) ? filter : [filter];\n  }\n\n  abstract onExecution(): Promise<void>;\n\n  execute(): Promise<UserCredentialInternal | null> {\n    return new Promise<UserCredentialInternal | null>(\n      async (resolve, reject) => {\n        this.pendingPromise = { resolve, reject };\n\n        try {\n          this.eventManager = await this.resolver._initialize(this.auth);\n          await this.onExecution();\n          this.eventManager.registerConsumer(this);\n        } catch (e) {\n          this.reject(e as Error);\n        }\n      }\n    );\n  }\n\n  async onAuthEvent(event: AuthEvent): Promise<void> {\n    const { urlResponse, sessionId, postBody, tenantId, error, type } = event;\n    if (error) {\n      this.reject(error);\n      return;\n    }\n\n    const params: IdpTaskParams = {\n      auth: this.auth,\n      requestUri: urlResponse!,\n      sessionId: sessionId!,\n      tenantId: tenantId || undefined,\n      postBody: postBody || undefined,\n      user: this.user,\n      bypassAuthState: this.bypassAuthState\n    };\n\n    try {\n      this.resolve(await this.getIdpTask(type)(params));\n    } catch (e) {\n      this.reject(e as Error);\n    }\n  }\n\n  onError(error: FirebaseError): void {\n    this.reject(error);\n  }\n\n  private getIdpTask(type: AuthEventType): IdpTask {\n    switch (type) {\n      case AuthEventType.SIGN_IN_VIA_POPUP:\n      case AuthEventType.SIGN_IN_VIA_REDIRECT:\n        return _signIn;\n      case AuthEventType.LINK_VIA_POPUP:\n      case AuthEventType.LINK_VIA_REDIRECT:\n        return _link;\n      case AuthEventType.REAUTH_VIA_POPUP:\n      case AuthEventType.REAUTH_VIA_REDIRECT:\n        return _reauth;\n      default:\n        _fail(this.auth, AuthErrorCode.INTERNAL_ERROR);\n    }\n  }\n\n  protected resolve(cred: UserCredentialInternal | null): void {\n    debugAssert(this.pendingPromise, 'Pending promise was never set');\n    this.pendingPromise.resolve(cred);\n    this.unregisterAndCleanUp();\n  }\n\n  protected reject(error: Error): void {\n    debugAssert(this.pendingPromise, 'Pending promise was never set');\n    this.pendingPromise.reject(error);\n    this.unregisterAndCleanUp();\n  }\n\n  private unregisterAndCleanUp(): void {\n    if (this.eventManager) {\n      this.eventManager.unregisterConsumer(this);\n    }\n\n    this.pendingPromise = null;\n    this.cleanUp();\n  }\n\n  abstract cleanUp(): void;\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Auth,\n  AuthProvider,\n  PopupRedirectResolver,\n  User,\n  UserCredential\n} from '../../model/public_types';\n\nimport { _castAuth } from '../../core/auth/auth_impl';\nimport { AuthErrorCode } from '../../core/errors';\nimport {\n  _assert,\n  debugAssert,\n  _createError,\n  _assertInstanceOf\n} from '../../core/util/assert';\nimport { Delay } from '../../core/util/delay';\nimport { _generateEventId } from '../../core/util/event_id';\nimport { AuthInternal } from '../../model/auth';\nimport {\n  AuthEventType,\n  PopupRedirectResolverInternal\n} from '../../model/popup_redirect';\nimport { UserInternal } from '../../model/user';\nimport { _withDefaultResolver } from '../../core/util/resolver';\nimport { AuthPopup } from '../util/popup';\nimport { AbstractPopupRedirectOperation } from '../../core/strategies/abstract_popup_redirect_operation';\nimport { FederatedAuthProvider } from '../../core/providers/federated';\nimport { getModularInstance } from '@firebase/util';\nimport { _isFirebaseServerApp } from '@firebase/app';\n\n/*\n * The event timeout is the same on mobile and desktop, no need for Delay. Set this to 8s since\n * blocking functions can take upto 7s to complete sign in, as documented in:\n * https://cloud.google.com/identity-platform/docs/blocking-functions#understanding_blocking_functions\n * https://firebase.google.com/docs/auth/extend-with-blocking-functions#understanding_blocking_functions\n */\nexport const enum _Timeout {\n  AUTH_EVENT = 8000\n}\nexport const _POLL_WINDOW_CLOSE_TIMEOUT = new Delay(2000, 10000);\n\n/**\n * Authenticates a Firebase client using a popup-based OAuth authentication flow.\n *\n * @remarks\n * If succeeds, returns the signed in user along with the provider's credential. If sign in was\n * unsuccessful, returns an error object containing additional information about the error.\n *\n * This method does not work in a Node.js environment or with {@link Auth} instances created with a\n * {@link @firebase/app#FirebaseServerApp}.\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new FacebookAuthProvider();\n * const result = await signInWithPopup(auth, provider);\n *\n * // The signed-in user info.\n * const user = result.user;\n * // This gives you a Facebook Access Token.\n * const credential = provider.credentialFromResult(auth, result);\n * const token = credential.accessToken;\n * ```\n *\n * @param auth - The {@link Auth} instance.\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\n *\n * @public\n */\nexport async function signInWithPopup(\n  auth: Auth,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<UserCredential> {\n  if (_isFirebaseServerApp(auth.app)) {\n    return Promise.reject(\n      _createError(auth, AuthErrorCode.OPERATION_NOT_SUPPORTED)\n    );\n  }\n  const authInternal = _castAuth(auth);\n  _assertInstanceOf(auth, provider, FederatedAuthProvider);\n  const resolverInternal = _withDefaultResolver(authInternal, resolver);\n  const action = new PopupOperation(\n    authInternal,\n    AuthEventType.SIGN_IN_VIA_POPUP,\n    provider,\n    resolverInternal\n  );\n  return action.executeNotNull();\n}\n\n/**\n * Reauthenticates the current user with the specified {@link OAuthProvider} using a pop-up based\n * OAuth flow.\n *\n * @remarks\n * If the reauthentication is successful, the returned result will contain the user and the\n * provider's credential.\n *\n * This method does not work in a Node.js environment or on any {@link User} signed in by\n * {@link Auth} instances created with a {@link @firebase/app#FirebaseServerApp}.\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new FacebookAuthProvider();\n * const result = await signInWithPopup(auth, provider);\n * // Reauthenticate using a popup.\n * await reauthenticateWithPopup(result.user, provider);\n * ```\n *\n * @param user - The user.\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\n *\n * @public\n */\nexport async function reauthenticateWithPopup(\n  user: User,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<UserCredential> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  if (_isFirebaseServerApp(userInternal.auth.app)) {\n    return Promise.reject(\n      _createError(userInternal.auth, AuthErrorCode.OPERATION_NOT_SUPPORTED)\n    );\n  }\n  _assertInstanceOf(userInternal.auth, provider, FederatedAuthProvider);\n  const resolverInternal = _withDefaultResolver(userInternal.auth, resolver);\n  const action = new PopupOperation(\n    userInternal.auth,\n    AuthEventType.REAUTH_VIA_POPUP,\n    provider,\n    resolverInternal,\n    userInternal\n  );\n  return action.executeNotNull();\n}\n\n/**\n * Links the authenticated provider to the user account using a pop-up based OAuth flow.\n *\n * @remarks\n * If the linking is successful, the returned result will contain the user and the provider's credential.\n *\n * This method does not work in a Node.js environment.\n *\n * @example\n * ```javascript\n * // Sign in using some other provider.\n * const result = await signInWithEmailAndPassword(auth, email, password);\n * // Link using a popup.\n * const provider = new FacebookAuthProvider();\n * await linkWithPopup(result.user, provider);\n * ```\n *\n * @param user - The user.\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\n *\n * @public\n */\nexport async function linkWithPopup(\n  user: User,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<UserCredential> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  _assertInstanceOf(userInternal.auth, provider, FederatedAuthProvider);\n  const resolverInternal = _withDefaultResolver(userInternal.auth, resolver);\n\n  const action = new PopupOperation(\n    userInternal.auth,\n    AuthEventType.LINK_VIA_POPUP,\n    provider,\n    resolverInternal,\n    userInternal\n  );\n  return action.executeNotNull();\n}\n\n/**\n * Popup event manager. Handles the popup's entire lifecycle; listens to auth\n * events\n *\n */\nclass PopupOperation extends AbstractPopupRedirectOperation {\n  // Only one popup is ever shown at once. The lifecycle of the current popup\n  // can be managed / cancelled by the constructor.\n  private static currentPopupAction: PopupOperation | null = null;\n  private authWindow: AuthPopup | null = null;\n  private pollId: number | null = null;\n\n  constructor(\n    auth: AuthInternal,\n    filter: AuthEventType,\n    private readonly provider: AuthProvider,\n    resolver: PopupRedirectResolverInternal,\n    user?: UserInternal\n  ) {\n    super(auth, filter, resolver, user);\n    if (PopupOperation.currentPopupAction) {\n      PopupOperation.currentPopupAction.cancel();\n    }\n\n    PopupOperation.currentPopupAction = this;\n  }\n\n  async executeNotNull(): Promise<UserCredential> {\n    const result = await this.execute();\n    _assert(result, this.auth, AuthErrorCode.INTERNAL_ERROR);\n    return result;\n  }\n\n  async onExecution(): Promise<void> {\n    debugAssert(\n      this.filter.length === 1,\n      'Popup operations only handle one event'\n    );\n    const eventId = _generateEventId();\n    this.authWindow = await this.resolver._openPopup(\n      this.auth,\n      this.provider,\n      this.filter[0], // There's always one, see constructor\n      eventId\n    );\n    this.authWindow.associatedEvent = eventId;\n\n    // Check for web storage support and origin validation _after_ the popup is\n    // loaded. These operations are slow (~1 second or so) Rather than\n    // waiting on them before opening the window, optimistically open the popup\n    // and check for storage support at the same time. If storage support is\n    // not available, this will cause the whole thing to reject properly. It\n    // will also close the popup, but since the promise has already rejected,\n    // the popup closed by user poll will reject into the void.\n    this.resolver._originValidation(this.auth).catch(e => {\n      this.reject(e);\n    });\n\n    this.resolver._isIframeWebStorageSupported(this.auth, isSupported => {\n      if (!isSupported) {\n        this.reject(\n          _createError(this.auth, AuthErrorCode.WEB_STORAGE_UNSUPPORTED)\n        );\n      }\n    });\n\n    // Handle user closure. Notice this does *not* use await\n    this.pollUserCancellation();\n  }\n\n  get eventId(): string | null {\n    return this.authWindow?.associatedEvent || null;\n  }\n\n  cancel(): void {\n    this.reject(_createError(this.auth, AuthErrorCode.EXPIRED_POPUP_REQUEST));\n  }\n\n  cleanUp(): void {\n    if (this.authWindow) {\n      this.authWindow.close();\n    }\n\n    if (this.pollId) {\n      window.clearTimeout(this.pollId);\n    }\n\n    this.authWindow = null;\n    this.pollId = null;\n    PopupOperation.currentPopupAction = null;\n  }\n\n  private pollUserCancellation(): void {\n    const poll = (): void => {\n      if (this.authWindow?.window?.closed) {\n        // Make sure that there is sufficient time for whatever action to\n        // complete. The window could have closed but the sign in network\n        // call could still be in flight. This is specifically true for\n        // Firefox or if the opener is in an iframe, in which case the oauth\n        // helper closes the popup.\n        this.pollId = window.setTimeout(() => {\n          this.pollId = null;\n          this.reject(\n            _createError(this.auth, AuthErrorCode.POPUP_CLOSED_BY_USER)\n          );\n        }, _Timeout.AUTH_EVENT);\n        return;\n      }\n\n      this.pollId = window.setTimeout(poll, _POLL_WINDOW_CLOSE_TIMEOUT.get());\n    };\n\n    poll();\n  }\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthInternal } from '../../model/auth';\nimport {\n  AuthEvent,\n  AuthEventType,\n  PopupRedirectResolverInternal\n} from '../../model/popup_redirect';\nimport { UserCredentialInternal } from '../../model/user';\nimport { PersistenceInternal } from '../persistence';\nimport { _persistenceKeyName } from '../persistence/persistence_user_manager';\nimport { _getInstance } from '../util/instantiator';\nimport { AbstractPopupRedirectOperation } from './abstract_popup_redirect_operation';\n\nconst PENDING_REDIRECT_KEY = 'pendingRedirect';\n\n// We only get one redirect outcome for any one auth, so just store it\n// in here.\nconst redirectOutcomeMap: Map<\n  string,\n  () => Promise<UserCredentialInternal | null>\n> = new Map();\n\nexport class RedirectAction extends AbstractPopupRedirectOperation {\n  eventId = null;\n\n  constructor(\n    auth: AuthInternal,\n    resolver: PopupRedirectResolverInternal,\n    bypassAuthState = false\n  ) {\n    super(\n      auth,\n      [\n        AuthEventType.SIGN_IN_VIA_REDIRECT,\n        AuthEventType.LINK_VIA_REDIRECT,\n        AuthEventType.REAUTH_VIA_REDIRECT,\n        AuthEventType.UNKNOWN\n      ],\n      resolver,\n      undefined,\n      bypassAuthState\n    );\n  }\n\n  /**\n   * Override the execute function; if we already have a redirect result, then\n   * just return it.\n   */\n  async execute(): Promise<UserCredentialInternal | null> {\n    let readyOutcome = redirectOutcomeMap.get(this.auth._key());\n    if (!readyOutcome) {\n      try {\n        const hasPendingRedirect = await _getAndClearPendingRedirectStatus(\n          this.resolver,\n          this.auth\n        );\n        const result = hasPendingRedirect ? await super.execute() : null;\n        readyOutcome = () => Promise.resolve(result);\n      } catch (e) {\n        readyOutcome = () => Promise.reject(e);\n      }\n\n      redirectOutcomeMap.set(this.auth._key(), readyOutcome);\n    }\n\n    // If we're not bypassing auth state, the ready outcome should be set to\n    // null.\n    if (!this.bypassAuthState) {\n      redirectOutcomeMap.set(this.auth._key(), () => Promise.resolve(null));\n    }\n\n    return readyOutcome();\n  }\n\n  async onAuthEvent(event: AuthEvent): Promise<void> {\n    if (event.type === AuthEventType.SIGN_IN_VIA_REDIRECT) {\n      return super.onAuthEvent(event);\n    } else if (event.type === AuthEventType.UNKNOWN) {\n      // This is a sentinel value indicating there's no pending redirect\n      this.resolve(null);\n      return;\n    }\n\n    if (event.eventId) {\n      const user = await this.auth._redirectUserForId(event.eventId);\n      if (user) {\n        this.user = user;\n        return super.onAuthEvent(event);\n      } else {\n        this.resolve(null);\n      }\n    }\n  }\n\n  async onExecution(): Promise<void> {}\n\n  cleanUp(): void {}\n}\n\nexport async function _getAndClearPendingRedirectStatus(\n  resolver: PopupRedirectResolverInternal,\n  auth: AuthInternal\n): Promise<boolean> {\n  const key = pendingRedirectKey(auth);\n  const persistence = resolverPersistence(resolver);\n  if (!(await persistence._isAvailable())) {\n    return false;\n  }\n  const hasPendingRedirect = (await persistence._get(key)) === 'true';\n  await persistence._remove(key);\n  return hasPendingRedirect;\n}\n\nexport async function _setPendingRedirectStatus(\n  resolver: PopupRedirectResolverInternal,\n  auth: AuthInternal\n): Promise<void> {\n  return resolverPersistence(resolver)._set(pendingRedirectKey(auth), 'true');\n}\n\nexport function _clearRedirectOutcomes(): void {\n  redirectOutcomeMap.clear();\n}\n\nexport function _overrideRedirectResult(\n  auth: AuthInternal,\n  result: () => Promise<UserCredentialInternal | null>\n): void {\n  redirectOutcomeMap.set(auth._key(), result);\n}\n\nfunction resolverPersistence(\n  resolver: PopupRedirectResolverInternal\n): PersistenceInternal {\n  return _getInstance(resolver._redirectPersistence);\n}\n\nfunction pendingRedirectKey(auth: AuthInternal): string {\n  return _persistenceKeyName(\n    PENDING_REDIRECT_KEY,\n    auth.config.apiKey,\n    auth.name\n  );\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Auth,\n  AuthProvider,\n  PopupRedirectResolver,\n  User,\n  UserCredential\n} from '../../model/public_types';\n\nimport { _castAuth } from '../../core/auth/auth_impl';\nimport { _assertLinkedStatus } from '../../core/user/link_unlink';\nimport {\n  _assertInstanceOf,\n  _serverAppCurrentUserOperationNotSupportedError\n} from '../../core/util/assert';\nimport { _generateEventId } from '../../core/util/event_id';\nimport { AuthEventType } from '../../model/popup_redirect';\nimport { UserInternal } from '../../model/user';\nimport { _withDefaultResolver } from '../../core/util/resolver';\nimport {\n  RedirectAction,\n  _setPendingRedirectStatus\n} from '../../core/strategies/redirect';\nimport { FederatedAuthProvider } from '../../core/providers/federated';\nimport { getModularInstance } from '@firebase/util';\nimport { _isFirebaseServerApp } from '@firebase/app';\n\n/**\n * Authenticates a Firebase client using a full-page redirect flow.\n *\n * @remarks\n * To handle the results and errors for this operation, refer to {@link getRedirectResult}.\n * Follow the {@link https://firebase.google.com/docs/auth/web/redirect-best-practices\n * | best practices} when using {@link signInWithRedirect}.\n *\n * This method does not work in a Node.js environment or with {@link Auth} instances created with a\n * {@link @firebase/app#FirebaseServerApp}.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new FacebookAuthProvider();\n * // You can add additional scopes to the provider:\n * provider.addScope('user_birthday');\n * // Start a sign in process for an unauthenticated user.\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a Facebook Access Token.\n *   const credential = provider.credentialFromResult(auth, result);\n *   const token = credential.accessToken;\n * }\n * // As this API can be used for sign-in, linking and reauthentication,\n * // check the operationType to determine what triggered this redirect\n * // operation.\n * const operationType = result.operationType;\n * ```\n *\n * @param auth - The {@link Auth} instance.\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\n *\n * @public\n */\nexport function signInWithRedirect(\n  auth: Auth,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<never> {\n  return _signInWithRedirect(auth, provider, resolver) as Promise<never>;\n}\n\nexport async function _signInWithRedirect(\n  auth: Auth,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<void | never> {\n  if (_isFirebaseServerApp(auth.app)) {\n    return Promise.reject(\n      _serverAppCurrentUserOperationNotSupportedError(auth)\n    );\n  }\n  const authInternal = _castAuth(auth);\n  _assertInstanceOf(auth, provider, FederatedAuthProvider);\n  // Wait for auth initialization to complete, this will process pending redirects and clear the\n  // PENDING_REDIRECT_KEY in persistence. This should be completed before starting a new\n  // redirect and creating a PENDING_REDIRECT_KEY entry.\n  await authInternal._initializationPromise;\n  const resolverInternal = _withDefaultResolver(authInternal, resolver);\n  await _setPendingRedirectStatus(resolverInternal, authInternal);\n\n  return resolverInternal._openRedirect(\n    authInternal,\n    provider,\n    AuthEventType.SIGN_IN_VIA_REDIRECT\n  );\n}\n\n/**\n * Reauthenticates the current user with the specified {@link OAuthProvider} using a full-page redirect flow.\n * @remarks\n * To handle the results and errors for this operation, refer to {@link getRedirectResult}.\n * Follow the {@link https://firebase.google.com/docs/auth/web/redirect-best-practices\n * | best practices} when using {@link reauthenticateWithRedirect}.\n *\n * This method does not work in a Node.js environment or with {@link Auth} instances\n * created with a {@link @firebase/app#FirebaseServerApp}.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new FacebookAuthProvider();\n * const result = await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * // Reauthenticate using a redirect.\n * await reauthenticateWithRedirect(result.user, provider);\n * // This will again trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * ```\n *\n * @param user - The user.\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\n *\n * @public\n */\nexport function reauthenticateWithRedirect(\n  user: User,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<never> {\n  return _reauthenticateWithRedirect(\n    user,\n    provider,\n    resolver\n  ) as Promise<never>;\n}\nexport async function _reauthenticateWithRedirect(\n  user: User,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<void | never> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  _assertInstanceOf(userInternal.auth, provider, FederatedAuthProvider);\n  if (_isFirebaseServerApp(userInternal.auth.app)) {\n    return Promise.reject(\n      _serverAppCurrentUserOperationNotSupportedError(userInternal.auth)\n    );\n  }\n  // Wait for auth initialization to complete, this will process pending redirects and clear the\n  // PENDING_REDIRECT_KEY in persistence. This should be completed before starting a new\n  // redirect and creating a PENDING_REDIRECT_KEY entry.\n  await userInternal.auth._initializationPromise;\n  // Allow the resolver to error before persisting the redirect user\n  const resolverInternal = _withDefaultResolver(userInternal.auth, resolver);\n  await _setPendingRedirectStatus(resolverInternal, userInternal.auth);\n\n  const eventId = await prepareUserForRedirect(userInternal);\n  return resolverInternal._openRedirect(\n    userInternal.auth,\n    provider,\n    AuthEventType.REAUTH_VIA_REDIRECT,\n    eventId\n  );\n}\n\n/**\n * Links the {@link OAuthProvider} to the user account using a full-page redirect flow.\n * @remarks\n * To handle the results and errors for this operation, refer to {@link getRedirectResult}.\n * Follow the {@link https://firebase.google.com/docs/auth/web/redirect-best-practices\n * | best practices} when using {@link linkWithRedirect}.\n *\n * This method does not work in a Node.js environment or with {@link Auth} instances\n * created with a {@link @firebase/app#FirebaseServerApp}.\n *\n * @example\n * ```javascript\n * // Sign in using some other provider.\n * const result = await signInWithEmailAndPassword(auth, email, password);\n * // Link using a redirect.\n * const provider = new FacebookAuthProvider();\n * await linkWithRedirect(result.user, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * ```\n *\n * @param user - The user.\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\n *\n * @public\n */\nexport function linkWithRedirect(\n  user: User,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<never> {\n  return _linkWithRedirect(user, provider, resolver) as Promise<never>;\n}\nexport async function _linkWithRedirect(\n  user: User,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<void | never> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  _assertInstanceOf(userInternal.auth, provider, FederatedAuthProvider);\n  // Wait for auth initialization to complete, this will process pending redirects and clear the\n  // PENDING_REDIRECT_KEY in persistence. This should be completed before starting a new\n  // redirect and creating a PENDING_REDIRECT_KEY entry.\n  await userInternal.auth._initializationPromise;\n  // Allow the resolver to error before persisting the redirect user\n  const resolverInternal = _withDefaultResolver(userInternal.auth, resolver);\n  await _assertLinkedStatus(false, userInternal, provider.providerId);\n  await _setPendingRedirectStatus(resolverInternal, userInternal.auth);\n\n  const eventId = await prepareUserForRedirect(userInternal);\n  return resolverInternal._openRedirect(\n    userInternal.auth,\n    provider,\n    AuthEventType.LINK_VIA_REDIRECT,\n    eventId\n  );\n}\n\n/**\n * Returns a {@link UserCredential} from the redirect-based sign-in flow.\n *\n * @remarks\n * If sign-in succeeded, returns the signed in user. If sign-in was unsuccessful, fails with an\n * error. If no redirect operation was called, returns `null`.\n *\n * This method does not work in a Node.js environment or with {@link Auth} instances created with a\n * {@link @firebase/app#FirebaseServerApp}.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new FacebookAuthProvider();\n * // You can add additional scopes to the provider:\n * provider.addScope('user_birthday');\n * // Start a sign in process for an unauthenticated user.\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a Facebook Access Token.\n *   const credential = provider.credentialFromResult(auth, result);\n *   const token = credential.accessToken;\n * }\n * // As this API can be used for sign-in, linking and reauthentication,\n * // check the operationType to determine what triggered this redirect\n * // operation.\n * const operationType = result.operationType;\n * ```\n *\n * @param auth - The {@link Auth} instance.\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\n *\n * @public\n */\nexport async function getRedirectResult(\n  auth: Auth,\n  resolver?: PopupRedirectResolver\n): Promise<UserCredential | null> {\n  await _castAuth(auth)._initializationPromise;\n  return _getRedirectResult(auth, resolver, false);\n}\n\nexport async function _getRedirectResult(\n  auth: Auth,\n  resolverExtern?: PopupRedirectResolver,\n  bypassAuthState = false\n): Promise<UserCredential | null> {\n  if (_isFirebaseServerApp(auth.app)) {\n    return Promise.reject(\n      _serverAppCurrentUserOperationNotSupportedError(auth)\n    );\n  }\n  const authInternal = _castAuth(auth);\n  const resolver = _withDefaultResolver(authInternal, resolverExtern);\n  const action = new RedirectAction(authInternal, resolver, bypassAuthState);\n  const result = await action.execute();\n\n  if (result && !bypassAuthState) {\n    delete result.user._redirectEventId;\n    await authInternal._persistUserIfCurrent(result.user as UserInternal);\n    await authInternal._setRedirectUser(null, resolverExtern);\n  }\n\n  return result;\n}\n\nasync function prepareUserForRedirect(user: UserInternal): Promise<string> {\n  const eventId = _generateEventId(`${user.uid}:::`);\n  user._redirectEventId = eventId;\n  await user.auth._setRedirectUser(user);\n  await user.auth._persistUserIfCurrent(user);\n  return eventId;\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AuthEvent,\n  AuthEventConsumer,\n  AuthEventType,\n  EventManager\n} from '../../model/popup_redirect';\nimport { AuthErrorCode } from '../errors';\nimport { AuthInternal } from '../../model/auth';\nimport { _createError } from '../util/assert';\n\n// The amount of time to store the UIDs of seen events; this is\n// set to 10 min by default\nconst EVENT_DUPLICATION_CACHE_DURATION_MS = 10 * 60 * 1000;\n\nexport class AuthEventManager implements EventManager {\n  private readonly cachedEventUids: Set<string> = new Set();\n  private readonly consumers: Set<AuthEventConsumer> = new Set();\n  protected queuedRedirectEvent: AuthEvent | null = null;\n  protected hasHandledPotentialRedirect = false;\n  private lastProcessedEventTime = Date.now();\n\n  constructor(private readonly auth: AuthInternal) {}\n\n  registerConsumer(authEventConsumer: AuthEventConsumer): void {\n    this.consumers.add(authEventConsumer);\n\n    if (\n      this.queuedRedirectEvent &&\n      this.isEventForConsumer(this.queuedRedirectEvent, authEventConsumer)\n    ) {\n      this.sendToConsumer(this.queuedRedirectEvent, authEventConsumer);\n      this.saveEventToCache(this.queuedRedirectEvent);\n      this.queuedRedirectEvent = null;\n    }\n  }\n\n  unregisterConsumer(authEventConsumer: AuthEventConsumer): void {\n    this.consumers.delete(authEventConsumer);\n  }\n\n  onEvent(event: AuthEvent): boolean {\n    // Check if the event has already been handled\n    if (this.hasEventBeenHandled(event)) {\n      return false;\n    }\n\n    let handled = false;\n    this.consumers.forEach(consumer => {\n      if (this.isEventForConsumer(event, consumer)) {\n        handled = true;\n        this.sendToConsumer(event, consumer);\n        this.saveEventToCache(event);\n      }\n    });\n\n    if (this.hasHandledPotentialRedirect || !isRedirectEvent(event)) {\n      // If we've already seen a redirect before, or this is a popup event,\n      // bail now\n      return handled;\n    }\n\n    this.hasHandledPotentialRedirect = true;\n\n    // If the redirect wasn't handled, hang on to it\n    if (!handled) {\n      this.queuedRedirectEvent = event;\n      handled = true;\n    }\n\n    return handled;\n  }\n\n  private sendToConsumer(event: AuthEvent, consumer: AuthEventConsumer): void {\n    if (event.error && !isNullRedirectEvent(event)) {\n      const code =\n        (event.error.code?.split('auth/')[1] as AuthErrorCode) ||\n        AuthErrorCode.INTERNAL_ERROR;\n      consumer.onError(_createError(this.auth, code));\n    } else {\n      consumer.onAuthEvent(event);\n    }\n  }\n\n  private isEventForConsumer(\n    event: AuthEvent,\n    consumer: AuthEventConsumer\n  ): boolean {\n    const eventIdMatches =\n      consumer.eventId === null ||\n      (!!event.eventId && event.eventId === consumer.eventId);\n    return consumer.filter.includes(event.type) && eventIdMatches;\n  }\n\n  private hasEventBeenHandled(event: AuthEvent): boolean {\n    if (\n      Date.now() - this.lastProcessedEventTime >=\n      EVENT_DUPLICATION_CACHE_DURATION_MS\n    ) {\n      this.cachedEventUids.clear();\n    }\n\n    return this.cachedEventUids.has(eventUid(event));\n  }\n\n  private saveEventToCache(event: AuthEvent): void {\n    this.cachedEventUids.add(eventUid(event));\n    this.lastProcessedEventTime = Date.now();\n  }\n}\n\nfunction eventUid(e: AuthEvent): string {\n  return [e.type, e.eventId, e.sessionId, e.tenantId].filter(v => v).join('-');\n}\n\nfunction isNullRedirectEvent({ type, error }: AuthEvent): boolean {\n  return (\n    type === AuthEventType.UNKNOWN &&\n    error?.code === `auth/${AuthErrorCode.NO_AUTH_EVENT}`\n  );\n}\n\nfunction isRedirectEvent(event: AuthEvent): boolean {\n  switch (event.type) {\n    case AuthEventType.SIGN_IN_VIA_REDIRECT:\n    case AuthEventType.LINK_VIA_REDIRECT:\n    case AuthEventType.REAUTH_VIA_REDIRECT:\n      return true;\n    case AuthEventType.UNKNOWN:\n      return isNullRedirectEvent(event);\n    default:\n      return false;\n  }\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _performApiRequest, Endpoint, HttpMethod } from '../index';\nimport { Auth } from '../../model/public_types';\n\nexport interface GetProjectConfigRequest {\n  androidPackageName?: string;\n  iosBundleId?: string;\n}\n\nexport interface GetProjectConfigResponse {\n  authorizedDomains: string[];\n}\n\nexport async function _getProjectConfig(\n  auth: Auth,\n  request: GetProjectConfigRequest = {}\n): Promise<GetProjectConfigResponse> {\n  return _performApiRequest<GetProjectConfigRequest, GetProjectConfigResponse>(\n    auth,\n    HttpMethod.GET,\n    Endpoint.GET_PROJECT_CONFIG,\n    request\n  );\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _getProjectConfig } from '../../api/project_config/get_project_config';\nimport { AuthInternal } from '../../model/auth';\nimport { AuthErrorCode } from '../errors';\nimport { _fail } from './assert';\nimport { _getCurrentUrl } from './location';\n\nconst IP_ADDRESS_REGEX = /^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/;\nconst HTTP_REGEX = /^https?/;\n\nexport async function _validateOrigin(auth: AuthInternal): Promise<void> {\n  // Skip origin validation if we are in an emulated environment\n  if (auth.config.emulator) {\n    return;\n  }\n\n  const { authorizedDomains } = await _getProjectConfig(auth);\n\n  for (const domain of authorizedDomains) {\n    try {\n      if (matchDomain(domain)) {\n        return;\n      }\n    } catch {\n      // Do nothing if there's a URL error; just continue searching\n    }\n  }\n\n  // In the old SDK, this error also provides helpful messages.\n  _fail(auth, AuthErrorCode.INVALID_ORIGIN);\n}\n\nfunction matchDomain(expected: string): boolean {\n  const currentUrl = _getCurrentUrl();\n  const { protocol, hostname } = new URL(currentUrl);\n  if (expected.startsWith('chrome-extension://')) {\n    const ceUrl = new URL(expected);\n\n    if (ceUrl.hostname === '' && hostname === '') {\n      // For some reason we're not parsing chrome URLs properly\n      return (\n        protocol === 'chrome-extension:' &&\n        expected.replace('chrome-extension://', '') ===\n          currentUrl.replace('chrome-extension://', '')\n      );\n    }\n\n    return protocol === 'chrome-extension:' && ceUrl.hostname === hostname;\n  }\n\n  if (!HTTP_REGEX.test(protocol)) {\n    return false;\n  }\n\n  if (IP_ADDRESS_REGEX.test(expected)) {\n    // The domain has to be exactly equal to the pattern, as an IP domain will\n    // only contain the IP, no extra character.\n    return hostname === expected;\n  }\n\n  // Dots in pattern should be escaped.\n  const escapedDomainPattern = expected.replace(/\\./g, '\\\\.');\n  // Non ip address domains.\n  // domain.com = *.domain.com OR domain.com\n  const re = new RegExp(\n    '^(.+\\\\.' + escapedDomainPattern + '|' + escapedDomainPattern + ')$',\n    'i'\n  );\n  return re.test(hostname);\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthErrorCode } from '../../core/errors';\nimport { _createError } from '../../core/util/assert';\nimport { Delay } from '../../core/util/delay';\nimport { AuthInternal } from '../../model/auth';\nimport { _window } from '../auth_window';\nimport * as js from '../load_js';\n\nconst NETWORK_TIMEOUT = new Delay(30000, 60000);\n\n/**\n * Reset unlaoded GApi modules. If gapi.load fails due to a network error,\n * it will stop working after a retrial. This is a hack to fix this issue.\n */\nfunction resetUnloadedGapiModules(): void {\n  // Clear last failed gapi.load state to force next gapi.load to first\n  // load the failed gapi.iframes module.\n  // Get gapix.beacon context.\n  const beacon = _window().___jsl;\n  // Get current hint.\n  if (beacon?.H) {\n    // Get gapi hint.\n    for (const hint of Object.keys(beacon.H)) {\n      // Requested modules.\n      beacon.H[hint].r = beacon.H[hint].r || [];\n      // Loaded modules.\n      beacon.H[hint].L = beacon.H[hint].L || [];\n      // Set requested modules to a copy of the loaded modules.\n      beacon.H[hint].r = [...beacon.H[hint].L];\n      // Clear pending callbacks.\n      if (beacon.CP) {\n        for (let i = 0; i < beacon.CP.length; i++) {\n          // Remove all failed pending callbacks.\n          beacon.CP[i] = null;\n        }\n      }\n    }\n  }\n}\n\nfunction loadGapi(auth: AuthInternal): Promise<gapi.iframes.Context> {\n  return new Promise<gapi.iframes.Context>((resolve, reject) => {\n    // Function to run when gapi.load is ready.\n    function loadGapiIframe(): void {\n      // The developer may have tried to previously run gapi.load and failed.\n      // Run this to fix that.\n      resetUnloadedGapiModules();\n      gapi.load('gapi.iframes', {\n        callback: () => {\n          resolve(gapi.iframes.getContext());\n        },\n        ontimeout: () => {\n          // The above reset may be sufficient, but having this reset after\n          // failure ensures that if the developer calls gapi.load after the\n          // connection is re-established and before another attempt to embed\n          // the iframe, it would work and would not be broken because of our\n          // failed attempt.\n          // Timeout when gapi.iframes.Iframe not loaded.\n          resetUnloadedGapiModules();\n          reject(_createError(auth, AuthErrorCode.NETWORK_REQUEST_FAILED));\n        },\n        timeout: NETWORK_TIMEOUT.get()\n      });\n    }\n\n    if (_window().gapi?.iframes?.Iframe) {\n      // If gapi.iframes.Iframe available, resolve.\n      resolve(gapi.iframes.getContext());\n    } else if (!!_window().gapi?.load) {\n      // Gapi loader ready, load gapi.iframes.\n      loadGapiIframe();\n    } else {\n      // Create a new iframe callback when this is called so as not to overwrite\n      // any previous defined callback. This happens if this method is called\n      // multiple times in parallel and could result in the later callback\n      // overwriting the previous one. This would end up with a iframe\n      // timeout.\n      const cbName = js._generateCallbackName('iframefcb');\n      // GApi loader not available, dynamically load platform.js.\n      _window()[cbName] = () => {\n        // GApi loader should be ready.\n        if (!!gapi.load) {\n          loadGapiIframe();\n        } else {\n          // Gapi loader failed, throw error.\n          reject(_createError(auth, AuthErrorCode.NETWORK_REQUEST_FAILED));\n        }\n      };\n      // Load GApi loader.\n      return js\n        ._loadJS(`${js._gapiScriptUrl()}?onload=${cbName}`)\n        .catch(e => reject(e));\n    }\n  }).catch(error => {\n    // Reset cached promise to allow for retrial.\n    cachedGApiLoader = null;\n    throw error;\n  });\n}\n\nlet cachedGApiLoader: Promise<gapi.iframes.Context> | null = null;\nexport function _loadGapi(auth: AuthInternal): Promise<gapi.iframes.Context> {\n  cachedGApiLoader = cachedGApiLoader || loadGapi(auth);\n  return cachedGApiLoader;\n}\n\nexport function _resetLoader(): void {\n  cachedGApiLoader = null;\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SDK_VERSION } from '@firebase/app';\nimport { querystring } from '@firebase/util';\nimport { DefaultConfig } from '../../../internal';\n\nimport { AuthErrorCode } from '../../core/errors';\nimport { _assert, _createError } from '../../core/util/assert';\nimport { Delay } from '../../core/util/delay';\nimport { _emulatorUrl } from '../../core/util/emulator';\nimport { AuthInternal } from '../../model/auth';\nimport { _window } from '../auth_window';\nimport * as gapiLoader from './gapi';\n\nconst PING_TIMEOUT = new Delay(5000, 15000);\nconst IFRAME_PATH = '__/auth/iframe';\nconst EMULATED_IFRAME_PATH = 'emulator/auth/iframe';\n\nconst IFRAME_ATTRIBUTES = {\n  style: {\n    position: 'absolute',\n    top: '-100px',\n    width: '1px',\n    height: '1px'\n  },\n  'aria-hidden': 'true',\n  tabindex: '-1'\n};\n\n// Map from apiHost to endpoint ID for passing into iframe. In current SDK, apiHost can be set to\n// anything (not from a list of endpoints with IDs as in legacy), so this is the closest we can get.\nconst EID_FROM_APIHOST = new Map([\n  [DefaultConfig.API_HOST, 'p'], // production\n  ['staging-identitytoolkit.sandbox.googleapis.com', 's'], // staging\n  ['test-identitytoolkit.sandbox.googleapis.com', 't'] // test\n]);\n\nfunction getIframeUrl(auth: AuthInternal): string {\n  const config = auth.config;\n  _assert(config.authDomain, auth, AuthErrorCode.MISSING_AUTH_DOMAIN);\n  const url = config.emulator\n    ? _emulatorUrl(config, EMULATED_IFRAME_PATH)\n    : `https://${auth.config.authDomain}/${IFRAME_PATH}`;\n\n  const params: Record<string, string> = {\n    apiKey: config.apiKey,\n    appName: auth.name,\n    v: SDK_VERSION\n  };\n  const eid = EID_FROM_APIHOST.get(auth.config.apiHost);\n  if (eid) {\n    params.eid = eid;\n  }\n  const frameworks = auth._getFrameworks();\n  if (frameworks.length) {\n    params.fw = frameworks.join(',');\n  }\n  return `${url}?${querystring(params).slice(1)}`;\n}\n\nexport async function _openIframe(\n  auth: AuthInternal\n): Promise<gapi.iframes.Iframe> {\n  const context = await gapiLoader._loadGapi(auth);\n  const gapi = _window().gapi;\n  _assert(gapi, auth, AuthErrorCode.INTERNAL_ERROR);\n  return context.open(\n    {\n      where: document.body,\n      url: getIframeUrl(auth),\n      messageHandlersFilter: gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER,\n      attributes: IFRAME_ATTRIBUTES,\n      dontclear: true\n    },\n    (iframe: gapi.iframes.Iframe) =>\n      new Promise(async (resolve, reject) => {\n        await iframe.restyle({\n          // Prevent iframe from closing on mouse out.\n          setHideOnLeave: false\n        });\n\n        const networkError = _createError(\n          auth,\n          AuthErrorCode.NETWORK_REQUEST_FAILED\n        );\n        // Confirm iframe is correctly loaded.\n        // To fallback on failure, set a timeout.\n        const networkErrorTimer = _window().setTimeout(() => {\n          reject(networkError);\n        }, PING_TIMEOUT.get());\n        // Clear timer and resolve pending iframe ready promise.\n        function clearTimerAndResolve(): void {\n          _window().clearTimeout(networkErrorTimer);\n          resolve(iframe);\n        }\n        // This returns an IThenable. However the reject part does not call\n        // when the iframe is not loaded.\n        iframe.ping(clearTimerAndResolve).then(clearTimerAndResolve, () => {\n          reject(networkError);\n        });\n      })\n  );\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getUA } from '@firebase/util';\n\nimport { AuthErrorCode } from '../../core/errors';\nimport { _assert } from '../../core/util/assert';\nimport {\n  _isChromeIOS,\n  _isFirefox,\n  _isIOSStandalone\n} from '../../core/util/browser';\nimport { AuthInternal } from '../../model/auth';\n\nconst BASE_POPUP_OPTIONS = {\n  location: 'yes',\n  resizable: 'yes',\n  statusbar: 'yes',\n  toolbar: 'no'\n};\n\nconst DEFAULT_WIDTH = 500;\nconst DEFAULT_HEIGHT = 600;\nconst TARGET_BLANK = '_blank';\n\nconst FIREFOX_EMPTY_URL = 'http://localhost';\n\nexport class AuthPopup {\n  associatedEvent: string | null = null;\n\n  constructor(readonly window: Window | null) {}\n\n  close(): void {\n    if (this.window) {\n      try {\n        this.window.close();\n      } catch (e) {}\n    }\n  }\n}\n\nexport function _open(\n  auth: AuthInternal,\n  url?: string,\n  name?: string,\n  width = DEFAULT_WIDTH,\n  height = DEFAULT_HEIGHT\n): AuthPopup {\n  const top = Math.max((window.screen.availHeight - height) / 2, 0).toString();\n  const left = Math.max((window.screen.availWidth - width) / 2, 0).toString();\n  let target = '';\n\n  const options: { [key: string]: string } = {\n    ...BASE_POPUP_OPTIONS,\n    width: width.toString(),\n    height: height.toString(),\n    top,\n    left\n  };\n\n  // Chrome iOS 7 and 8 is returning an undefined popup win when target is\n  // specified, even though the popup is not necessarily blocked.\n  const ua = getUA().toLowerCase();\n\n  if (name) {\n    target = _isChromeIOS(ua) ? TARGET_BLANK : name;\n  }\n\n  if (_isFirefox(ua)) {\n    // Firefox complains when invalid URLs are popped out. Hacky way to bypass.\n    url = url || FIREFOX_EMPTY_URL;\n    // Firefox disables by default scrolling on popup windows, which can create\n    // issues when the user has many Google accounts, for instance.\n    options.scrollbars = 'yes';\n  }\n\n  const optionsString = Object.entries(options).reduce(\n    (accum, [key, value]) => `${accum}${key}=${value},`,\n    ''\n  );\n\n  if (_isIOSStandalone(ua) && target !== '_self') {\n    openAsNewWindowIOS(url || '', target);\n    return new AuthPopup(null);\n  }\n\n  // about:blank getting sanitized causing browsers like IE/Edge to display\n  // brief error message before redirecting to handler.\n  const newWin = window.open(url || '', target, optionsString);\n  _assert(newWin, auth, AuthErrorCode.POPUP_BLOCKED);\n\n  // Flaky on IE edge, encapsulate with a try and catch.\n  try {\n    newWin.focus();\n  } catch (e) {}\n\n  return new AuthPopup(newWin);\n}\n\nfunction openAsNewWindowIOS(url: string, target: string): void {\n  const el = document.createElement('a');\n  el.href = url;\n  el.target = target;\n  const click = document.createEvent('MouseEvent');\n  click.initMouseEvent(\n    'click',\n    true,\n    true,\n    window,\n    1,\n    0,\n    0,\n    0,\n    0,\n    false,\n    false,\n    false,\n    false,\n    1,\n    null\n  );\n  el.dispatchEvent(click);\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SDK_VERSION } from '@firebase/app';\nimport { AuthProvider } from '../../model/public_types';\nimport { ApiKey, AppName, AuthInternal } from '../../model/auth';\nimport { AuthEventType } from '../../model/popup_redirect';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from './assert';\nimport { isEmpty, querystring } from '@firebase/util';\nimport { _emulatorUrl } from './emulator';\nimport { FederatedAuthProvider } from '../providers/federated';\nimport { BaseOAuthProvider } from '../providers/oauth';\n\n/**\n * URL for Authentication widget which will initiate the OAuth handshake\n *\n * @internal\n */\nconst WIDGET_PATH = '__/auth/handler';\n\n/**\n * URL for emulated environment\n *\n * @internal\n */\nconst EMULATOR_WIDGET_PATH = 'emulator/auth/handler';\n\n/**\n * Fragment name for the App Check token that gets passed to the widget\n *\n * @internal\n */\nconst FIREBASE_APP_CHECK_FRAGMENT_ID = encodeURIComponent('fac');\n\n// eslint-disable-next-line @typescript-eslint/consistent-type-definitions\ntype WidgetParams = {\n  apiKey: ApiKey;\n  appName: AppName;\n  authType: AuthEventType;\n  redirectUrl?: string;\n  v: string;\n  providerId?: string;\n  scopes?: string;\n  customParameters?: string;\n  eventId?: string;\n  tid?: string;\n} & { [key: string]: string | undefined };\n\nexport async function _getRedirectUrl(\n  auth: AuthInternal,\n  provider: AuthProvider,\n  authType: AuthEventType,\n  redirectUrl?: string,\n  eventId?: string,\n  additionalParams?: Record<string, string>\n): Promise<string> {\n  _assert(auth.config.authDomain, auth, AuthErrorCode.MISSING_AUTH_DOMAIN);\n  _assert(auth.config.apiKey, auth, AuthErrorCode.INVALID_API_KEY);\n\n  const params: WidgetParams = {\n    apiKey: auth.config.apiKey,\n    appName: auth.name,\n    authType,\n    redirectUrl,\n    v: SDK_VERSION,\n    eventId\n  };\n\n  if (provider instanceof FederatedAuthProvider) {\n    provider.setDefaultLanguage(auth.languageCode);\n    params.providerId = provider.providerId || '';\n    if (!isEmpty(provider.getCustomParameters())) {\n      params.customParameters = JSON.stringify(provider.getCustomParameters());\n    }\n\n    // TODO set additionalParams from the provider as well?\n    for (const [key, value] of Object.entries(additionalParams || {})) {\n      params[key] = value;\n    }\n  }\n\n  if (provider instanceof BaseOAuthProvider) {\n    const scopes = provider.getScopes().filter(scope => scope !== '');\n    if (scopes.length > 0) {\n      params.scopes = scopes.join(',');\n    }\n  }\n\n  if (auth.tenantId) {\n    params.tid = auth.tenantId;\n  }\n\n  // TODO: maybe set eid as endipointId\n  // TODO: maybe set fw as Frameworks.join(\",\")\n\n  const paramsDict = params as Record<string, string | number>;\n  for (const key of Object.keys(paramsDict)) {\n    if (paramsDict[key] === undefined) {\n      delete paramsDict[key];\n    }\n  }\n\n  // Sets the App Check token to pass to the widget\n  const appCheckToken = await auth._getAppCheckToken();\n  const appCheckTokenFragment = appCheckToken\n    ? `#${FIREBASE_APP_CHECK_FRAGMENT_ID}=${encodeURIComponent(appCheckToken)}`\n    : '';\n\n  // Start at index 1 to skip the leading '&' in the query string\n  return `${getHandlerBase(auth)}?${querystring(paramsDict).slice(\n    1\n  )}${appCheckTokenFragment}`;\n}\n\nfunction getHandlerBase({ config }: AuthInternal): string {\n  if (!config.emulator) {\n    return `https://${config.authDomain}/${WIDGET_PATH}`;\n  }\n\n  return _emulatorUrl(config, EMULATOR_WIDGET_PATH);\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthProvider, PopupRedirectResolver } from '../model/public_types';\n\nimport { AuthEventManager } from '../core/auth/auth_event_manager';\nimport { AuthErrorCode } from '../core/errors';\nimport { _assert, debugAssert, _fail } from '../core/util/assert';\nimport { _generateEventId } from '../core/util/event_id';\nimport { _getCurrentUrl } from '../core/util/location';\nimport { _validateOrigin } from '../core/util/validate_origin';\nimport { AuthInternal } from '../model/auth';\nimport {\n  AuthEventType,\n  EventManager,\n  GapiAuthEvent,\n  GapiOutcome,\n  PopupRedirectResolverInternal\n} from '../model/popup_redirect';\nimport { _setWindowLocation } from './auth_window';\nimport { _openIframe } from './iframe/iframe';\nimport { browserSessionPersistence } from './persistence/session_storage';\nimport { _open, AuthPopup } from './util/popup';\nimport { _getRedirectResult } from './strategies/redirect';\nimport { _getRedirectUrl } from '../core/util/handler';\nimport { _isIOS, _isMobileBrowser, _isSafari } from '../core/util/browser';\nimport { _overrideRedirectResult } from '../core/strategies/redirect';\n\n/**\n * The special web storage event\n *\n */\nconst WEB_STORAGE_SUPPORT_KEY = 'webStorageSupport';\n\ninterface WebStorageSupportMessage extends gapi.iframes.Message {\n  [index: number]: Record<string, boolean>;\n}\n\ninterface ManagerOrPromise {\n  manager?: EventManager;\n  promise?: Promise<EventManager>;\n}\n\nclass BrowserPopupRedirectResolver implements PopupRedirectResolverInternal {\n  private readonly eventManagers: Record<string, ManagerOrPromise> = {};\n  private readonly iframes: Record<string, gapi.iframes.Iframe> = {};\n  private readonly originValidationPromises: Record<string, Promise<void>> = {};\n\n  readonly _redirectPersistence = browserSessionPersistence;\n\n  // Wrapping in async even though we don't await anywhere in order\n  // to make sure errors are raised as promise rejections\n  async _openPopup(\n    auth: AuthInternal,\n    provider: AuthProvider,\n    authType: AuthEventType,\n    eventId?: string\n  ): Promise<AuthPopup> {\n    debugAssert(\n      this.eventManagers[auth._key()]?.manager,\n      '_initialize() not called before _openPopup()'\n    );\n\n    const url = await _getRedirectUrl(\n      auth,\n      provider,\n      authType,\n      _getCurrentUrl(),\n      eventId\n    );\n    return _open(auth, url, _generateEventId());\n  }\n\n  async _openRedirect(\n    auth: AuthInternal,\n    provider: AuthProvider,\n    authType: AuthEventType,\n    eventId?: string\n  ): Promise<never> {\n    await this._originValidation(auth);\n    const url = await _getRedirectUrl(\n      auth,\n      provider,\n      authType,\n      _getCurrentUrl(),\n      eventId\n    );\n    _setWindowLocation(url);\n    return new Promise(() => {});\n  }\n\n  _initialize(auth: AuthInternal): Promise<EventManager> {\n    const key = auth._key();\n    if (this.eventManagers[key]) {\n      const { manager, promise } = this.eventManagers[key];\n      if (manager) {\n        return Promise.resolve(manager);\n      } else {\n        debugAssert(promise, 'If manager is not set, promise should be');\n        return promise;\n      }\n    }\n\n    const promise = this.initAndGetManager(auth);\n    this.eventManagers[key] = { promise };\n\n    // If the promise is rejected, the key should be removed so that the\n    // operation can be retried later.\n    promise.catch(() => {\n      delete this.eventManagers[key];\n    });\n\n    return promise;\n  }\n\n  private async initAndGetManager(auth: AuthInternal): Promise<EventManager> {\n    const iframe = await _openIframe(auth);\n    const manager = new AuthEventManager(auth);\n    iframe.register<GapiAuthEvent>(\n      'authEvent',\n      (iframeEvent: GapiAuthEvent | null) => {\n        _assert(iframeEvent?.authEvent, auth, AuthErrorCode.INVALID_AUTH_EVENT);\n        // TODO: Consider splitting redirect and popup events earlier on\n\n        const handled = manager.onEvent(iframeEvent.authEvent);\n        return { status: handled ? GapiOutcome.ACK : GapiOutcome.ERROR };\n      },\n      gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER\n    );\n\n    this.eventManagers[auth._key()] = { manager };\n    this.iframes[auth._key()] = iframe;\n    return manager;\n  }\n\n  _isIframeWebStorageSupported(\n    auth: AuthInternal,\n    cb: (supported: boolean) => unknown\n  ): void {\n    const iframe = this.iframes[auth._key()];\n    iframe.send<gapi.iframes.Message, WebStorageSupportMessage>(\n      WEB_STORAGE_SUPPORT_KEY,\n      { type: WEB_STORAGE_SUPPORT_KEY },\n      result => {\n        const isSupported = result?.[0]?.[WEB_STORAGE_SUPPORT_KEY];\n        if (isSupported !== undefined) {\n          cb(!!isSupported);\n        }\n\n        _fail(auth, AuthErrorCode.INTERNAL_ERROR);\n      },\n      gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER\n    );\n  }\n\n  _originValidation(auth: AuthInternal): Promise<void> {\n    const key = auth._key();\n    if (!this.originValidationPromises[key]) {\n      this.originValidationPromises[key] = _validateOrigin(auth);\n    }\n\n    return this.originValidationPromises[key];\n  }\n\n  get _shouldInitProactively(): boolean {\n    // Mobile browsers and Safari need to optimistically initialize\n    return _isMobileBrowser() || _isSafari() || _isIOS();\n  }\n\n  _completeRedirectFn = _getRedirectResult;\n\n  _overrideRedirectResult = _overrideRedirectResult;\n}\n\n/**\n * An implementation of {@link PopupRedirectResolver} suitable for browser\n * based applications.\n *\n * @remarks\n * This method does not work in a Node.js environment.\n *\n * @public\n */\nexport const browserPopupRedirectResolver: PopupRedirectResolver =\n  BrowserPopupRedirectResolver;\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { FactorId, MultiFactorAssertion } from '../model/public_types';\nimport { debugFail } from '../core/util/assert';\nimport { MultiFactorSessionImpl, MultiFactorSessionType } from './mfa_session';\nimport { FinalizeMfaResponse } from '../api/authentication/mfa';\nimport { AuthInternal } from '../model/auth';\n\nexport abstract class MultiFactorAssertionImpl implements MultiFactorAssertion {\n  protected constructor(readonly factorId: FactorId) {}\n\n  _process(\n    auth: AuthInternal,\n    session: MultiFactorSessionImpl,\n    displayName?: string | null\n  ): Promise<FinalizeMfaResponse> {\n    switch (session.type) {\n      case MultiFactorSessionType.ENROLL:\n        return this._finalizeEnroll(auth, session.credential, displayName);\n      case MultiFactorSessionType.SIGN_IN:\n        return this._finalizeSignIn(auth, session.credential);\n      default:\n        return debugFail('unexpected MultiFactorSessionType');\n    }\n  }\n\n  abstract _finalizeEnroll(\n    auth: AuthInternal,\n    idToken: string,\n    displayName?: string | null\n  ): Promise<FinalizeMfaResponse>;\n  abstract _finalizeSignIn(\n    auth: AuthInternal,\n    mfaPendingCredential: string\n  ): Promise<FinalizeMfaResponse>;\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  FactorId,\n  PhoneMultiFactorAssertion\n} from '../../../model/public_types';\n\nimport { MultiFactorAssertionImpl } from '../../../mfa/mfa_assertion';\nimport { AuthInternal } from '../../../model/auth';\nimport { finalizeEnrollPhoneMfa } from '../../../api/account_management/mfa';\nimport { PhoneAuthCredential } from '../../../core/credentials/phone';\nimport {\n  finalizeSignInPhoneMfa,\n  FinalizeMfaResponse\n} from '../../../api/authentication/mfa';\n\n/**\n * {@inheritdoc PhoneMultiFactorAssertion}\n *\n * @public\n */\nexport class PhoneMultiFactorAssertionImpl\n  extends MultiFactorAssertionImpl\n  implements PhoneMultiFactorAssertion\n{\n  private constructor(private readonly credential: PhoneAuthCredential) {\n    super(FactorId.PHONE);\n  }\n\n  /** @internal */\n  static _fromCredential(\n    credential: PhoneAuthCredential\n  ): PhoneMultiFactorAssertionImpl {\n    return new PhoneMultiFactorAssertionImpl(credential);\n  }\n\n  /** @internal */\n  _finalizeEnroll(\n    auth: AuthInternal,\n    idToken: string,\n    displayName?: string | null\n  ): Promise<FinalizeMfaResponse> {\n    return finalizeEnrollPhoneMfa(auth, {\n      idToken,\n      displayName,\n      phoneVerificationInfo: this.credential._makeVerificationRequest()\n    });\n  }\n\n  /** @internal */\n  _finalizeSignIn(\n    auth: AuthInternal,\n    mfaPendingCredential: string\n  ): Promise<FinalizeMfaResponse> {\n    return finalizeSignInPhoneMfa(auth, {\n      mfaPendingCredential,\n      phoneVerificationInfo: this.credential._makeVerificationRequest()\n    });\n  }\n}\n\n/**\n * Provider for generating a {@link PhoneMultiFactorAssertion}.\n *\n * @public\n */\nexport class PhoneMultiFactorGenerator {\n  private constructor() {}\n\n  /**\n   * Provides a {@link PhoneMultiFactorAssertion} to confirm ownership of the phone second factor.\n   *\n   * @remarks\n   * This method does not work in a Node.js environment.\n   *\n   * @param phoneAuthCredential - A credential provided by {@link PhoneAuthProvider.credential}.\n   * @returns A {@link PhoneMultiFactorAssertion} which can be used with\n   * {@link MultiFactorResolver.resolveSignIn}\n   */\n  static assertion(credential: PhoneAuthCredential): PhoneMultiFactorAssertion {\n    return PhoneMultiFactorAssertionImpl._fromCredential(credential);\n  }\n\n  /**\n   * The identifier of the phone second factor: `phone`.\n   */\n  static FACTOR_ID = 'phone';\n}\n", "/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  TotpMultiFactorAssertion,\n  MultiFactorSession,\n  FactorId\n} from '../../model/public_types';\nimport { AuthInternal } from '../../model/auth';\nimport {\n  finalizeEnrollTotpMfa,\n  startEnrollTotpMfa,\n  StartTotpMfaEnrollmentResponse,\n  TotpVerificationInfo\n} from '../../api/account_management/mfa';\nimport {\n  FinalizeMfaResponse,\n  finalizeSignInTotpMfa\n} from '../../api/authentication/mfa';\nimport { MultiFactorAssertionImpl } from '../../mfa/mfa_assertion';\nimport { MultiFactorSessionImpl } from '../mfa_session';\nimport { AuthErrorCode } from '../../core/errors';\nimport { _assert } from '../../core/util/assert';\n\n/**\n * Provider for generating a {@link TotpMultiFactorAssertion}.\n *\n * @public\n */\nexport class TotpMultiFactorGenerator {\n  /**\n   * Provides a {@link TotpMultiFactorAssertion} to confirm ownership of\n   * the TOTP (time-based one-time password) second factor.\n   * This assertion is used to complete enrollment in TOTP second factor.\n   *\n   * @param secret A {@link TotpSecret} containing the shared secret key and other TOTP parameters.\n   * @param oneTimePassword One-time password from TOTP App.\n   * @returns A {@link TotpMultiFactorAssertion} which can be used with\n   * {@link MultiFactorUser.enroll}.\n   */\n  static assertionForEnrollment(\n    secret: TotpSecret,\n    oneTimePassword: string\n  ): TotpMultiFactorAssertion {\n    return TotpMultiFactorAssertionImpl._fromSecret(secret, oneTimePassword);\n  }\n\n  /**\n   * Provides a {@link TotpMultiFactorAssertion} to confirm ownership of the TOTP second factor.\n   * This assertion is used to complete signIn with TOTP as the second factor.\n   *\n   * @param enrollmentId identifies the enrolled TOTP second factor.\n   * @param oneTimePassword One-time password from TOTP App.\n   * @returns A {@link TotpMultiFactorAssertion} which can be used with\n   * {@link MultiFactorResolver.resolveSignIn}.\n   */\n  static assertionForSignIn(\n    enrollmentId: string,\n    oneTimePassword: string\n  ): TotpMultiFactorAssertion {\n    return TotpMultiFactorAssertionImpl._fromEnrollmentId(\n      enrollmentId,\n      oneTimePassword\n    );\n  }\n\n  /**\n   * Returns a promise to {@link TotpSecret} which contains the TOTP shared secret key and other parameters.\n   * Creates a TOTP secret as part of enrolling a TOTP second factor.\n   * Used for generating a QR code URL or inputting into a TOTP app.\n   * This method uses the auth instance corresponding to the user in the multiFactorSession.\n   *\n   * @param session The {@link MultiFactorSession} that the user is part of.\n   * @returns A promise to {@link TotpSecret}.\n   */\n  static async generateSecret(\n    session: MultiFactorSession\n  ): Promise<TotpSecret> {\n    const mfaSession = session as MultiFactorSessionImpl;\n    _assert(\n      typeof mfaSession.user?.auth !== 'undefined',\n      AuthErrorCode.INTERNAL_ERROR\n    );\n    const response = await startEnrollTotpMfa(mfaSession.user.auth, {\n      idToken: mfaSession.credential,\n      totpEnrollmentInfo: {}\n    });\n    return TotpSecret._fromStartTotpMfaEnrollmentResponse(\n      response,\n      mfaSession.user.auth\n    );\n  }\n\n  /**\n   * The identifier of the TOTP second factor: `totp`.\n   */\n  static FACTOR_ID: 'totp' = FactorId.TOTP;\n}\n\nexport class TotpMultiFactorAssertionImpl\n  extends MultiFactorAssertionImpl\n  implements TotpMultiFactorAssertion\n{\n  constructor(\n    readonly otp: string,\n    readonly enrollmentId?: string,\n    readonly secret?: TotpSecret\n  ) {\n    super(FactorId.TOTP);\n  }\n\n  /** @internal */\n  static _fromSecret(\n    secret: TotpSecret,\n    otp: string\n  ): TotpMultiFactorAssertionImpl {\n    return new TotpMultiFactorAssertionImpl(otp, undefined, secret);\n  }\n\n  /** @internal */\n  static _fromEnrollmentId(\n    enrollmentId: string,\n    otp: string\n  ): TotpMultiFactorAssertionImpl {\n    return new TotpMultiFactorAssertionImpl(otp, enrollmentId);\n  }\n\n  /** @internal */\n  async _finalizeEnroll(\n    auth: AuthInternal,\n    idToken: string,\n    displayName?: string | null\n  ): Promise<FinalizeMfaResponse> {\n    _assert(\n      typeof this.secret !== 'undefined',\n      auth,\n      AuthErrorCode.ARGUMENT_ERROR\n    );\n    return finalizeEnrollTotpMfa(auth, {\n      idToken,\n      displayName,\n      totpVerificationInfo: this.secret._makeTotpVerificationInfo(this.otp)\n    });\n  }\n\n  /** @internal */\n  async _finalizeSignIn(\n    auth: AuthInternal,\n    mfaPendingCredential: string\n  ): Promise<FinalizeMfaResponse> {\n    _assert(\n      this.enrollmentId !== undefined && this.otp !== undefined,\n      auth,\n      AuthErrorCode.ARGUMENT_ERROR\n    );\n    const totpVerificationInfo = { verificationCode: this.otp };\n    return finalizeSignInTotpMfa(auth, {\n      mfaPendingCredential,\n      mfaEnrollmentId: this.enrollmentId,\n      totpVerificationInfo\n    });\n  }\n}\n\n/**\n * Provider for generating a {@link TotpMultiFactorAssertion}.\n *\n * Stores the shared secret key and other parameters to generate time-based OTPs.\n * Implements methods to retrieve the shared secret key and generate a QR code URL.\n * @public\n */\nexport class TotpSecret {\n  /**\n   * Shared secret key/seed used for enrolling in TOTP MFA and generating OTPs.\n   */\n  readonly secretKey: string;\n  /**\n   * Hashing algorithm used.\n   */\n  readonly hashingAlgorithm: string;\n  /**\n   * Length of the one-time passwords to be generated.\n   */\n  readonly codeLength: number;\n  /**\n   * The interval (in seconds) when the OTP codes should change.\n   */\n  readonly codeIntervalSeconds: number;\n  /**\n   * The timestamp (UTC string) by which TOTP enrollment should be completed.\n   */\n  // This can be used by callers to show a countdown of when to enter OTP code by.\n  readonly enrollmentCompletionDeadline: string;\n\n  // The public members are declared outside the constructor so the docs can be generated.\n  private constructor(\n    secretKey: string,\n    hashingAlgorithm: string,\n    codeLength: number,\n    codeIntervalSeconds: number,\n    enrollmentCompletionDeadline: string,\n    private readonly sessionInfo: string,\n    private readonly auth: AuthInternal\n  ) {\n    this.secretKey = secretKey;\n    this.hashingAlgorithm = hashingAlgorithm;\n    this.codeLength = codeLength;\n    this.codeIntervalSeconds = codeIntervalSeconds;\n    this.enrollmentCompletionDeadline = enrollmentCompletionDeadline;\n  }\n\n  /** @internal */\n  static _fromStartTotpMfaEnrollmentResponse(\n    response: StartTotpMfaEnrollmentResponse,\n    auth: AuthInternal\n  ): TotpSecret {\n    return new TotpSecret(\n      response.totpSessionInfo.sharedSecretKey,\n      response.totpSessionInfo.hashingAlgorithm,\n      response.totpSessionInfo.verificationCodeLength,\n      response.totpSessionInfo.periodSec,\n      new Date(response.totpSessionInfo.finalizeEnrollmentTime).toUTCString(),\n      response.totpSessionInfo.sessionInfo,\n      auth\n    );\n  }\n\n  /** @internal */\n  _makeTotpVerificationInfo(otp: string): TotpVerificationInfo {\n    return { sessionInfo: this.sessionInfo, verificationCode: otp };\n  }\n\n  /**\n   * Returns a QR code URL as described in\n   * https://github.com/google/google-authenticator/wiki/Key-Uri-Format\n   * This can be displayed to the user as a QR code to be scanned into a TOTP app like Google Authenticator.\n   * If the optional parameters are unspecified, an accountName of <userEmail> and issuer of <firebaseAppName> are used.\n   *\n   * @param accountName the name of the account/app along with a user identifier.\n   * @param issuer issuer of the TOTP (likely the app name).\n   * @returns A QR code URL string.\n   */\n  generateQrCodeUrl(accountName?: string, issuer?: string): string {\n    let useDefaults = false;\n    if (_isEmptyString(accountName) || _isEmptyString(issuer)) {\n      useDefaults = true;\n    }\n    if (useDefaults) {\n      if (_isEmptyString(accountName)) {\n        accountName = this.auth.currentUser?.email || 'unknownuser';\n      }\n      if (_isEmptyString(issuer)) {\n        issuer = this.auth.name;\n      }\n    }\n    return `otpauth://totp/${issuer}:${accountName}?secret=${this.secretKey}&issuer=${issuer}&algorithm=${this.hashingAlgorithm}&digits=${this.codeLength}`;\n  }\n}\n\n/** @internal */\nfunction _isEmptyString(input?: string): boolean {\n  return typeof input === 'undefined' || input?.length === 0;\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Unsubscribe } from '@firebase/util';\nimport { FirebaseAuthInternal } from '@firebase/auth-interop-types';\n\nimport { AuthInternal } from '../../model/auth';\nimport { UserInternal } from '../../model/user';\nimport { _assert } from '../util/assert';\nimport { AuthErrorCode } from '../errors';\n\ninterface TokenListener {\n  (tok: string | null): unknown;\n}\n\nexport class AuthInterop implements FirebaseAuthInternal {\n  private readonly internalListeners: Map<TokenListener, Unsubscribe> =\n    new Map();\n\n  constructor(private readonly auth: AuthInternal) {}\n\n  getUid(): string | null {\n    this.assertAuthConfigured();\n    return this.auth.currentUser?.uid || null;\n  }\n\n  async getToken(\n    forceRefresh?: boolean\n  ): Promise<{ accessToken: string } | null> {\n    this.assertAuthConfigured();\n    await this.auth._initializationPromise;\n    if (!this.auth.currentUser) {\n      return null;\n    }\n\n    const accessToken = await this.auth.currentUser.getIdToken(forceRefresh);\n    return { accessToken };\n  }\n\n  addAuthTokenListener(listener: TokenListener): void {\n    this.assertAuthConfigured();\n    if (this.internalListeners.has(listener)) {\n      return;\n    }\n\n    const unsubscribe = this.auth.onIdTokenChanged(user => {\n      listener(\n        (user as UserInternal | null)?.stsTokenManager.accessToken || null\n      );\n    });\n    this.internalListeners.set(listener, unsubscribe);\n    this.updateProactiveRefresh();\n  }\n\n  removeAuthTokenListener(listener: TokenListener): void {\n    this.assertAuthConfigured();\n    const unsubscribe = this.internalListeners.get(listener);\n    if (!unsubscribe) {\n      return;\n    }\n\n    this.internalListeners.delete(listener);\n    unsubscribe();\n    this.updateProactiveRefresh();\n  }\n\n  private assertAuthConfigured(): void {\n    _assert(\n      this.auth._initializationPromise,\n      AuthErrorCode.DEPENDENT_SDK_INIT_BEFORE_AUTH\n    );\n  }\n\n  private updateProactiveRefresh(): void {\n    if (this.internalListeners.size > 0) {\n      this.auth._startProactiveRefresh();\n    } else {\n      this.auth._stopProactiveRefresh();\n    }\n  }\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _registerComponent, registerVersion } from '@firebase/app';\nimport {\n  Component,\n  ComponentType,\n  InstantiationMode\n} from '@firebase/component';\n\nimport { name, version } from '../../../package.json';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from '../util/assert';\nimport { _getClientVersion, ClientPlatform } from '../util/version';\nimport { _castAuth, AuthImpl, DefaultConfig } from './auth_impl';\nimport { AuthInterop } from './firebase_internal';\nimport { ConfigInternal } from '../../model/auth';\nimport { Dependencies } from '../../model/public_types';\nimport { _initializeAuthInstance } from './initialize';\n\nexport const enum _ComponentName {\n  AUTH = 'auth',\n  AUTH_INTERNAL = 'auth-internal'\n}\n\nfunction getVersionForPlatform(\n  clientPlatform: ClientPlatform\n): string | undefined {\n  switch (clientPlatform) {\n    case ClientPlatform.NODE:\n      return 'node';\n    case ClientPlatform.REACT_NATIVE:\n      return 'rn';\n    case ClientPlatform.WORKER:\n      return 'webworker';\n    case ClientPlatform.CORDOVA:\n      return 'cordova';\n    case ClientPlatform.WEB_EXTENSION:\n      return 'web-extension';\n    default:\n      return undefined;\n  }\n}\n\n/** @internal */\nexport function registerAuth(clientPlatform: ClientPlatform): void {\n  _registerComponent(\n    new Component(\n      _ComponentName.AUTH,\n      (container, { options: deps }: { options?: Dependencies }) => {\n        const app = container.getProvider('app').getImmediate()!;\n        const heartbeatServiceProvider =\n          container.getProvider<'heartbeat'>('heartbeat');\n        const appCheckServiceProvider =\n          container.getProvider<'app-check-internal'>('app-check-internal');\n        const { apiKey, authDomain } = app.options;\n\n        _assert(\n          apiKey && !apiKey.includes(':'),\n          AuthErrorCode.INVALID_API_KEY,\n          { appName: app.name }\n        );\n\n        const config: ConfigInternal = {\n          apiKey,\n          authDomain,\n          clientPlatform,\n          apiHost: DefaultConfig.API_HOST,\n          tokenApiHost: DefaultConfig.TOKEN_API_HOST,\n          apiScheme: DefaultConfig.API_SCHEME,\n          sdkClientVersion: _getClientVersion(clientPlatform)\n        };\n\n        const authInstance = new AuthImpl(\n          app,\n          heartbeatServiceProvider,\n          appCheckServiceProvider,\n          config\n        );\n        _initializeAuthInstance(authInstance, deps);\n\n        return authInstance;\n      },\n      ComponentType.PUBLIC\n    )\n      /**\n       * Auth can only be initialized by explicitly calling getAuth() or initializeAuth()\n       * For why we do this, See go/firebase-next-auth-init\n       */\n      .setInstantiationMode(InstantiationMode.EXPLICIT)\n      /**\n       * Because all firebase products that depend on auth depend on auth-internal directly,\n       * we need to initialize auth-internal after auth is initialized to make it available to other firebase products.\n       */\n      .setInstanceCreatedCallback(\n        (container, _instanceIdentifier, _instance) => {\n          const authInternalProvider = container.getProvider(\n            _ComponentName.AUTH_INTERNAL\n          );\n          authInternalProvider.initialize();\n        }\n      )\n  );\n\n  _registerComponent(\n    new Component(\n      _ComponentName.AUTH_INTERNAL,\n      container => {\n        const auth = _castAuth(\n          container.getProvider(_ComponentName.AUTH).getImmediate()!\n        );\n        return (auth => new AuthInterop(auth))(auth);\n      },\n      ComponentType.PRIVATE\n    ).setInstantiationMode(InstantiationMode.EXPLICIT)\n  );\n\n  registerVersion(name, version, getVersionForPlatform(clientPlatform));\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, getApp, _getProvider } from '@firebase/app';\n\nimport {\n  initializeAuth,\n  beforeAuthStateChanged,\n  onIdTokenChanged,\n  connectAuthEmulator\n} from '..';\nimport { registerAuth } from '../core/auth/register';\nimport { ClientPlatform } from '../core/util/version';\nimport { browserLocalPersistence } from './persistence/local_storage';\nimport { browserSessionPersistence } from './persistence/session_storage';\nimport { indexedDBLocalPersistence } from './persistence/indexed_db';\nimport { browserPopupRedirectResolver } from './popup_redirect';\nimport { Auth, User } from '../model/public_types';\nimport { getDefaultEmulatorHost, getExperimentalSetting } from '@firebase/util';\nimport { _setExternalJSProvider } from './load_js';\nimport { _createError } from '../core/util/assert';\nimport { AuthErrorCode } from '../core/errors';\n\nconst DEFAULT_ID_TOKEN_MAX_AGE = 5 * 60;\nconst authIdTokenMaxAge =\n  getExperimentalSetting('authIdTokenMaxAge') || DEFAULT_ID_TOKEN_MAX_AGE;\n\nlet lastPostedIdToken: string | undefined | null = null;\n\nconst mintCookieFactory = (url: string) => async (user: User | null) => {\n  const idTokenResult = user && (await user.getIdTokenResult());\n  const idTokenAge =\n    idTokenResult &&\n    (new Date().getTime() - Date.parse(idTokenResult.issuedAtTime)) / 1_000;\n  if (idTokenAge && idTokenAge > authIdTokenMaxAge) {\n    return;\n  }\n  // Specifically trip null => undefined when logged out, to delete any existing cookie\n  const idToken = idTokenResult?.token;\n  if (lastPostedIdToken === idToken) {\n    return;\n  }\n  lastPostedIdToken = idToken;\n  await fetch(url, {\n    method: idToken ? 'POST' : 'DELETE',\n    headers: idToken\n      ? {\n          'Authorization': `Bearer ${idToken}`\n        }\n      : {}\n  });\n};\n\n/**\n * Returns the Auth instance associated with the provided {@link @firebase/app#FirebaseApp}.\n * If no instance exists, initializes an Auth instance with platform-specific default dependencies.\n *\n * @param app - The Firebase App.\n *\n * @public\n */\nexport function getAuth(app: FirebaseApp = getApp()): Auth {\n  const provider = _getProvider(app, 'auth');\n\n  if (provider.isInitialized()) {\n    return provider.getImmediate();\n  }\n\n  const auth = initializeAuth(app, {\n    popupRedirectResolver: browserPopupRedirectResolver,\n    persistence: [\n      indexedDBLocalPersistence,\n      browserLocalPersistence,\n      browserSessionPersistence\n    ]\n  });\n\n  const authTokenSyncPath = getExperimentalSetting('authTokenSyncURL');\n  // Only do the Cookie exchange in a secure context\n  if (\n    authTokenSyncPath &&\n    typeof isSecureContext === 'boolean' &&\n    isSecureContext\n  ) {\n    // Don't allow urls (XSS possibility), only paths on the same domain\n    const authTokenSyncUrl = new URL(authTokenSyncPath, location.origin);\n    if (location.origin === authTokenSyncUrl.origin) {\n      const mintCookie = mintCookieFactory(authTokenSyncUrl.toString());\n      beforeAuthStateChanged(auth, mintCookie, () =>\n        mintCookie(auth.currentUser)\n      );\n      onIdTokenChanged(auth, user => mintCookie(user));\n    }\n  }\n\n  const authEmulatorHost = getDefaultEmulatorHost('auth');\n  if (authEmulatorHost) {\n    connectAuthEmulator(auth, `http://${authEmulatorHost}`);\n  }\n\n  return auth;\n}\n\nfunction getScriptParentElement(): HTMLDocument | HTMLHeadElement {\n  return document.getElementsByTagName('head')?.[0] ?? document;\n}\n\n_setExternalJSProvider({\n  loadJS(url: string): Promise<Event> {\n    // TODO: consider adding timeout support & cancellation\n    return new Promise((resolve, reject) => {\n      const el = document.createElement('script');\n      el.setAttribute('src', url);\n      el.onload = resolve;\n      el.onerror = e => {\n        const error = _createError(AuthErrorCode.INTERNAL_ERROR);\n        error.customData = e as unknown as Record<string, unknown>;\n        reject(error);\n      };\n      el.type = 'text/javascript';\n      el.charset = 'UTF-8';\n      getScriptParentElement().appendChild(el);\n    });\n  },\n\n  gapiScript: 'https://apis.google.com/js/api.js',\n  recaptchaV2Script: 'https://www.google.com/recaptcha/api.js',\n  recaptchaEnterpriseScript:\n    'https://www.google.com/recaptcha/enterprise.js?render='\n});\n\nregisterAuth(ClientPlatform.BROWSER);\n", "/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nconst NODE_MODE = false;\n\n// Allows minifiers to rename references to globalThis\nconst global = globalThis;\n\n/**\n * Whether the current browser supports `adoptedStyleSheets`.\n */\nexport const supportsAdoptingStyleSheets: boolean =\n  global.ShadowRoot &&\n  (global.ShadyCSS === undefined || global.ShadyCSS.nativeShadow) &&\n  'adoptedStyleSheets' in Document.prototype &&\n  'replace' in CSSStyleSheet.prototype;\n\n/**\n * A CSSResult or native CSSStyleSheet.\n *\n * In browsers that support constructible CSS style sheets, CSSStyleSheet\n * object can be used for styling along side CSSResult from the `css`\n * template tag.\n */\nexport type CSSResultOrNative = CSSResult | CSSStyleSheet;\n\nexport type CSSResultArray = Array<CSSResultOrNative | CSSResultArray>;\n\n/**\n * A single CSSResult, CSSStyleSheet, or an array or nested arrays of those.\n */\nexport type CSSResultGroup = CSSResultOrNative | CSSResultArray;\n\nconst constructionToken = Symbol();\n\nconst cssTagCache = new WeakMap<TemplateStringsArray, CSSStyleSheet>();\n\n/**\n * A container for a string of CSS text, that may be used to create a CSSStyleSheet.\n *\n * CSSResult is the return value of `css`-tagged template literals and\n * `unsafeCSS()`. In order to ensure that CSSResults are only created via the\n * `css` tag and `unsafeCSS()`, CSSResult cannot be constructed directly.\n */\nexport class CSSResult {\n  // This property needs to remain unminified.\n  ['_$cssResult$'] = true;\n  readonly cssText: string;\n  private _styleSheet?: CSSStyleSheet;\n  private _strings: TemplateStringsArray | undefined;\n\n  private constructor(\n    cssText: string,\n    strings: TemplateStringsArray | undefined,\n    safeToken: symbol\n  ) {\n    if (safeToken !== constructionToken) {\n      throw new Error(\n        'CSSResult is not constructable. Use `unsafeCSS` or `css` instead.'\n      );\n    }\n    this.cssText = cssText;\n    this._strings = strings;\n  }\n\n  // This is a getter so that it's lazy. In practice, this means stylesheets\n  // are not created until the first element instance is made.\n  get styleSheet(): CSSStyleSheet | undefined {\n    // If `supportsAdoptingStyleSheets` is true then we assume CSSStyleSheet is\n    // constructable.\n    let styleSheet = this._styleSheet;\n    const strings = this._strings;\n    if (supportsAdoptingStyleSheets && styleSheet === undefined) {\n      const cacheable = strings !== undefined && strings.length === 1;\n      if (cacheable) {\n        styleSheet = cssTagCache.get(strings);\n      }\n      if (styleSheet === undefined) {\n        (this._styleSheet = styleSheet = new CSSStyleSheet()).replaceSync(\n          this.cssText\n        );\n        if (cacheable) {\n          cssTagCache.set(strings, styleSheet);\n        }\n      }\n    }\n    return styleSheet;\n  }\n\n  toString(): string {\n    return this.cssText;\n  }\n}\n\ntype ConstructableCSSResult = CSSResult & {\n  new (\n    cssText: string,\n    strings: TemplateStringsArray | undefined,\n    safeToken: symbol\n  ): CSSResult;\n};\n\nconst textFromCSSResult = (value: CSSResultGroup | number) => {\n  // This property needs to remain unminified.\n  if ((value as CSSResult)['_$cssResult$'] === true) {\n    return (value as CSSResult).cssText;\n  } else if (typeof value === 'number') {\n    return value;\n  } else {\n    throw new Error(\n      `Value passed to 'css' function must be a 'css' function result: ` +\n        `${value}. Use 'unsafeCSS' to pass non-literal values, but take care ` +\n        `to ensure page security.`\n    );\n  }\n};\n\n/**\n * Wrap a value for interpolation in a {@linkcode css} tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value: unknown) =>\n  new (CSSResult as ConstructableCSSResult)(\n    typeof value === 'string' ? value : String(value),\n    undefined,\n    constructionToken\n  );\n\n/**\n * A template literal tag which can be used with LitElement's\n * {@linkcode LitElement.styles} property to set element styles.\n *\n * For security reasons, only literal string values and number may be used in\n * embedded expressions. To incorporate non-literal values {@linkcode unsafeCSS}\n * may be used inside an expression.\n */\nexport const css = (\n  strings: TemplateStringsArray,\n  ...values: (CSSResultGroup | number)[]\n): CSSResult => {\n  const cssText =\n    strings.length === 1\n      ? strings[0]\n      : values.reduce(\n          (acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1],\n          strings[0]\n        );\n  return new (CSSResult as ConstructableCSSResult)(\n    cssText,\n    strings,\n    constructionToken\n  );\n};\n\n/**\n * Applies the given styles to a `shadowRoot`. When Shadow DOM is\n * available but `adoptedStyleSheets` is not, styles are appended to the\n * `shadowRoot` to [mimic spec behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n * Note, when shimming is used, any styles that are subsequently placed into\n * the shadowRoot should be placed *before* any shimmed adopted styles. This\n * will match spec behavior that gives adopted sheets precedence over styles in\n * shadowRoot.\n */\nexport const adoptStyles = (\n  renderRoot: ShadowRoot,\n  styles: Array<CSSResultOrNative>\n) => {\n  if (supportsAdoptingStyleSheets) {\n    (renderRoot as ShadowRoot).adoptedStyleSheets = styles.map((s) =>\n      s instanceof CSSStyleSheet ? s : s.styleSheet!\n    );\n  } else {\n    for (const s of styles) {\n      const style = document.createElement('style');\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const nonce = (global as any)['litNonce'];\n      if (nonce !== undefined) {\n        style.setAttribute('nonce', nonce);\n      }\n      style.textContent = (s as CSSResult).cssText;\n      renderRoot.appendChild(style);\n    }\n  }\n};\n\nconst cssResultFromStyleSheet = (sheet: CSSStyleSheet) => {\n  let cssText = '';\n  for (const rule of sheet.cssRules) {\n    cssText += rule.cssText;\n  }\n  return unsafeCSS(cssText);\n};\n\nexport const getCompatibleStyle =\n  supportsAdoptingStyleSheets ||\n  (NODE_MODE && global.CSSStyleSheet === undefined)\n    ? (s: CSSResultOrNative) => s\n    : (s: CSSResultOrNative) =>\n        s instanceof CSSStyleSheet ? cssResultFromStyleSheet(s) : s;\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Use this module if you want to create your own base class extending\n * {@link ReactiveElement}.\n * @packageDocumentation\n */\n\nimport {\n  getCompatibleStyle,\n  adoptStyles,\n  CSSResultGroup,\n  CSSResultOrNative,\n} from './css-tag.js';\nimport type {\n  ReactiveController,\n  ReactiveControllerHost,\n} from './reactive-controller.js';\n\n// In the Node build, this import will be injected by Rollup:\n// import {HTMLElement, customElements} from '@lit-labs/ssr-dom-shim';\n\nexport * from './css-tag.js';\nexport type {\n  ReactiveController,\n  ReactiveControllerHost,\n} from './reactive-controller.js';\n\n/**\n * Removes the `readonly` modifier from properties in the union K.\n *\n * This is a safer way to cast a value to a type with a mutable version of a\n * readonly field, than casting to an interface with the field re-declared\n * because it preserves the type of all the fields and warns on typos.\n */\ntype Mutable<T, K extends keyof T> = Omit<T, K> & {\n  -readonly [P in keyof Pick<T, K>]: P extends K ? T[P] : never;\n};\n\n// TODO (justinfagnani): Add `hasOwn` here when we ship ES2022\nconst {\n  is,\n  defineProperty,\n  getOwnPropertyDescriptor,\n  getOwnPropertyNames,\n  getOwnPropertySymbols,\n  getPrototypeOf,\n} = Object;\n\nconst NODE_MODE = false;\n\n// Lets a minifier replace globalThis references with a minified name\nconst global = globalThis;\n\nif (NODE_MODE) {\n  global.customElements ??= customElements;\n}\n\nconst DEV_MODE = true;\n\nlet issueWarning: (code: string, warning: string) => void;\n\nconst trustedTypes = (global as unknown as {trustedTypes?: {emptyScript: ''}})\n  .trustedTypes;\n\n// Temporary workaround for https://crbug.com/993268\n// Currently, any attribute starting with \"on\" is considered to be a\n// TrustedScript source. Such boolean attributes must be set to the equivalent\n// trusted emptyScript value.\nconst emptyStringForBooleanAttribute = trustedTypes\n  ? (trustedTypes.emptyScript as unknown as '')\n  : '';\n\nconst polyfillSupport = DEV_MODE\n  ? global.reactiveElementPolyfillSupportDevMode\n  : global.reactiveElementPolyfillSupport;\n\nif (DEV_MODE) {\n  // Ensure warnings are issued only 1x, even if multiple versions of Lit\n  // are loaded.\n  const issuedWarnings: Set<string | undefined> = (global.litIssuedWarnings ??=\n    new Set());\n\n  // Issue a warning, if we haven't already.\n  issueWarning = (code: string, warning: string) => {\n    warning += ` See https://lit.dev/msg/${code} for more information.`;\n    if (!issuedWarnings.has(warning)) {\n      console.warn(warning);\n      issuedWarnings.add(warning);\n    }\n  };\n\n  issueWarning(\n    'dev-mode',\n    `Lit is in dev mode. Not recommended for production!`\n  );\n\n  // Issue polyfill support warning.\n  if (global.ShadyDOM?.inUse && polyfillSupport === undefined) {\n    issueWarning(\n      'polyfill-support-missing',\n      `Shadow DOM is being polyfilled via \\`ShadyDOM\\` but ` +\n        `the \\`polyfill-support\\` module has not been loaded.`\n    );\n  }\n}\n\n/**\n * Contains types that are part of the unstable debug API.\n *\n * Everything in this API is not stable and may change or be removed in the future,\n * even on patch releases.\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace ReactiveUnstable {\n  /**\n   * When Lit is running in dev mode and `window.emitLitDebugLogEvents` is true,\n   * we will emit 'lit-debug' events to window, with live details about the update and render\n   * lifecycle. These can be useful for writing debug tooling and visualizations.\n   *\n   * Please be aware that running with window.emitLitDebugLogEvents has performance overhead,\n   * making certain operations that are normally very cheap (like a no-op render) much slower,\n   * because we must copy data and dispatch events.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  export namespace DebugLog {\n    export type Entry = Update;\n    export interface Update {\n      kind: 'update';\n    }\n  }\n}\n\ninterface DebugLoggingWindow {\n  // Even in dev mode, we generally don't want to emit these events, as that's\n  // another level of cost, so only emit them when DEV_MODE is true _and_ when\n  // window.emitLitDebugEvents is true.\n  emitLitDebugLogEvents?: boolean;\n}\n\n/**\n * Useful for visualizing and logging insights into what the Lit template system is doing.\n *\n * Compiled out of prod mode builds.\n */\nconst debugLogEvent = DEV_MODE\n  ? (event: ReactiveUnstable.DebugLog.Entry) => {\n      const shouldEmit = (global as unknown as DebugLoggingWindow)\n        .emitLitDebugLogEvents;\n      if (!shouldEmit) {\n        return;\n      }\n      global.dispatchEvent(\n        new CustomEvent<ReactiveUnstable.DebugLog.Entry>('lit-debug', {\n          detail: event,\n        })\n      );\n    }\n  : undefined;\n\n/*\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\n/*@__INLINE__*/\nconst JSCompiler_renameProperty = <P extends PropertyKey>(\n  prop: P,\n  _obj: unknown\n): P => prop;\n\n/**\n * Converts property values to and from attribute values.\n */\nexport interface ComplexAttributeConverter<Type = unknown, TypeHint = unknown> {\n  /**\n   * Called to convert an attribute value to a property\n   * value.\n   */\n  fromAttribute?(value: string | null, type?: TypeHint): Type;\n\n  /**\n   * Called to convert a property value to an attribute\n   * value.\n   *\n   * It returns unknown instead of string, to be compatible with\n   * https://github.com/WICG/trusted-types (and similar efforts).\n   */\n  toAttribute?(value: Type, type?: TypeHint): unknown;\n}\n\ntype AttributeConverter<Type = unknown, TypeHint = unknown> =\n  | ComplexAttributeConverter<Type>\n  | ((value: string | null, type?: TypeHint) => Type);\n\n/**\n * Defines options for a property accessor.\n */\nexport interface PropertyDeclaration<Type = unknown, TypeHint = unknown> {\n  /**\n   * When set to `true`, indicates the property is internal private state. The\n   * property should not be set by users. When using TypeScript, this property\n   * should be marked as `private` or `protected`, and it is also a common\n   * practice to use a leading `_` in the name. The property is not added to\n   * `observedAttributes`.\n   */\n  readonly state?: boolean;\n\n  /**\n   * Indicates how and whether the property becomes an observed attribute.\n   * If the value is `false`, the property is not added to `observedAttributes`.\n   * If true or absent, the lowercased property name is observed (e.g. `fooBar`\n   * becomes `foobar`). If a string, the string value is observed (e.g\n   * `attribute: 'foo-bar'`).\n   */\n  readonly attribute?: boolean | string;\n\n  /**\n   * Indicates the type of the property. This is used only as a hint for the\n   * `converter` to determine how to convert the attribute\n   * to/from a property.\n   */\n  readonly type?: TypeHint;\n\n  /**\n   * Indicates how to convert the attribute to/from a property. If this value\n   * is a function, it is used to convert the attribute value a the property\n   * value. If it's an object, it can have keys for `fromAttribute` and\n   * `toAttribute`. If no `toAttribute` function is provided and\n   * `reflect` is set to `true`, the property value is set directly to the\n   * attribute. A default `converter` is used if none is provided; it supports\n   * `Boolean`, `String`, `Number`, `Object`, and `Array`. Note,\n   * when a property changes and the converter is used to update the attribute,\n   * the property is never updated again as a result of the attribute changing,\n   * and vice versa.\n   */\n  readonly converter?: AttributeConverter<Type, TypeHint>;\n\n  /**\n   * Indicates if the property should reflect to an attribute.\n   * If `true`, when the property is set, the attribute is set using the\n   * attribute name determined according to the rules for the `attribute`\n   * property option and the value of the property converted using the rules\n   * from the `converter` property option.\n   */\n  readonly reflect?: boolean;\n\n  /**\n   * A function that indicates if a property should be considered changed when\n   * it is set. The function should take the `newValue` and `oldValue` and\n   * return `true` if an update should be requested.\n   */\n  hasChanged?(value: Type, oldValue: Type): boolean;\n\n  /**\n   * Indicates whether an accessor will be created for this property. By\n   * default, an accessor will be generated for this property that requests an\n   * update when set. If this flag is `true`, no accessor will be created, and\n   * it will be the user's responsibility to call\n   * `this.requestUpdate(propertyName, oldValue)` to request an update when\n   * the property changes.\n   */\n  readonly noAccessor?: boolean;\n\n  /**\n   * Whether this property is wrapping accessors. This is set by `@property`\n   * to control the initial value change and reflection logic.\n   *\n   * @internal\n   */\n  wrapped?: boolean;\n}\n\n/**\n * Map of properties to PropertyDeclaration options. For each property an\n * accessor is made, and the property is processed according to the\n * PropertyDeclaration options.\n */\nexport interface PropertyDeclarations {\n  readonly [key: string]: PropertyDeclaration;\n}\n\ntype PropertyDeclarationMap = Map<PropertyKey, PropertyDeclaration>;\n\ntype AttributeMap = Map<string, PropertyKey>;\n\n/**\n * A Map of property keys to values.\n *\n * Takes an optional type parameter T, which when specified as a non-any,\n * non-unknown type, will make the Map more strongly-typed, associating the map\n * keys with their corresponding value type on T.\n *\n * Use `PropertyValues<this>` when overriding ReactiveElement.update() and\n * other lifecycle methods in order to get stronger type-checking on keys\n * and values.\n */\n// This type is conditional so that if the parameter T is not specified, or\n// is `any`, the type will include `Map<PropertyKey, unknown>`. Since T is not\n// given in the uses of PropertyValues in this file, all uses here fallback to\n// meaning `Map<PropertyKey, unknown>`, but if a developer uses\n// `PropertyValues<this>` (or any other value for T) they will get a\n// strongly-typed Map type.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type PropertyValues<T = any> = T extends object\n  ? PropertyValueMap<T>\n  : Map<PropertyKey, unknown>;\n\n/**\n * Do not use, instead prefer {@linkcode PropertyValues}.\n */\n// This type must be exported such that JavaScript generated by the Google\n// Closure Compiler can import a type reference.\nexport interface PropertyValueMap<T> extends Map<PropertyKey, unknown> {\n  get<K extends keyof T>(k: K): T[K] | undefined;\n  set<K extends keyof T>(key: K, value: T[K]): this;\n  has<K extends keyof T>(k: K): boolean;\n  delete<K extends keyof T>(k: K): boolean;\n}\n\nexport const defaultConverter: ComplexAttributeConverter = {\n  toAttribute(value: unknown, type?: unknown): unknown {\n    switch (type) {\n      case Boolean:\n        value = value ? emptyStringForBooleanAttribute : null;\n        break;\n      case Object:\n      case Array:\n        // if the value is `null` or `undefined` pass this through\n        // to allow removing/no change behavior.\n        value = value == null ? value : JSON.stringify(value);\n        break;\n    }\n    return value;\n  },\n\n  fromAttribute(value: string | null, type?: unknown) {\n    let fromValue: unknown = value;\n    switch (type) {\n      case Boolean:\n        fromValue = value !== null;\n        break;\n      case Number:\n        fromValue = value === null ? null : Number(value);\n        break;\n      case Object:\n      case Array:\n        // Do *not* generate exception when invalid JSON is set as elements\n        // don't normally complain on being mis-configured.\n        // TODO(sorvell): Do generate exception in *dev mode*.\n        try {\n          // Assert to adhere to Bazel's \"must type assert JSON parse\" rule.\n          fromValue = JSON.parse(value!) as unknown;\n        } catch (e) {\n          fromValue = null;\n        }\n        break;\n    }\n    return fromValue;\n  },\n};\n\nexport interface HasChanged {\n  (value: unknown, old: unknown): boolean;\n}\n\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual: HasChanged = (value: unknown, old: unknown): boolean =>\n  !is(value, old);\n\nconst defaultPropertyDeclaration: PropertyDeclaration = {\n  attribute: true,\n  type: String,\n  converter: defaultConverter,\n  reflect: false,\n  hasChanged: notEqual,\n};\n\n/**\n * A string representing one of the supported dev mode warning categories.\n */\nexport type WarningKind =\n  | 'change-in-update'\n  | 'migration'\n  | 'async-perform-update';\n\nexport type Initializer = (element: ReactiveElement) => void;\n\n// Temporary, until google3 is on TypeScript 5.2\ndeclare global {\n  interface SymbolConstructor {\n    readonly metadata: unique symbol;\n  }\n}\n\n// Ensure metadata is enabled. TypeScript does not polyfill\n// Symbol.metadata, so we must ensure that it exists.\n(Symbol as {metadata: symbol}).metadata ??= Symbol('metadata');\n\ndeclare global {\n  // This is public global API, do not change!\n  // eslint-disable-next-line no-var\n  var litPropertyMetadata: WeakMap<\n    object,\n    Map<PropertyKey, PropertyDeclaration>\n  >;\n}\n\n// Map from a class's metadata object to property options\n// Note that we must use nullish-coalescing assignment so that we only use one\n// map even if we load multiple version of this module.\nglobal.litPropertyMetadata ??= new WeakMap<\n  object,\n  Map<PropertyKey, PropertyDeclaration>\n>();\n\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclasses to render updates as desired.\n * @noInheritDoc\n */\nexport abstract class ReactiveElement\n  // In the Node build, this `extends` clause will be substituted with\n  // `(globalThis.HTMLElement ?? HTMLElement)`.\n  //\n  // This way, we will first prefer any global `HTMLElement` polyfill that the\n  // user has assigned, and then fall back to the `HTMLElement` shim which has\n  // been imported (see note at the top of this file about how this import is\n  // generated by Rollup). Note that the `HTMLElement` variable has been\n  // shadowed by this import, so it no longer refers to the global.\n  extends HTMLElement\n  implements ReactiveControllerHost\n{\n  // Note: these are patched in only in DEV_MODE.\n  /**\n   * Read or set all the enabled warning categories for this class.\n   *\n   * This property is only used in development builds.\n   *\n   * @nocollapse\n   * @category dev-mode\n   */\n  static enabledWarnings?: WarningKind[];\n\n  /**\n   * Enable the given warning category for this class.\n   *\n   * This method only exists in development builds, so it should be accessed\n   * with a guard like:\n   *\n   * ```ts\n   * // Enable for all ReactiveElement subclasses\n   * ReactiveElement.enableWarning?.('migration');\n   *\n   * // Enable for only MyElement and subclasses\n   * MyElement.enableWarning?.('migration');\n   * ```\n   *\n   * @nocollapse\n   * @category dev-mode\n   */\n  static enableWarning?: (warningKind: WarningKind) => void;\n\n  /**\n   * Disable the given warning category for this class.\n   *\n   * This method only exists in development builds, so it should be accessed\n   * with a guard like:\n   *\n   * ```ts\n   * // Disable for all ReactiveElement subclasses\n   * ReactiveElement.disableWarning?.('migration');\n   *\n   * // Disable for only MyElement and subclasses\n   * MyElement.disableWarning?.('migration');\n   * ```\n   *\n   * @nocollapse\n   * @category dev-mode\n   */\n  static disableWarning?: (warningKind: WarningKind) => void;\n\n  /**\n   * Adds an initializer function to the class that is called during instance\n   * construction.\n   *\n   * This is useful for code that runs against a `ReactiveElement`\n   * subclass, such as a decorator, that needs to do work for each\n   * instance, such as setting up a `ReactiveController`.\n   *\n   * ```ts\n   * const myDecorator = (target: typeof ReactiveElement, key: string) => {\n   *   target.addInitializer((instance: ReactiveElement) => {\n   *     // This is run during construction of the element\n   *     new MyController(instance);\n   *   });\n   * }\n   * ```\n   *\n   * Decorating a field will then cause each instance to run an initializer\n   * that adds a controller:\n   *\n   * ```ts\n   * class MyElement extends LitElement {\n   *   @myDecorator foo;\n   * }\n   * ```\n   *\n   * Initializers are stored per-constructor. Adding an initializer to a\n   * subclass does not add it to a superclass. Since initializers are run in\n   * constructors, initializers will run in order of the class hierarchy,\n   * starting with superclasses and progressing to the instance's class.\n   *\n   * @nocollapse\n   */\n  static addInitializer(initializer: Initializer) {\n    this.__prepare();\n    (this._initializers ??= []).push(initializer);\n  }\n\n  static _initializers?: Initializer[];\n\n  /*\n   * Due to closure compiler ES6 compilation bugs, @nocollapse is required on\n   * all static methods and properties with initializers.  Reference:\n   * - https://github.com/google/closure-compiler/issues/1776\n   */\n\n  /**\n   * Maps attribute names to properties; for example `foobar` attribute to\n   * `fooBar` property. Created lazily on user subclasses when finalizing the\n   * class.\n   * @nocollapse\n   */\n  private static __attributeToPropertyMap: AttributeMap;\n\n  /**\n   * Marks class as having been finalized, which includes creating properties\n   * from `static properties`, but does *not* include all properties created\n   * from decorators.\n   * @nocollapse\n   */\n  protected static finalized: true | undefined;\n\n  /**\n   * Memoized list of all element properties, including any superclass\n   * properties. Created lazily on user subclasses when finalizing the class.\n   *\n   * @nocollapse\n   * @category properties\n   */\n  static elementProperties: PropertyDeclarationMap;\n\n  /**\n   * User-supplied object that maps property names to `PropertyDeclaration`\n   * objects containing options for configuring reactive properties. When\n   * a reactive property is set the element will update and render.\n   *\n   * By default properties are public fields, and as such, they should be\n   * considered as primarily settable by element users, either via attribute or\n   * the property itself.\n   *\n   * Generally, properties that are changed by the element should be private or\n   * protected fields and should use the `state: true` option. Properties\n   * marked as `state` do not reflect from the corresponding attribute\n   *\n   * However, sometimes element code does need to set a public property. This\n   * should typically only be done in response to user interaction, and an event\n   * should be fired informing the user; for example, a checkbox sets its\n   * `checked` property when clicked and fires a `changed` event. Mutating\n   * public properties should typically not be done for non-primitive (object or\n   * array) properties. In other cases when an element needs to manage state, a\n   * private property set with the `state: true` option should be used. When\n   * needed, state properties can be initialized via public properties to\n   * facilitate complex interactions.\n   * @nocollapse\n   * @category properties\n   */\n  static properties: PropertyDeclarations;\n\n  /**\n   * Memoized list of all element styles.\n   * Created lazily on user subclasses when finalizing the class.\n   * @nocollapse\n   * @category styles\n   */\n  static elementStyles: Array<CSSResultOrNative> = [];\n\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the {@linkcode css} tag function, via constructible stylesheets, or\n   * imported from native CSS module scripts.\n   *\n   * Note on Content Security Policy:\n   *\n   * Element styles are implemented with `<style>` tags when the browser doesn't\n   * support adopted StyleSheets. To use such `<style>` tags with the style-src\n   * CSP directive, the style-src value must either include 'unsafe-inline' or\n   * `nonce-<base64-value>` with `<base64-value>` replaced be a server-generated\n   * nonce.\n   *\n   * To provide a nonce to use on generated `<style>` elements, set\n   * `window.litNonce` to a server-generated nonce in your page's HTML, before\n   * loading application code:\n   *\n   * ```html\n   * <script>\n   *   // Generated and unique per request:\n   *   window.litNonce = 'a1b2c3d4';\n   * </script>\n   * ```\n   * @nocollapse\n   * @category styles\n   */\n  static styles?: CSSResultGroup;\n\n  /**\n   * Returns a list of attributes corresponding to the registered properties.\n   * @nocollapse\n   * @category attributes\n   */\n  static get observedAttributes() {\n    // Ensure we've created all properties\n    this.finalize();\n    // this.__attributeToPropertyMap is only undefined after finalize() in\n    // ReactiveElement itself. ReactiveElement.observedAttributes is only\n    // accessed with ReactiveElement as the receiver when a subclass or mixin\n    // calls super.observedAttributes\n    return (\n      this.__attributeToPropertyMap && [...this.__attributeToPropertyMap.keys()]\n    );\n  }\n\n  private __instanceProperties?: PropertyValues = undefined;\n\n  /**\n   * Creates a property accessor on the element prototype if one does not exist\n   * and stores a {@linkcode PropertyDeclaration} for the property with the\n   * given options. The property setter calls the property's `hasChanged`\n   * property option or uses a strict identity check to determine whether or not\n   * to request an update.\n   *\n   * This method may be overridden to customize properties; however,\n   * when doing so, it's important to call `super.createProperty` to ensure\n   * the property is setup correctly. This method calls\n   * `getPropertyDescriptor` internally to get a descriptor to install.\n   * To customize what properties do when they are get or set, override\n   * `getPropertyDescriptor`. To customize the options for a property,\n   * implement `createProperty` like this:\n   *\n   * ```ts\n   * static createProperty(name, options) {\n   *   options = Object.assign(options, {myOption: true});\n   *   super.createProperty(name, options);\n   * }\n   * ```\n   *\n   * @nocollapse\n   * @category properties\n   */\n  static createProperty(\n    name: PropertyKey,\n    options: PropertyDeclaration = defaultPropertyDeclaration\n  ) {\n    // If this is a state property, force the attribute to false.\n    if (options.state) {\n      (options as Mutable<PropertyDeclaration, 'attribute'>).attribute = false;\n    }\n    this.__prepare();\n    this.elementProperties.set(name, options);\n    if (!options.noAccessor) {\n      const key = DEV_MODE\n        ? // Use Symbol.for in dev mode to make it easier to maintain state\n          // when doing HMR.\n          Symbol.for(`${String(name)} (@property() cache)`)\n        : Symbol();\n      const descriptor = this.getPropertyDescriptor(name, key, options);\n      if (descriptor !== undefined) {\n        defineProperty(this.prototype, name, descriptor);\n      }\n    }\n  }\n\n  /**\n   * Returns a property descriptor to be defined on the given named property.\n   * If no descriptor is returned, the property will not become an accessor.\n   * For example,\n   *\n   * ```ts\n   * class MyElement extends LitElement {\n   *   static getPropertyDescriptor(name, key, options) {\n   *     const defaultDescriptor =\n   *         super.getPropertyDescriptor(name, key, options);\n   *     const setter = defaultDescriptor.set;\n   *     return {\n   *       get: defaultDescriptor.get,\n   *       set(value) {\n   *         setter.call(this, value);\n   *         // custom action.\n   *       },\n   *       configurable: true,\n   *       enumerable: true\n   *     }\n   *   }\n   * }\n   * ```\n   *\n   * @nocollapse\n   * @category properties\n   */\n  protected static getPropertyDescriptor(\n    name: PropertyKey,\n    key: string | symbol,\n    options: PropertyDeclaration\n  ): PropertyDescriptor | undefined {\n    const {get, set} = getOwnPropertyDescriptor(this.prototype, name) ?? {\n      get(this: ReactiveElement) {\n        return this[key as keyof typeof this];\n      },\n      set(this: ReactiveElement, v: unknown) {\n        (this as unknown as Record<string | symbol, unknown>)[key] = v;\n      },\n    };\n    if (DEV_MODE && get == null) {\n      if ('value' in (getOwnPropertyDescriptor(this.prototype, name) ?? {})) {\n        throw new Error(\n          `Field ${JSON.stringify(String(name))} on ` +\n            `${this.name} was declared as a reactive property ` +\n            `but it's actually declared as a value on the prototype. ` +\n            `Usually this is due to using @property or @state on a method.`\n        );\n      }\n      issueWarning(\n        'reactive-property-without-getter',\n        `Field ${JSON.stringify(String(name))} on ` +\n          `${this.name} was declared as a reactive property ` +\n          `but it does not have a getter. This will be an error in a ` +\n          `future version of Lit.`\n      );\n    }\n    return {\n      get(this: ReactiveElement) {\n        return get?.call(this);\n      },\n      set(this: ReactiveElement, value: unknown) {\n        const oldValue = get?.call(this);\n        set!.call(this, value);\n        this.requestUpdate(name, oldValue, options);\n      },\n      configurable: true,\n      enumerable: true,\n    };\n  }\n\n  /**\n   * Returns the property options associated with the given property.\n   * These options are defined with a `PropertyDeclaration` via the `properties`\n   * object or the `@property` decorator and are registered in\n   * `createProperty(...)`.\n   *\n   * Note, this method should be considered \"final\" and not overridden. To\n   * customize the options for a given property, override\n   * {@linkcode createProperty}.\n   *\n   * @nocollapse\n   * @final\n   * @category properties\n   */\n  static getPropertyOptions(name: PropertyKey) {\n    return this.elementProperties.get(name) ?? defaultPropertyDeclaration;\n  }\n\n  // Temporary, until google3 is on TypeScript 5.2\n  declare static [Symbol.metadata]: object & Record<PropertyKey, unknown>;\n\n  /**\n   * Initializes static own properties of the class used in bookkeeping\n   * for element properties, initializers, etc.\n   *\n   * Can be called multiple times by code that needs to ensure these\n   * properties exist before using them.\n   *\n   * This method ensures the superclass is finalized so that inherited\n   * property metadata can be copied down.\n   * @nocollapse\n   */\n  private static __prepare() {\n    if (\n      this.hasOwnProperty(JSCompiler_renameProperty('elementProperties', this))\n    ) {\n      // Already prepared\n      return;\n    }\n    // Finalize any superclasses\n    const superCtor = getPrototypeOf(this) as typeof ReactiveElement;\n    superCtor.finalize();\n\n    // Create own set of initializers for this class if any exist on the\n    // superclass and copy them down. Note, for a small perf boost, avoid\n    // creating initializers unless needed.\n    if (superCtor._initializers !== undefined) {\n      this._initializers = [...superCtor._initializers];\n    }\n    // Initialize elementProperties from the superclass\n    this.elementProperties = new Map(superCtor.elementProperties);\n  }\n\n  /**\n   * Finishes setting up the class so that it's ready to be registered\n   * as a custom element and instantiated.\n   *\n   * This method is called by the ReactiveElement.observedAttributes getter.\n   * If you override the observedAttributes getter, you must either call\n   * super.observedAttributes to trigger finalization, or call finalize()\n   * yourself.\n   *\n   * @nocollapse\n   */\n  protected static finalize() {\n    if (this.hasOwnProperty(JSCompiler_renameProperty('finalized', this))) {\n      return;\n    }\n    this.finalized = true;\n    this.__prepare();\n\n    // Create properties from the static properties block:\n    if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n      const props = this.properties;\n      const propKeys = [\n        ...getOwnPropertyNames(props),\n        ...getOwnPropertySymbols(props),\n      ] as Array<keyof typeof props>;\n      for (const p of propKeys) {\n        this.createProperty(p, props[p]);\n      }\n    }\n\n    // Create properties from standard decorator metadata:\n    const metadata = this[Symbol.metadata];\n    if (metadata !== null) {\n      const properties = litPropertyMetadata.get(metadata);\n      if (properties !== undefined) {\n        for (const [p, options] of properties) {\n          this.elementProperties.set(p, options);\n        }\n      }\n    }\n\n    // Create the attribute-to-property map\n    this.__attributeToPropertyMap = new Map();\n    for (const [p, options] of this.elementProperties) {\n      const attr = this.__attributeNameForProperty(p, options);\n      if (attr !== undefined) {\n        this.__attributeToPropertyMap.set(attr, p);\n      }\n    }\n\n    this.elementStyles = this.finalizeStyles(this.styles);\n\n    if (DEV_MODE) {\n      if (this.hasOwnProperty('createProperty')) {\n        issueWarning(\n          'no-override-create-property',\n          'Overriding ReactiveElement.createProperty() is deprecated. ' +\n            'The override will not be called with standard decorators'\n        );\n      }\n      if (this.hasOwnProperty('getPropertyDescriptor')) {\n        issueWarning(\n          'no-override-get-property-descriptor',\n          'Overriding ReactiveElement.getPropertyDescriptor() is deprecated. ' +\n            'The override will not be called with standard decorators'\n        );\n      }\n    }\n  }\n\n  /**\n   * Options used when calling `attachShadow`. Set this property to customize\n   * the options for the shadowRoot; for example, to create a closed\n   * shadowRoot: `{mode: 'closed'}`.\n   *\n   * Note, these options are used in `createRenderRoot`. If this method\n   * is customized, options should be respected if possible.\n   * @nocollapse\n   * @category rendering\n   */\n  static shadowRootOptions: ShadowRootInit = {mode: 'open'};\n\n  /**\n   * Takes the styles the user supplied via the `static styles` property and\n   * returns the array of styles to apply to the element.\n   * Override this method to integrate into a style management system.\n   *\n   * Styles are deduplicated preserving the _last_ instance in the list. This\n   * is a performance optimization to avoid duplicated styles that can occur\n   * especially when composing via subclassing. The last item is kept to try\n   * to preserve the cascade order with the assumption that it's most important\n   * that last added styles override previous styles.\n   *\n   * @nocollapse\n   * @category styles\n   */\n  protected static finalizeStyles(\n    styles?: CSSResultGroup\n  ): Array<CSSResultOrNative> {\n    const elementStyles = [];\n    if (Array.isArray(styles)) {\n      // Dedupe the flattened array in reverse order to preserve the last items.\n      // Casting to Array<unknown> works around TS error that\n      // appears to come from trying to flatten a type CSSResultArray.\n      const set = new Set((styles as Array<unknown>).flat(Infinity).reverse());\n      // Then preserve original order by adding the set items in reverse order.\n      for (const s of set) {\n        elementStyles.unshift(getCompatibleStyle(s as CSSResultOrNative));\n      }\n    } else if (styles !== undefined) {\n      elementStyles.push(getCompatibleStyle(styles));\n    }\n    return elementStyles;\n  }\n\n  /**\n   * Node or ShadowRoot into which element DOM should be rendered. Defaults\n   * to an open shadowRoot.\n   * @category rendering\n   */\n  readonly renderRoot!: HTMLElement | DocumentFragment;\n\n  /**\n   * Returns the property name for the given attribute `name`.\n   * @nocollapse\n   */\n  private static __attributeNameForProperty(\n    name: PropertyKey,\n    options: PropertyDeclaration\n  ) {\n    const attribute = options.attribute;\n    return attribute === false\n      ? undefined\n      : typeof attribute === 'string'\n      ? attribute\n      : typeof name === 'string'\n      ? name.toLowerCase()\n      : undefined;\n  }\n\n  // Initialize to an unresolved Promise so we can make sure the element has\n  // connected before first update.\n  private __updatePromise!: Promise<boolean>;\n\n  /**\n   * True if there is a pending update as a result of calling `requestUpdate()`.\n   * Should only be read.\n   * @category updates\n   */\n  isUpdatePending = false;\n\n  /**\n   * Is set to `true` after the first update. The element code cannot assume\n   * that `renderRoot` exists before the element `hasUpdated`.\n   * @category updates\n   */\n  hasUpdated = false;\n\n  /**\n   * Map with keys for any properties that have changed since the last\n   * update cycle with previous values.\n   *\n   * @internal\n   */\n  _$changedProperties!: PropertyValues;\n\n  /**\n   * Properties that should be reflected when updated.\n   */\n  private __reflectingProperties?: Set<PropertyKey>;\n\n  /**\n   * Name of currently reflecting property\n   */\n  private __reflectingProperty: PropertyKey | null = null;\n\n  /**\n   * Set of controllers.\n   */\n  private __controllers?: Set<ReactiveController>;\n\n  constructor() {\n    super();\n    this.__initialize();\n  }\n\n  /**\n   * Internal only override point for customizing work done when elements\n   * are constructed.\n   */\n  private __initialize() {\n    this.__updatePromise = new Promise<boolean>(\n      (res) => (this.enableUpdating = res)\n    );\n    this._$changedProperties = new Map();\n    // This enqueues a microtask that ust run before the first update, so it\n    // must be called before requestUpdate()\n    this.__saveInstanceProperties();\n    // ensures first update will be caught by an early access of\n    // `updateComplete`\n    this.requestUpdate();\n    (this.constructor as typeof ReactiveElement)._initializers?.forEach((i) =>\n      i(this)\n    );\n  }\n\n  /**\n   * Registers a `ReactiveController` to participate in the element's reactive\n   * update cycle. The element automatically calls into any registered\n   * controllers during its lifecycle callbacks.\n   *\n   * If the element is connected when `addController()` is called, the\n   * controller's `hostConnected()` callback will be immediately called.\n   * @category controllers\n   */\n  addController(controller: ReactiveController) {\n    (this.__controllers ??= new Set()).add(controller);\n    // If a controller is added after the element has been connected,\n    // call hostConnected. Note, re-using existence of `renderRoot` here\n    // (which is set in connectedCallback) to avoid the need to track a\n    // first connected state.\n    if (this.renderRoot !== undefined && this.isConnected) {\n      controller.hostConnected?.();\n    }\n  }\n\n  /**\n   * Removes a `ReactiveController` from the element.\n   * @category controllers\n   */\n  removeController(controller: ReactiveController) {\n    this.__controllers?.delete(controller);\n  }\n\n  /**\n   * Fixes any properties set on the instance before upgrade time.\n   * Otherwise these would shadow the accessor and break these properties.\n   * The properties are stored in a Map which is played back after the\n   * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n   * (<=41), properties created for native platform properties like (`id` or\n   * `name`) may not have default values set in the element constructor. On\n   * these browsers native properties appear on instances and therefore their\n   * default value will overwrite any element default (e.g. if the element sets\n   * this.id = 'id' in the constructor, the 'id' will become '' since this is\n   * the native platform default).\n   */\n  private __saveInstanceProperties() {\n    const instanceProperties = new Map<PropertyKey, unknown>();\n    const elementProperties = (this.constructor as typeof ReactiveElement)\n      .elementProperties;\n    for (const p of elementProperties.keys() as IterableIterator<keyof this>) {\n      if (this.hasOwnProperty(p)) {\n        instanceProperties.set(p, this[p]);\n        delete this[p];\n      }\n    }\n    if (instanceProperties.size > 0) {\n      this.__instanceProperties = instanceProperties;\n    }\n  }\n\n  /**\n   * Returns the node into which the element should render and by default\n   * creates and returns an open shadowRoot. Implement to customize where the\n   * element's DOM is rendered. For example, to render into the element's\n   * childNodes, return `this`.\n   *\n   * @return Returns a node into which to render.\n   * @category rendering\n   */\n  protected createRenderRoot(): HTMLElement | DocumentFragment {\n    const renderRoot =\n      this.shadowRoot ??\n      this.attachShadow(\n        (this.constructor as typeof ReactiveElement).shadowRootOptions\n      );\n    adoptStyles(\n      renderRoot,\n      (this.constructor as typeof ReactiveElement).elementStyles\n    );\n    return renderRoot;\n  }\n\n  /**\n   * On first connection, creates the element's renderRoot, sets up\n   * element styling, and enables updating.\n   * @category lifecycle\n   */\n  connectedCallback() {\n    // Create renderRoot before controllers `hostConnected`\n    (this as Mutable<typeof this, 'renderRoot'>).renderRoot ??=\n      this.createRenderRoot();\n    this.enableUpdating(true);\n    this.__controllers?.forEach((c) => c.hostConnected?.());\n  }\n\n  /**\n   * Note, this method should be considered final and not overridden. It is\n   * overridden on the element instance with a function that triggers the first\n   * update.\n   * @category updates\n   */\n  protected enableUpdating(_requestedUpdate: boolean) {}\n\n  /**\n   * Allows for `super.disconnectedCallback()` in extensions while\n   * reserving the possibility of making non-breaking feature additions\n   * when disconnecting at some point in the future.\n   * @category lifecycle\n   */\n  disconnectedCallback() {\n    this.__controllers?.forEach((c) => c.hostDisconnected?.());\n  }\n\n  /**\n   * Synchronizes property values when attributes change.\n   *\n   * Specifically, when an attribute is set, the corresponding property is set.\n   * You should rarely need to implement this callback. If this method is\n   * overridden, `super.attributeChangedCallback(name, _old, value)` must be\n   * called.\n   *\n   * See [using the lifecycle callbacks](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements#using_the_lifecycle_callbacks)\n   * on MDN for more information about the `attributeChangedCallback`.\n   * @category attributes\n   */\n  attributeChangedCallback(\n    name: string,\n    _old: string | null,\n    value: string | null\n  ) {\n    this._$attributeToProperty(name, value);\n  }\n\n  private __propertyToAttribute(name: PropertyKey, value: unknown) {\n    const elemProperties: PropertyDeclarationMap = (\n      this.constructor as typeof ReactiveElement\n    ).elementProperties;\n    const options = elemProperties.get(name)!;\n    const attr = (\n      this.constructor as typeof ReactiveElement\n    ).__attributeNameForProperty(name, options);\n    if (attr !== undefined && options.reflect === true) {\n      const converter =\n        (options.converter as ComplexAttributeConverter)?.toAttribute !==\n        undefined\n          ? (options.converter as ComplexAttributeConverter)\n          : defaultConverter;\n      const attrValue = converter.toAttribute!(value, options.type);\n      if (\n        DEV_MODE &&\n        (this.constructor as typeof ReactiveElement).enabledWarnings!.includes(\n          'migration'\n        ) &&\n        attrValue === undefined\n      ) {\n        issueWarning(\n          'undefined-attribute-value',\n          `The attribute value for the ${name as string} property is ` +\n            `undefined on element ${this.localName}. The attribute will be ` +\n            `removed, but in the previous version of \\`ReactiveElement\\`, ` +\n            `the attribute would not have changed.`\n        );\n      }\n      // Track if the property is being reflected to avoid\n      // setting the property again via `attributeChangedCallback`. Note:\n      // 1. this takes advantage of the fact that the callback is synchronous.\n      // 2. will behave incorrectly if multiple attributes are in the reaction\n      // stack at time of calling. However, since we process attributes\n      // in `update` this should not be possible (or an extreme corner case\n      // that we'd like to discover).\n      // mark state reflecting\n      this.__reflectingProperty = name;\n      if (attrValue == null) {\n        this.removeAttribute(attr);\n      } else {\n        this.setAttribute(attr, attrValue as string);\n      }\n      // mark state not reflecting\n      this.__reflectingProperty = null;\n    }\n  }\n\n  /** @internal */\n  _$attributeToProperty(name: string, value: string | null) {\n    const ctor = this.constructor as typeof ReactiveElement;\n    // Note, hint this as an `AttributeMap` so closure clearly understands\n    // the type; it has issues with tracking types through statics\n    const propName = (ctor.__attributeToPropertyMap as AttributeMap).get(name);\n    // Use tracking info to avoid reflecting a property value to an attribute\n    // if it was just set because the attribute changed.\n    if (propName !== undefined && this.__reflectingProperty !== propName) {\n      const options = ctor.getPropertyOptions(propName);\n      const converter =\n        typeof options.converter === 'function'\n          ? {fromAttribute: options.converter}\n          : options.converter?.fromAttribute !== undefined\n          ? options.converter\n          : defaultConverter;\n      // mark state reflecting\n      this.__reflectingProperty = propName;\n      this[propName as keyof this] = converter.fromAttribute!(\n        value,\n        options.type\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      ) as any;\n      // mark state not reflecting\n      this.__reflectingProperty = null;\n    }\n  }\n\n  /**\n   * Requests an update which is processed asynchronously. This should be called\n   * when an element should update based on some state not triggered by setting\n   * a reactive property. In this case, pass no arguments. It should also be\n   * called when manually implementing a property setter. In this case, pass the\n   * property `name` and `oldValue` to ensure that any configured property\n   * options are honored.\n   *\n   * @param name name of requesting property\n   * @param oldValue old value of requesting property\n   * @param options property options to use instead of the previously\n   *     configured options\n   * @category updates\n   */\n  requestUpdate(\n    name?: PropertyKey,\n    oldValue?: unknown,\n    options?: PropertyDeclaration\n  ): void {\n    // If we have a property key, perform property update steps.\n    if (name !== undefined) {\n      if (DEV_MODE && (name as unknown) instanceof Event) {\n        issueWarning(\n          ``,\n          `The requestUpdate() method was called with an Event as the property name. This is probably a mistake caused by binding this.requestUpdate as an event listener. Instead bind a function that will call it with no arguments: () => this.requestUpdate()`\n        );\n      }\n      options ??= (\n        this.constructor as typeof ReactiveElement\n      ).getPropertyOptions(name);\n      const hasChanged = options.hasChanged ?? notEqual;\n      const newValue = this[name as keyof this];\n      if (hasChanged(newValue, oldValue)) {\n        this._$changeProperty(name, oldValue, options);\n      } else {\n        // Abort the request if the property should not be considered changed.\n        return;\n      }\n    }\n    if (this.isUpdatePending === false) {\n      this.__updatePromise = this.__enqueueUpdate();\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _$changeProperty(\n    name: PropertyKey,\n    oldValue: unknown,\n    options: PropertyDeclaration\n  ) {\n    // TODO (justinfagnani): Create a benchmark of Map.has() + Map.set(\n    // vs just Map.set()\n    if (!this._$changedProperties.has(name)) {\n      this._$changedProperties.set(name, oldValue);\n    }\n    // Add to reflecting properties set.\n    // Note, it's important that every change has a chance to add the\n    // property to `__reflectingProperties`. This ensures setting\n    // attribute + property reflects correctly.\n    if (options.reflect === true && this.__reflectingProperty !== name) {\n      (this.__reflectingProperties ??= new Set<PropertyKey>()).add(name);\n    }\n  }\n\n  /**\n   * Sets up the element to asynchronously update.\n   */\n  private async __enqueueUpdate() {\n    this.isUpdatePending = true;\n    try {\n      // Ensure any previous update has resolved before updating.\n      // This `await` also ensures that property changes are batched.\n      await this.__updatePromise;\n    } catch (e) {\n      // Refire any previous errors async so they do not disrupt the update\n      // cycle. Errors are refired so developers have a chance to observe\n      // them, and this can be done by implementing\n      // `window.onunhandledrejection`.\n      Promise.reject(e);\n    }\n    const result = this.scheduleUpdate();\n    // If `scheduleUpdate` returns a Promise, we await it. This is done to\n    // enable coordinating updates with a scheduler. Note, the result is\n    // checked to avoid delaying an additional microtask unless we need to.\n    if (result != null) {\n      await result;\n    }\n    return !this.isUpdatePending;\n  }\n\n  /**\n   * Schedules an element update. You can override this method to change the\n   * timing of updates by returning a Promise. The update will await the\n   * returned Promise, and you should resolve the Promise to allow the update\n   * to proceed. If this method is overridden, `super.scheduleUpdate()`\n   * must be called.\n   *\n   * For instance, to schedule updates to occur just before the next frame:\n   *\n   * ```ts\n   * override protected async scheduleUpdate(): Promise<unknown> {\n   *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n   *   super.scheduleUpdate();\n   * }\n   * ```\n   * @category updates\n   */\n  protected scheduleUpdate(): void | Promise<unknown> {\n    const result = this.performUpdate();\n    if (\n      DEV_MODE &&\n      (this.constructor as typeof ReactiveElement).enabledWarnings!.includes(\n        'async-perform-update'\n      ) &&\n      typeof (result as unknown as Promise<unknown> | undefined)?.then ===\n        'function'\n    ) {\n      issueWarning(\n        'async-perform-update',\n        `Element ${this.localName} returned a Promise from performUpdate(). ` +\n          `This behavior is deprecated and will be removed in a future ` +\n          `version of ReactiveElement.`\n      );\n    }\n    return result;\n  }\n\n  /**\n   * Performs an element update. Note, if an exception is thrown during the\n   * update, `firstUpdated` and `updated` will not be called.\n   *\n   * Call `performUpdate()` to immediately process a pending update. This should\n   * generally not be needed, but it can be done in rare cases when you need to\n   * update synchronously.\n   *\n   * @category updates\n   */\n  protected performUpdate(): void {\n    // Abort any update if one is not pending when this is called.\n    // This can happen if `performUpdate` is called early to \"flush\"\n    // the update.\n    if (!this.isUpdatePending) {\n      return;\n    }\n    debugLogEvent?.({kind: 'update'});\n    if (!this.hasUpdated) {\n      // Create renderRoot before first update. This occurs in `connectedCallback`\n      // but is done here to support out of tree calls to `enableUpdating`/`performUpdate`.\n      (this as Mutable<typeof this, 'renderRoot'>).renderRoot ??=\n        this.createRenderRoot();\n      if (DEV_MODE) {\n        // Produce warning if any reactive properties on the prototype are\n        // shadowed by class fields. Instance fields set before upgrade are\n        // deleted by this point, so any own property is caused by class field\n        // initialization in the constructor.\n        const ctor = this.constructor as typeof ReactiveElement;\n        const shadowedProperties = [...ctor.elementProperties.keys()].filter(\n          (p) => this.hasOwnProperty(p) && p in getPrototypeOf(this)\n        );\n        if (shadowedProperties.length) {\n          throw new Error(\n            `The following properties on element ${this.localName} will not ` +\n              `trigger updates as expected because they are set using class ` +\n              `fields: ${shadowedProperties.join(', ')}. ` +\n              `Native class fields and some compiled output will overwrite ` +\n              `accessors used for detecting changes. See ` +\n              `https://lit.dev/msg/class-field-shadowing ` +\n              `for more information.`\n          );\n        }\n      }\n      // Mixin instance properties once, if they exist.\n      if (this.__instanceProperties) {\n        // TODO (justinfagnani): should we use the stored value? Could a new value\n        // have been set since we stored the own property value?\n        for (const [p, value] of this.__instanceProperties) {\n          this[p as keyof this] = value as this[keyof this];\n        }\n        this.__instanceProperties = undefined;\n      }\n      // Trigger initial value reflection and populate the initial\n      // changedProperties map, but only for the case of experimental\n      // decorators on accessors, which will not have already populated the\n      // changedProperties map. We can't know if these accessors had\n      // initializers, so we just set them anyway - a difference from\n      // experimental decorators on fields and standard decorators on\n      // auto-accessors.\n      // For context why experimentalDecorators with auto accessors are handled\n      // specifically also see:\n      // https://github.com/lit/lit/pull/4183#issuecomment-1711959635\n      const elementProperties = (this.constructor as typeof ReactiveElement)\n        .elementProperties;\n      if (elementProperties.size > 0) {\n        for (const [p, options] of elementProperties) {\n          if (\n            options.wrapped === true &&\n            !this._$changedProperties.has(p) &&\n            this[p as keyof this] !== undefined\n          ) {\n            this._$changeProperty(p, this[p as keyof this], options);\n          }\n        }\n      }\n    }\n    let shouldUpdate = false;\n    const changedProperties = this._$changedProperties;\n    try {\n      shouldUpdate = this.shouldUpdate(changedProperties);\n      if (shouldUpdate) {\n        this.willUpdate(changedProperties);\n        this.__controllers?.forEach((c) => c.hostUpdate?.());\n        this.update(changedProperties);\n      } else {\n        this.__markUpdated();\n      }\n    } catch (e) {\n      // Prevent `firstUpdated` and `updated` from running when there's an\n      // update exception.\n      shouldUpdate = false;\n      // Ensure element can accept additional updates after an exception.\n      this.__markUpdated();\n      throw e;\n    }\n    // The update is no longer considered pending and further updates are now allowed.\n    if (shouldUpdate) {\n      this._$didUpdate(changedProperties);\n    }\n  }\n\n  /**\n   * Invoked before `update()` to compute values needed during the update.\n   *\n   * Implement `willUpdate` to compute property values that depend on other\n   * properties and are used in the rest of the update process.\n   *\n   * ```ts\n   * willUpdate(changedProperties) {\n   *   // only need to check changed properties for an expensive computation.\n   *   if (changedProperties.has('firstName') || changedProperties.has('lastName')) {\n   *     this.sha = computeSHA(`${this.firstName} ${this.lastName}`);\n   *   }\n   * }\n   *\n   * render() {\n   *   return html`SHA: ${this.sha}`;\n   * }\n   * ```\n   *\n   * @category updates\n   */\n  protected willUpdate(_changedProperties: PropertyValues): void {}\n\n  // Note, this is an override point for polyfill-support.\n  // @internal\n  _$didUpdate(changedProperties: PropertyValues) {\n    this.__controllers?.forEach((c) => c.hostUpdated?.());\n    if (!this.hasUpdated) {\n      this.hasUpdated = true;\n      this.firstUpdated(changedProperties);\n    }\n    this.updated(changedProperties);\n    if (\n      DEV_MODE &&\n      this.isUpdatePending &&\n      (this.constructor as typeof ReactiveElement).enabledWarnings!.includes(\n        'change-in-update'\n      )\n    ) {\n      issueWarning(\n        'change-in-update',\n        `Element ${this.localName} scheduled an update ` +\n          `(generally because a property was set) ` +\n          `after an update completed, causing a new update to be scheduled. ` +\n          `This is inefficient and should be avoided unless the next update ` +\n          `can only be scheduled as a side effect of the previous update.`\n      );\n    }\n  }\n\n  private __markUpdated() {\n    this._$changedProperties = new Map();\n    this.isUpdatePending = false;\n  }\n\n  /**\n   * Returns a Promise that resolves when the element has completed updating.\n   * The Promise value is a boolean that is `true` if the element completed the\n   * update without triggering another update. The Promise result is `false` if\n   * a property was set inside `updated()`. If the Promise is rejected, an\n   * exception was thrown during the update.\n   *\n   * To await additional asynchronous work, override the `getUpdateComplete`\n   * method. For example, it is sometimes useful to await a rendered element\n   * before fulfilling this Promise. To do this, first await\n   * `super.getUpdateComplete()`, then any subsequent state.\n   *\n   * @return A promise of a boolean that resolves to true if the update completed\n   *     without triggering another update.\n   * @category updates\n   */\n  get updateComplete(): Promise<boolean> {\n    return this.getUpdateComplete();\n  }\n\n  /**\n   * Override point for the `updateComplete` promise.\n   *\n   * It is not safe to override the `updateComplete` getter directly due to a\n   * limitation in TypeScript which means it is not possible to call a\n   * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n   * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n   * This method should be overridden instead. For example:\n   *\n   * ```ts\n   * class MyElement extends LitElement {\n   *   override async getUpdateComplete() {\n   *     const result = await super.getUpdateComplete();\n   *     await this._myChild.updateComplete;\n   *     return result;\n   *   }\n   * }\n   * ```\n   *\n   * @return A promise of a boolean that resolves to true if the update completed\n   *     without triggering another update.\n   * @category updates\n   */\n  protected getUpdateComplete(): Promise<boolean> {\n    return this.__updatePromise;\n  }\n\n  /**\n   * Controls whether or not `update()` should be called when the element requests\n   * an update. By default, this method always returns `true`, but this can be\n   * customized to control when to update.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected shouldUpdate(_changedProperties: PropertyValues): boolean {\n    return true;\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes.\n   * It can be overridden to render and keep updated element DOM.\n   * Setting properties inside this method will *not* trigger\n   * another update.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected update(_changedProperties: PropertyValues) {\n    // The forEach() expression will only run when when __reflectingProperties is\n    // defined, and it returns undefined, setting __reflectingProperties to\n    // undefined\n    this.__reflectingProperties &&= this.__reflectingProperties.forEach((p) =>\n      this.__propertyToAttribute(p, this[p as keyof this])\n    ) as undefined;\n    this.__markUpdated();\n  }\n\n  /**\n   * Invoked whenever the element is updated. Implement to perform\n   * post-updating tasks via DOM APIs, for example, focusing an element.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected updated(_changedProperties: PropertyValues) {}\n\n  /**\n   * Invoked when the element is first updated. Implement to perform one time\n   * work on the element after update.\n   *\n   * ```ts\n   * firstUpdated() {\n   *   this.renderRoot.getElementById('my-text-area').focus();\n   * }\n   * ```\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected firstUpdated(_changedProperties: PropertyValues) {}\n}\n// Assigned here to work around a jscompiler bug with static fields\n// when compiling to ES5.\n// https://github.com/google/closure-compiler/issues/3177\n(ReactiveElement as unknown as Record<string, unknown>)[\n  JSCompiler_renameProperty('elementProperties', ReactiveElement)\n] = new Map();\n(ReactiveElement as unknown as Record<string, unknown>)[\n  JSCompiler_renameProperty('finalized', ReactiveElement)\n] = new Map();\n\n// Apply polyfills if available\npolyfillSupport?.({ReactiveElement});\n\n// Dev mode warnings...\nif (DEV_MODE) {\n  // Default warning set.\n  ReactiveElement.enabledWarnings = [\n    'change-in-update',\n    'async-perform-update',\n  ];\n  const ensureOwnWarnings = function (ctor: typeof ReactiveElement) {\n    if (\n      !ctor.hasOwnProperty(JSCompiler_renameProperty('enabledWarnings', ctor))\n    ) {\n      ctor.enabledWarnings = ctor.enabledWarnings!.slice();\n    }\n  };\n  ReactiveElement.enableWarning = function (\n    this: typeof ReactiveElement,\n    warning: WarningKind\n  ) {\n    ensureOwnWarnings(this);\n    if (!this.enabledWarnings!.includes(warning)) {\n      this.enabledWarnings!.push(warning);\n    }\n  };\n  ReactiveElement.disableWarning = function (\n    this: typeof ReactiveElement,\n    warning: WarningKind\n  ) {\n    ensureOwnWarnings(this);\n    const i = this.enabledWarnings!.indexOf(warning);\n    if (i >= 0) {\n      this.enabledWarnings!.splice(i, 1);\n    }\n  };\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for ReactiveElement usage.\n(global.reactiveElementVersions ??= []).push('2.0.4');\nif (DEV_MODE && global.reactiveElementVersions.length > 1) {\n  issueWarning!(\n    'multiple-versions',\n    `Multiple versions of Lit loaded. Loading multiple versions ` +\n      `is not recommended.`\n  );\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n// IMPORTANT: these imports must be type-only\nimport type {Directive, DirectiveResult, PartInfo} from './directive.js';\n\nconst DEV_MODE = true;\nconst ENABLE_EXTRA_SECURITY_HOOKS = true;\nconst ENABLE_SHADYDOM_NOPATCH = true;\nconst NODE_MODE = false;\n\n// Allows minifiers to rename references to globalThis\nconst global = globalThis;\n\n/**\n * Contains types that are part of the unstable debug API.\n *\n * Everything in this API is not stable and may change or be removed in the future,\n * even on patch releases.\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace LitUnstable {\n  /**\n   * When Lit is running in dev mode and `window.emitLitDebugLogEvents` is true,\n   * we will emit 'lit-debug' events to window, with live details about the update and render\n   * lifecycle. These can be useful for writing debug tooling and visualizations.\n   *\n   * Please be aware that running with window.emitLitDebugLogEvents has performance overhead,\n   * making certain operations that are normally very cheap (like a no-op render) much slower,\n   * because we must copy data and dispatch events.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  export namespace DebugLog {\n    export type Entry =\n      | TemplatePrep\n      | TemplateInstantiated\n      | TemplateInstantiatedAndUpdated\n      | TemplateUpdating\n      | BeginRender\n      | EndRender\n      | CommitPartEntry\n      | SetPartValue;\n    export interface TemplatePrep {\n      kind: 'template prep';\n      template: Template;\n      strings: TemplateStringsArray;\n      clonableTemplate: HTMLTemplateElement;\n      parts: TemplatePart[];\n    }\n    export interface BeginRender {\n      kind: 'begin render';\n      id: number;\n      value: unknown;\n      container: HTMLElement | DocumentFragment;\n      options: RenderOptions | undefined;\n      part: ChildPart | undefined;\n    }\n    export interface EndRender {\n      kind: 'end render';\n      id: number;\n      value: unknown;\n      container: HTMLElement | DocumentFragment;\n      options: RenderOptions | undefined;\n      part: ChildPart;\n    }\n    export interface TemplateInstantiated {\n      kind: 'template instantiated';\n      template: Template | CompiledTemplate;\n      instance: TemplateInstance;\n      options: RenderOptions | undefined;\n      fragment: Node;\n      parts: Array<Part | undefined>;\n      values: unknown[];\n    }\n    export interface TemplateInstantiatedAndUpdated {\n      kind: 'template instantiated and updated';\n      template: Template | CompiledTemplate;\n      instance: TemplateInstance;\n      options: RenderOptions | undefined;\n      fragment: Node;\n      parts: Array<Part | undefined>;\n      values: unknown[];\n    }\n    export interface TemplateUpdating {\n      kind: 'template updating';\n      template: Template | CompiledTemplate;\n      instance: TemplateInstance;\n      options: RenderOptions | undefined;\n      parts: Array<Part | undefined>;\n      values: unknown[];\n    }\n    export interface SetPartValue {\n      kind: 'set part';\n      part: Part;\n      value: unknown;\n      valueIndex: number;\n      values: unknown[];\n      templateInstance: TemplateInstance;\n    }\n\n    export type CommitPartEntry =\n      | CommitNothingToChildEntry\n      | CommitText\n      | CommitNode\n      | CommitAttribute\n      | CommitProperty\n      | CommitBooleanAttribute\n      | CommitEventListener\n      | CommitToElementBinding;\n\n    export interface CommitNothingToChildEntry {\n      kind: 'commit nothing to child';\n      start: ChildNode;\n      end: ChildNode | null;\n      parent: Disconnectable | undefined;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitText {\n      kind: 'commit text';\n      node: Text;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitNode {\n      kind: 'commit node';\n      start: Node;\n      parent: Disconnectable | undefined;\n      value: Node;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitAttribute {\n      kind: 'commit attribute';\n      element: Element;\n      name: string;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitProperty {\n      kind: 'commit property';\n      element: Element;\n      name: string;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitBooleanAttribute {\n      kind: 'commit boolean attribute';\n      element: Element;\n      name: string;\n      value: boolean;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitEventListener {\n      kind: 'commit event listener';\n      element: Element;\n      name: string;\n      value: unknown;\n      oldListener: unknown;\n      options: RenderOptions | undefined;\n      // True if we're removing the old event listener (e.g. because settings changed, or value is nothing)\n      removeListener: boolean;\n      // True if we're adding a new event listener (e.g. because first render, or settings changed)\n      addListener: boolean;\n    }\n\n    export interface CommitToElementBinding {\n      kind: 'commit to element binding';\n      element: Element;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n  }\n}\n\ninterface DebugLoggingWindow {\n  // Even in dev mode, we generally don't want to emit these events, as that's\n  // another level of cost, so only emit them when DEV_MODE is true _and_ when\n  // window.emitLitDebugEvents is true.\n  emitLitDebugLogEvents?: boolean;\n}\n\n/**\n * Useful for visualizing and logging insights into what the Lit template system is doing.\n *\n * Compiled out of prod mode builds.\n */\nconst debugLogEvent = DEV_MODE\n  ? (event: LitUnstable.DebugLog.Entry) => {\n      const shouldEmit = (global as unknown as DebugLoggingWindow)\n        .emitLitDebugLogEvents;\n      if (!shouldEmit) {\n        return;\n      }\n      global.dispatchEvent(\n        new CustomEvent<LitUnstable.DebugLog.Entry>('lit-debug', {\n          detail: event,\n        }),\n      );\n    }\n  : undefined;\n// Used for connecting beginRender and endRender events when there are nested\n// renders when errors are thrown preventing an endRender event from being\n// called.\nlet debugLogRenderId = 0;\n\nlet issueWarning: (code: string, warning: string) => void;\n\nif (DEV_MODE) {\n  global.litIssuedWarnings ??= new Set();\n\n  // Issue a warning, if we haven't already.\n  issueWarning = (code: string, warning: string) => {\n    warning += code\n      ? ` See https://lit.dev/msg/${code} for more information.`\n      : '';\n    if (!global.litIssuedWarnings!.has(warning)) {\n      console.warn(warning);\n      global.litIssuedWarnings!.add(warning);\n    }\n  };\n\n  issueWarning(\n    'dev-mode',\n    `Lit is in dev mode. Not recommended for production!`,\n  );\n}\n\nconst wrap =\n  ENABLE_SHADYDOM_NOPATCH &&\n  global.ShadyDOM?.inUse &&\n  global.ShadyDOM?.noPatch === true\n    ? (global.ShadyDOM!.wrap as <T extends Node>(node: T) => T)\n    : <T extends Node>(node: T) => node;\n\nconst trustedTypes = (global as unknown as Window).trustedTypes;\n\n/**\n * Our TrustedTypePolicy for HTML which is declared using the html template\n * tag function.\n *\n * That HTML is a developer-authored constant, and is parsed with innerHTML\n * before any untrusted expressions have been mixed in. Therefor it is\n * considered safe by construction.\n */\nconst policy = trustedTypes\n  ? trustedTypes.createPolicy('lit-html', {\n      createHTML: (s) => s,\n    })\n  : undefined;\n\n/**\n * Used to sanitize any value before it is written into the DOM. This can be\n * used to implement a security policy of allowed and disallowed values in\n * order to prevent XSS attacks.\n *\n * One way of using this callback would be to check attributes and properties\n * against a list of high risk fields, and require that values written to such\n * fields be instances of a class which is safe by construction. Closure's Safe\n * HTML Types is one implementation of this technique (\n * https://github.com/google/safe-html-types/blob/master/doc/safehtml-types.md).\n * The TrustedTypes polyfill in API-only mode could also be used as a basis\n * for this technique (https://github.com/WICG/trusted-types).\n *\n * @param node The HTML node (usually either a #text node or an Element) that\n *     is being written to. Note that this is just an exemplar node, the write\n *     may take place against another instance of the same class of node.\n * @param name The name of an attribute or property (for example, 'href').\n * @param type Indicates whether the write that's about to be performed will\n *     be to a property or a node.\n * @return A function that will sanitize this class of writes.\n */\nexport type SanitizerFactory = (\n  node: Node,\n  name: string,\n  type: 'property' | 'attribute',\n) => ValueSanitizer;\n\n/**\n * A function which can sanitize values that will be written to a specific kind\n * of DOM sink.\n *\n * See SanitizerFactory.\n *\n * @param value The value to sanitize. Will be the actual value passed into\n *     the lit-html template literal, so this could be of any type.\n * @return The value to write to the DOM. Usually the same as the input value,\n *     unless sanitization is needed.\n */\nexport type ValueSanitizer = (value: unknown) => unknown;\n\nconst identityFunction: ValueSanitizer = (value: unknown) => value;\nconst noopSanitizer: SanitizerFactory = (\n  _node: Node,\n  _name: string,\n  _type: 'property' | 'attribute',\n) => identityFunction;\n\n/** Sets the global sanitizer factory. */\nconst setSanitizer = (newSanitizer: SanitizerFactory) => {\n  if (!ENABLE_EXTRA_SECURITY_HOOKS) {\n    return;\n  }\n  if (sanitizerFactoryInternal !== noopSanitizer) {\n    throw new Error(\n      `Attempted to overwrite existing lit-html security policy.` +\n        ` setSanitizeDOMValueFactory should be called at most once.`,\n    );\n  }\n  sanitizerFactoryInternal = newSanitizer;\n};\n\n/**\n * Only used in internal tests, not a part of the public API.\n */\nconst _testOnlyClearSanitizerFactoryDoNotCallOrElse = () => {\n  sanitizerFactoryInternal = noopSanitizer;\n};\n\nconst createSanitizer: SanitizerFactory = (node, name, type) => {\n  return sanitizerFactoryInternal(node, name, type);\n};\n\n// Added to an attribute name to mark the attribute as bound so we can find\n// it easily.\nconst boundAttributeSuffix = '$lit$';\n\n// This marker is used in many syntactic positions in HTML, so it must be\n// a valid element name and attribute name. We don't support dynamic names (yet)\n// but this at least ensures that the parse tree is closer to the template\n// intention.\nconst marker = `lit$${Math.random().toFixed(9).slice(2)}$`;\n\n// String used to tell if a comment is a marker comment\nconst markerMatch = '?' + marker;\n\n// Text used to insert a comment marker node. We use processing instruction\n// syntax because it's slightly smaller, but parses as a comment node.\nconst nodeMarker = `<${markerMatch}>`;\n\nconst d =\n  NODE_MODE && global.document === undefined\n    ? ({\n        createTreeWalker() {\n          return {};\n        },\n      } as unknown as Document)\n    : document;\n\n// Creates a dynamic marker. We never have to search for these in the DOM.\nconst createMarker = () => d.createComment('');\n\n// https://tc39.github.io/ecma262/#sec-typeof-operator\ntype Primitive = null | undefined | boolean | number | string | symbol | bigint;\nconst isPrimitive = (value: unknown): value is Primitive =>\n  value === null || (typeof value != 'object' && typeof value != 'function');\nconst isArray = Array.isArray;\nconst isIterable = (value: unknown): value is Iterable<unknown> =>\n  isArray(value) ||\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  typeof (value as any)?.[Symbol.iterator] === 'function';\n\nconst SPACE_CHAR = `[ \\t\\n\\f\\r]`;\nconst ATTR_VALUE_CHAR = `[^ \\t\\n\\f\\r\"'\\`<>=]`;\nconst NAME_CHAR = `[^\\\\s\"'>=/]`;\n\n// These regexes represent the five parsing states that we care about in the\n// Template's HTML scanner. They match the *end* of the state they're named\n// after.\n// Depending on the match, we transition to a new state. If there's no match,\n// we stay in the same state.\n// Note that the regexes are stateful. We utilize lastIndex and sync it\n// across the multiple regexes used. In addition to the five regexes below\n// we also dynamically create a regex to find the matching end tags for raw\n// text elements.\n\n/**\n * End of text is: `<` followed by:\n *   (comment start) or (tag) or (dynamic tag binding)\n */\nconst textEndRegex = /<(?:(!--|\\/[^a-zA-Z])|(\\/?[a-zA-Z][^>\\s]*)|(\\/?$))/g;\nconst COMMENT_START = 1;\nconst TAG_NAME = 2;\nconst DYNAMIC_TAG_NAME = 3;\n\nconst commentEndRegex = /-->/g;\n/**\n * Comments not started with <!--, like </{, can be ended by a single `>`\n */\nconst comment2EndRegex = />/g;\n\n/**\n * The tagEnd regex matches the end of the \"inside an opening\" tag syntax\n * position. It either matches a `>`, an attribute-like sequence, or the end\n * of the string after a space (attribute-name position ending).\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\t\\n\\f\\r\" are HTML space characters:\n * https://infra.spec.whatwg.org/#ascii-whitespace\n *\n * So an attribute is:\n *  * The name: any character except a whitespace character, (\"), ('), \">\",\n *    \"=\", or \"/\". Note: this is different from the HTML spec which also excludes control characters.\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nconst tagEndRegex = new RegExp(\n  `>|${SPACE_CHAR}(?:(${NAME_CHAR}+)(${SPACE_CHAR}*=${SPACE_CHAR}*(?:${ATTR_VALUE_CHAR}|(\"|')|))|$)`,\n  'g',\n);\nconst ENTIRE_MATCH = 0;\nconst ATTRIBUTE_NAME = 1;\nconst SPACES_AND_EQUALS = 2;\nconst QUOTE_CHAR = 3;\n\nconst singleQuoteAttrEndRegex = /'/g;\nconst doubleQuoteAttrEndRegex = /\"/g;\n/**\n * Matches the raw text elements.\n *\n * Comments are not parsed within raw text elements, so we need to search their\n * text content for marker strings.\n */\nconst rawTextElement = /^(?:script|style|textarea|title)$/i;\n\n/** TemplateResult types */\nconst HTML_RESULT = 1;\nconst SVG_RESULT = 2;\n\ntype ResultType = typeof HTML_RESULT | typeof SVG_RESULT;\n\n// TemplatePart types\n// IMPORTANT: these must match the values in PartType\nconst ATTRIBUTE_PART = 1;\nconst CHILD_PART = 2;\nconst PROPERTY_PART = 3;\nconst BOOLEAN_ATTRIBUTE_PART = 4;\nconst EVENT_PART = 5;\nconst ELEMENT_PART = 6;\nconst COMMENT_PART = 7;\n\n/**\n * The return type of the template tag functions, {@linkcode html} and\n * {@linkcode svg} when it hasn't been compiled by @lit-labs/compiler.\n *\n * A `TemplateResult` object holds all the information about a template\n * expression required to render it: the template strings, expression values,\n * and type of template (html or svg).\n *\n * `TemplateResult` objects do not create any DOM on their own. To create or\n * update DOM you need to render the `TemplateResult`. See\n * [Rendering](https://lit.dev/docs/components/rendering) for more information.\n *\n */\nexport type UncompiledTemplateResult<T extends ResultType = ResultType> = {\n  // This property needs to remain unminified.\n  ['_$litType$']: T;\n  strings: TemplateStringsArray;\n  values: unknown[];\n};\n\n/**\n * This is a template result that may be either uncompiled or compiled.\n *\n * In the future, TemplateResult will be this type. If you want to explicitly\n * note that a template result is potentially compiled, you can reference this\n * type and it will continue to behave the same through the next major version\n * of Lit. This can be useful for code that wants to prepare for the next\n * major version of Lit.\n */\nexport type MaybeCompiledTemplateResult<T extends ResultType = ResultType> =\n  | UncompiledTemplateResult<T>\n  | CompiledTemplateResult;\n\n/**\n * The return type of the template tag functions, {@linkcode html} and\n * {@linkcode svg}.\n *\n * A `TemplateResult` object holds all the information about a template\n * expression required to render it: the template strings, expression values,\n * and type of template (html or svg).\n *\n * `TemplateResult` objects do not create any DOM on their own. To create or\n * update DOM you need to render the `TemplateResult`. See\n * [Rendering](https://lit.dev/docs/components/rendering) for more information.\n *\n * In Lit 4, this type will be an alias of\n * MaybeCompiledTemplateResult, so that code will get type errors if it assumes\n * that Lit templates are not compiled. When deliberately working with only\n * one, use either {@linkcode CompiledTemplateResult} or\n * {@linkcode UncompiledTemplateResult} explicitly.\n */\nexport type TemplateResult<T extends ResultType = ResultType> =\n  UncompiledTemplateResult<T>;\n\nexport type HTMLTemplateResult = TemplateResult<typeof HTML_RESULT>;\n\nexport type SVGTemplateResult = TemplateResult<typeof SVG_RESULT>;\n\n/**\n * A TemplateResult that has been compiled by @lit-labs/compiler, skipping the\n * prepare step.\n */\nexport interface CompiledTemplateResult {\n  // This is a factory in order to make template initialization lazy\n  // and allow ShadyRenderOptions scope to be passed in.\n  // This property needs to remain unminified.\n  ['_$litType$']: CompiledTemplate;\n  values: unknown[];\n}\n\nexport interface CompiledTemplate extends Omit<Template, 'el'> {\n  // el is overridden to be optional. We initialize it on first render\n  el?: HTMLTemplateElement;\n\n  // The prepared HTML string to create a template element from.\n  // The type is a TemplateStringsArray to guarantee that the value came from\n  // source code, preventing a JSON injection attack.\n  h: TemplateStringsArray;\n}\n\n/**\n * Generates a template literal tag function that returns a TemplateResult with\n * the given result type.\n */\nconst tag =\n  <T extends ResultType>(type: T) =>\n  (strings: TemplateStringsArray, ...values: unknown[]): TemplateResult<T> => {\n    // Warn against templates octal escape sequences\n    // We do this here rather than in render so that the warning is closer to the\n    // template definition.\n    if (DEV_MODE && strings.some((s) => s === undefined)) {\n      console.warn(\n        'Some template strings are undefined.\\n' +\n          'This is probably caused by illegal octal escape sequences.',\n      );\n    }\n    if (DEV_MODE) {\n      // Import static-html.js results in a circular dependency which g3 doesn't\n      // handle. Instead we know that static values must have the field\n      // `_$litStatic$`.\n      if (\n        values.some((val) => (val as {_$litStatic$: unknown})?.['_$litStatic$'])\n      ) {\n        issueWarning(\n          '',\n          `Static values 'literal' or 'unsafeStatic' cannot be used as values to non-static templates.\\n` +\n            `Please use the static 'html' tag function. See https://lit.dev/docs/templates/expressions/#static-expressions`,\n        );\n      }\n    }\n    return {\n      // This property needs to remain unminified.\n      ['_$litType$']: type,\n      strings,\n      values,\n    };\n  };\n\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n *\n * ```ts\n * const header = (title: string) => html`<h1>${title}</h1>`;\n * ```\n *\n * The `html` tag returns a description of the DOM to render as a value. It is\n * lazy, meaning no work is done until the template is rendered. When rendering,\n * if a template comes from the same expression as a previously rendered result,\n * it's efficiently updated instead of replaced.\n */\nexport const html = tag(HTML_RESULT);\n\n/**\n * Interprets a template literal as an SVG fragment that can efficiently\n * render to and update a container.\n *\n * ```ts\n * const rect = svg`<rect width=\"10\" height=\"10\"></rect>`;\n *\n * const myImage = html`\n *   <svg viewBox=\"0 0 10 10\" xmlns=\"http://www.w3.org/2000/svg\">\n *     ${rect}\n *   </svg>`;\n * ```\n *\n * The `svg` *tag function* should only be used for SVG fragments, or elements\n * that would be contained **inside** an `<svg>` HTML element. A common error is\n * placing an `<svg>` *element* in a template tagged with the `svg` tag\n * function. The `<svg>` element is an HTML element and should be used within a\n * template tagged with the {@linkcode html} tag function.\n *\n * In LitElement usage, it's invalid to return an SVG fragment from the\n * `render()` method, as the SVG fragment will be contained within the element's\n * shadow root and thus cannot be used within an `<svg>` HTML element.\n */\nexport const svg = tag(SVG_RESULT);\n\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = Symbol.for('lit-noChange');\n\n/**\n * A sentinel value that signals a ChildPart to fully clear its content.\n *\n * ```ts\n * const button = html`${\n *  user.isAdmin\n *    ? html`<button>DELETE</button>`\n *    : nothing\n * }`;\n * ```\n *\n * Prefer using `nothing` over other falsy values as it provides a consistent\n * behavior between various expression binding contexts.\n *\n * In child expressions, `undefined`, `null`, `''`, and `nothing` all behave the\n * same and render no nodes. In attribute expressions, `nothing` _removes_ the\n * attribute, while `undefined` and `null` will render an empty string. In\n * property expressions `nothing` becomes `undefined`.\n */\nexport const nothing = Symbol.for('lit-nothing');\n\n/**\n * The cache of prepared templates, keyed by the tagged TemplateStringsArray\n * and _not_ accounting for the specific template tag used. This means that\n * template tags cannot be dynamic - the must statically be one of html, svg,\n * or attr. This restriction simplifies the cache lookup, which is on the hot\n * path for rendering.\n */\nconst templateCache = new WeakMap<TemplateStringsArray, Template>();\n\n/**\n * Object specifying options for controlling lit-html rendering. Note that\n * while `render` may be called multiple times on the same `container` (and\n * `renderBefore` reference node) to efficiently update the rendered content,\n * only the options passed in during the first render are respected during\n * the lifetime of renders to that unique `container` + `renderBefore`\n * combination.\n */\nexport interface RenderOptions {\n  /**\n   * An object to use as the `this` value for event listeners. It's often\n   * useful to set this to the host component rendering a template.\n   */\n  host?: object;\n  /**\n   * A DOM node before which to render content in the container.\n   */\n  renderBefore?: ChildNode | null;\n  /**\n   * Node used for cloning the template (`importNode` will be called on this\n   * node). This controls the `ownerDocument` of the rendered DOM, along with\n   * any inherited context. Defaults to the global `document`.\n   */\n  creationScope?: {importNode(node: Node, deep?: boolean): Node};\n  /**\n   * The initial connected state for the top-level part being rendered. If no\n   * `isConnected` option is set, `AsyncDirective`s will be connected by\n   * default. Set to `false` if the initial render occurs in a disconnected tree\n   * and `AsyncDirective`s should see `isConnected === false` for their initial\n   * render. The `part.setConnected()` method must be used subsequent to initial\n   * render to change the connected state of the part.\n   */\n  isConnected?: boolean;\n}\n\nconst walker = d.createTreeWalker(\n  d,\n  129 /* NodeFilter.SHOW_{ELEMENT|COMMENT} */,\n);\n\nlet sanitizerFactoryInternal: SanitizerFactory = noopSanitizer;\n\n//\n// Classes only below here, const variable declarations only above here...\n//\n// Keeping variable declarations and classes together improves minification.\n// Interfaces and type aliases can be interleaved freely.\n//\n\n// Type for classes that have a `_directive` or `_directives[]` field, used by\n// `resolveDirective`\nexport interface DirectiveParent {\n  _$parent?: DirectiveParent;\n  _$isConnected: boolean;\n  __directive?: Directive;\n  __directives?: Array<Directive | undefined>;\n}\n\nfunction trustFromTemplateString(\n  tsa: TemplateStringsArray,\n  stringFromTSA: string,\n): TrustedHTML {\n  // A security check to prevent spoofing of Lit template results.\n  // In the future, we may be able to replace this with Array.isTemplateObject,\n  // though we might need to make that check inside of the html and svg\n  // functions, because precompiled templates don't come in as\n  // TemplateStringArray objects.\n  if (!Array.isArray(tsa) || !tsa.hasOwnProperty('raw')) {\n    let message = 'invalid template strings array';\n    if (DEV_MODE) {\n      message = `\n          Internal Error: expected template strings to be an array\n          with a 'raw' field. Faking a template strings array by\n          calling html or svg like an ordinary function is effectively\n          the same as calling unsafeHtml and can lead to major security\n          issues, e.g. opening your code up to XSS attacks.\n          If you're using the html or svg tagged template functions normally\n          and still seeing this error, please file a bug at\n          https://github.com/lit/lit/issues/new?template=bug_report.md\n          and include information about your build tooling, if any.\n        `\n        .trim()\n        .replace(/\\n */g, '\\n');\n    }\n    throw new Error(message);\n  }\n  return policy !== undefined\n    ? policy.createHTML(stringFromTSA)\n    : (stringFromTSA as unknown as TrustedHTML);\n}\n\n/**\n * Returns an HTML string for the given TemplateStringsArray and result type\n * (HTML or SVG), along with the case-sensitive bound attribute names in\n * template order. The HTML contains comment markers denoting the `ChildPart`s\n * and suffixes on bound attributes denoting the `AttributeParts`.\n *\n * @param strings template strings array\n * @param type HTML or SVG\n * @return Array containing `[html, attrNames]` (array returned for terseness,\n *     to avoid object fields since this code is shared with non-minified SSR\n *     code)\n */\nconst getTemplateHtml = (\n  strings: TemplateStringsArray,\n  type: ResultType,\n): [TrustedHTML, Array<string>] => {\n  // Insert makers into the template HTML to represent the position of\n  // bindings. The following code scans the template strings to determine the\n  // syntactic position of the bindings. They can be in text position, where\n  // we insert an HTML comment, attribute value position, where we insert a\n  // sentinel string and re-write the attribute name, or inside a tag where\n  // we insert the sentinel string.\n  const l = strings.length - 1;\n  // Stores the case-sensitive bound attribute names in the order of their\n  // parts. ElementParts are also reflected in this array as undefined\n  // rather than a string, to disambiguate from attribute bindings.\n  const attrNames: Array<string> = [];\n  let html = type === SVG_RESULT ? '<svg>' : '';\n\n  // When we're inside a raw text tag (not it's text content), the regex\n  // will still be tagRegex so we can find attributes, but will switch to\n  // this regex when the tag ends.\n  let rawTextEndRegex: RegExp | undefined;\n\n  // The current parsing state, represented as a reference to one of the\n  // regexes\n  let regex = textEndRegex;\n\n  for (let i = 0; i < l; i++) {\n    const s = strings[i];\n    // The index of the end of the last attribute name. When this is\n    // positive at end of a string, it means we're in an attribute value\n    // position and need to rewrite the attribute name.\n    // We also use a special value of -2 to indicate that we encountered\n    // the end of a string in attribute name position.\n    let attrNameEndIndex = -1;\n    let attrName: string | undefined;\n    let lastIndex = 0;\n    let match!: RegExpExecArray | null;\n\n    // The conditions in this loop handle the current parse state, and the\n    // assignments to the `regex` variable are the state transitions.\n    while (lastIndex < s.length) {\n      // Make sure we start searching from where we previously left off\n      regex.lastIndex = lastIndex;\n      match = regex.exec(s);\n      if (match === null) {\n        break;\n      }\n      lastIndex = regex.lastIndex;\n      if (regex === textEndRegex) {\n        if (match[COMMENT_START] === '!--') {\n          regex = commentEndRegex;\n        } else if (match[COMMENT_START] !== undefined) {\n          // We started a weird comment, like </{\n          regex = comment2EndRegex;\n        } else if (match[TAG_NAME] !== undefined) {\n          if (rawTextElement.test(match[TAG_NAME])) {\n            // Record if we encounter a raw-text element. We'll switch to\n            // this regex at the end of the tag.\n            rawTextEndRegex = new RegExp(`</${match[TAG_NAME]}`, 'g');\n          }\n          regex = tagEndRegex;\n        } else if (match[DYNAMIC_TAG_NAME] !== undefined) {\n          if (DEV_MODE) {\n            throw new Error(\n              'Bindings in tag names are not supported. Please use static templates instead. ' +\n                'See https://lit.dev/docs/templates/expressions/#static-expressions',\n            );\n          }\n          regex = tagEndRegex;\n        }\n      } else if (regex === tagEndRegex) {\n        if (match[ENTIRE_MATCH] === '>') {\n          // End of a tag. If we had started a raw-text element, use that\n          // regex\n          regex = rawTextEndRegex ?? textEndRegex;\n          // We may be ending an unquoted attribute value, so make sure we\n          // clear any pending attrNameEndIndex\n          attrNameEndIndex = -1;\n        } else if (match[ATTRIBUTE_NAME] === undefined) {\n          // Attribute name position\n          attrNameEndIndex = -2;\n        } else {\n          attrNameEndIndex = regex.lastIndex - match[SPACES_AND_EQUALS].length;\n          attrName = match[ATTRIBUTE_NAME];\n          regex =\n            match[QUOTE_CHAR] === undefined\n              ? tagEndRegex\n              : match[QUOTE_CHAR] === '\"'\n                ? doubleQuoteAttrEndRegex\n                : singleQuoteAttrEndRegex;\n        }\n      } else if (\n        regex === doubleQuoteAttrEndRegex ||\n        regex === singleQuoteAttrEndRegex\n      ) {\n        regex = tagEndRegex;\n      } else if (regex === commentEndRegex || regex === comment2EndRegex) {\n        regex = textEndRegex;\n      } else {\n        // Not one of the five state regexes, so it must be the dynamically\n        // created raw text regex and we're at the close of that element.\n        regex = tagEndRegex;\n        rawTextEndRegex = undefined;\n      }\n    }\n\n    if (DEV_MODE) {\n      // If we have a attrNameEndIndex, which indicates that we should\n      // rewrite the attribute name, assert that we're in a valid attribute\n      // position - either in a tag, or a quoted attribute value.\n      console.assert(\n        attrNameEndIndex === -1 ||\n          regex === tagEndRegex ||\n          regex === singleQuoteAttrEndRegex ||\n          regex === doubleQuoteAttrEndRegex,\n        'unexpected parse state B',\n      );\n    }\n\n    // We have four cases:\n    //  1. We're in text position, and not in a raw text element\n    //     (regex === textEndRegex): insert a comment marker.\n    //  2. We have a non-negative attrNameEndIndex which means we need to\n    //     rewrite the attribute name to add a bound attribute suffix.\n    //  3. We're at the non-first binding in a multi-binding attribute, use a\n    //     plain marker.\n    //  4. We're somewhere else inside the tag. If we're in attribute name\n    //     position (attrNameEndIndex === -2), add a sequential suffix to\n    //     generate a unique attribute name.\n\n    // Detect a binding next to self-closing tag end and insert a space to\n    // separate the marker from the tag end:\n    const end =\n      regex === tagEndRegex && strings[i + 1].startsWith('/>') ? ' ' : '';\n    html +=\n      regex === textEndRegex\n        ? s + nodeMarker\n        : attrNameEndIndex >= 0\n          ? (attrNames.push(attrName!),\n            s.slice(0, attrNameEndIndex) +\n              boundAttributeSuffix +\n              s.slice(attrNameEndIndex)) +\n            marker +\n            end\n          : s + marker + (attrNameEndIndex === -2 ? i : end);\n  }\n\n  const htmlResult: string | TrustedHTML =\n    html + (strings[l] || '<?>') + (type === SVG_RESULT ? '</svg>' : '');\n\n  // Returned as an array for terseness\n  return [trustFromTemplateString(strings, htmlResult), attrNames];\n};\n\n/** @internal */\nexport type {Template};\nclass Template {\n  /** @internal */\n  el!: HTMLTemplateElement;\n\n  parts: Array<TemplatePart> = [];\n\n  constructor(\n    // This property needs to remain unminified.\n    {strings, ['_$litType$']: type}: UncompiledTemplateResult,\n    options?: RenderOptions,\n  ) {\n    let node: Node | null;\n    let nodeIndex = 0;\n    let attrNameIndex = 0;\n    const partCount = strings.length - 1;\n    const parts = this.parts;\n\n    // Create template element\n    const [html, attrNames] = getTemplateHtml(strings, type);\n    this.el = Template.createElement(html, options);\n    walker.currentNode = this.el.content;\n\n    // Re-parent SVG nodes into template root\n    if (type === SVG_RESULT) {\n      const svgElement = this.el.content.firstChild!;\n      svgElement.replaceWith(...svgElement.childNodes);\n    }\n\n    // Walk the template to find binding markers and create TemplateParts\n    while ((node = walker.nextNode()) !== null && parts.length < partCount) {\n      if (node.nodeType === 1) {\n        if (DEV_MODE) {\n          const tag = (node as Element).localName;\n          // Warn if `textarea` includes an expression and throw if `template`\n          // does since these are not supported. We do this by checking\n          // innerHTML for anything that looks like a marker. This catches\n          // cases like bindings in textarea there markers turn into text nodes.\n          if (\n            /^(?:textarea|template)$/i!.test(tag) &&\n            (node as Element).innerHTML.includes(marker)\n          ) {\n            const m =\n              `Expressions are not supported inside \\`${tag}\\` ` +\n              `elements. See https://lit.dev/msg/expression-in-${tag} for more ` +\n              `information.`;\n            if (tag === 'template') {\n              throw new Error(m);\n            } else issueWarning('', m);\n          }\n        }\n        // TODO (justinfagnani): for attempted dynamic tag names, we don't\n        // increment the bindingIndex, and it'll be off by 1 in the element\n        // and off by two after it.\n        if ((node as Element).hasAttributes()) {\n          for (const name of (node as Element).getAttributeNames()) {\n            if (name.endsWith(boundAttributeSuffix)) {\n              const realName = attrNames[attrNameIndex++];\n              const value = (node as Element).getAttribute(name)!;\n              const statics = value.split(marker);\n              const m = /([.?@])?(.*)/.exec(realName)!;\n              parts.push({\n                type: ATTRIBUTE_PART,\n                index: nodeIndex,\n                name: m[2],\n                strings: statics,\n                ctor:\n                  m[1] === '.'\n                    ? PropertyPart\n                    : m[1] === '?'\n                      ? BooleanAttributePart\n                      : m[1] === '@'\n                        ? EventPart\n                        : AttributePart,\n              });\n              (node as Element).removeAttribute(name);\n            } else if (name.startsWith(marker)) {\n              parts.push({\n                type: ELEMENT_PART,\n                index: nodeIndex,\n              });\n              (node as Element).removeAttribute(name);\n            }\n          }\n        }\n        // TODO (justinfagnani): benchmark the regex against testing for each\n        // of the 3 raw text element names.\n        if (rawTextElement.test((node as Element).tagName)) {\n          // For raw text elements we need to split the text content on\n          // markers, create a Text node for each segment, and create\n          // a TemplatePart for each marker.\n          const strings = (node as Element).textContent!.split(marker);\n          const lastIndex = strings.length - 1;\n          if (lastIndex > 0) {\n            (node as Element).textContent = trustedTypes\n              ? (trustedTypes.emptyScript as unknown as '')\n              : '';\n            // Generate a new text node for each literal section\n            // These nodes are also used as the markers for node parts\n            // We can't use empty text nodes as markers because they're\n            // normalized when cloning in IE (could simplify when\n            // IE is no longer supported)\n            for (let i = 0; i < lastIndex; i++) {\n              (node as Element).append(strings[i], createMarker());\n              // Walk past the marker node we just added\n              walker.nextNode();\n              parts.push({type: CHILD_PART, index: ++nodeIndex});\n            }\n            // Note because this marker is added after the walker's current\n            // node, it will be walked to in the outer loop (and ignored), so\n            // we don't need to adjust nodeIndex here\n            (node as Element).append(strings[lastIndex], createMarker());\n          }\n        }\n      } else if (node.nodeType === 8) {\n        const data = (node as Comment).data;\n        if (data === markerMatch) {\n          parts.push({type: CHILD_PART, index: nodeIndex});\n        } else {\n          let i = -1;\n          while ((i = (node as Comment).data.indexOf(marker, i + 1)) !== -1) {\n            // Comment node has a binding marker inside, make an inactive part\n            // The binding won't work, but subsequent bindings will\n            parts.push({type: COMMENT_PART, index: nodeIndex});\n            // Move to the end of the match\n            i += marker.length - 1;\n          }\n        }\n      }\n      nodeIndex++;\n    }\n\n    if (DEV_MODE) {\n      // If there was a duplicate attribute on a tag, then when the tag is\n      // parsed into an element the attribute gets de-duplicated. We can detect\n      // this mismatch if we haven't precisely consumed every attribute name\n      // when preparing the template. This works because `attrNames` is built\n      // from the template string and `attrNameIndex` comes from processing the\n      // resulting DOM.\n      if (attrNames.length !== attrNameIndex) {\n        throw new Error(\n          `Detected duplicate attribute bindings. This occurs if your template ` +\n            `has duplicate attributes on an element tag. For example ` +\n            `\"<input ?disabled=\\${true} ?disabled=\\${false}>\" contains a ` +\n            `duplicate \"disabled\" attribute. The error was detected in ` +\n            `the following template: \\n` +\n            '`' +\n            strings.join('${...}') +\n            '`',\n        );\n      }\n    }\n\n    // We could set walker.currentNode to another node here to prevent a memory\n    // leak, but every time we prepare a template, we immediately render it\n    // and re-use the walker in new TemplateInstance._clone().\n    debugLogEvent &&\n      debugLogEvent({\n        kind: 'template prep',\n        template: this,\n        clonableTemplate: this.el,\n        parts: this.parts,\n        strings,\n      });\n  }\n\n  // Overridden via `litHtmlPolyfillSupport` to provide platform support.\n  /** @nocollapse */\n  static createElement(html: TrustedHTML, _options?: RenderOptions) {\n    const el = d.createElement('template');\n    el.innerHTML = html as unknown as string;\n    return el;\n  }\n}\n\nexport interface Disconnectable {\n  _$parent?: Disconnectable;\n  _$disconnectableChildren?: Set<Disconnectable>;\n  // Rather than hold connection state on instances, Disconnectables recursively\n  // fetch the connection state from the RootPart they are connected in via\n  // getters up the Disconnectable tree via _$parent references. This pushes the\n  // cost of tracking the isConnected state to `AsyncDirectives`, and avoids\n  // needing to pass all Disconnectables (parts, template instances, and\n  // directives) their connection state each time it changes, which would be\n  // costly for trees that have no AsyncDirectives.\n  _$isConnected: boolean;\n}\n\nfunction resolveDirective(\n  part: ChildPart | AttributePart | ElementPart,\n  value: unknown,\n  parent: DirectiveParent = part,\n  attributeIndex?: number,\n): unknown {\n  // Bail early if the value is explicitly noChange. Note, this means any\n  // nested directive is still attached and is not run.\n  if (value === noChange) {\n    return value;\n  }\n  let currentDirective =\n    attributeIndex !== undefined\n      ? (parent as AttributePart).__directives?.[attributeIndex]\n      : (parent as ChildPart | ElementPart | Directive).__directive;\n  const nextDirectiveConstructor = isPrimitive(value)\n    ? undefined\n    : // This property needs to remain unminified.\n      (value as DirectiveResult)['_$litDirective$'];\n  if (currentDirective?.constructor !== nextDirectiveConstructor) {\n    // This property needs to remain unminified.\n    currentDirective?.['_$notifyDirectiveConnectionChanged']?.(false);\n    if (nextDirectiveConstructor === undefined) {\n      currentDirective = undefined;\n    } else {\n      currentDirective = new nextDirectiveConstructor(part as PartInfo);\n      currentDirective._$initialize(part, parent, attributeIndex);\n    }\n    if (attributeIndex !== undefined) {\n      ((parent as AttributePart).__directives ??= [])[attributeIndex] =\n        currentDirective;\n    } else {\n      (parent as ChildPart | Directive).__directive = currentDirective;\n    }\n  }\n  if (currentDirective !== undefined) {\n    value = resolveDirective(\n      part,\n      currentDirective._$resolve(part, (value as DirectiveResult).values),\n      currentDirective,\n      attributeIndex,\n    );\n  }\n  return value;\n}\n\nexport type {TemplateInstance};\n/**\n * An updateable instance of a Template. Holds references to the Parts used to\n * update the template instance.\n */\nclass TemplateInstance implements Disconnectable {\n  _$template: Template;\n  _$parts: Array<Part | undefined> = [];\n\n  /** @internal */\n  _$parent: ChildPart;\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  constructor(template: Template, parent: ChildPart) {\n    this._$template = template;\n    this._$parent = parent;\n  }\n\n  // Called by ChildPart parentNode getter\n  get parentNode() {\n    return this._$parent.parentNode;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  // This method is separate from the constructor because we need to return a\n  // DocumentFragment and we don't want to hold onto it with an instance field.\n  _clone(options: RenderOptions | undefined) {\n    const {\n      el: {content},\n      parts: parts,\n    } = this._$template;\n    const fragment = (options?.creationScope ?? d).importNode(content, true);\n    walker.currentNode = fragment;\n\n    let node = walker.nextNode()!;\n    let nodeIndex = 0;\n    let partIndex = 0;\n    let templatePart = parts[0];\n\n    while (templatePart !== undefined) {\n      if (nodeIndex === templatePart.index) {\n        let part: Part | undefined;\n        if (templatePart.type === CHILD_PART) {\n          part = new ChildPart(\n            node as HTMLElement,\n            node.nextSibling,\n            this,\n            options,\n          );\n        } else if (templatePart.type === ATTRIBUTE_PART) {\n          part = new templatePart.ctor(\n            node as HTMLElement,\n            templatePart.name,\n            templatePart.strings,\n            this,\n            options,\n          );\n        } else if (templatePart.type === ELEMENT_PART) {\n          part = new ElementPart(node as HTMLElement, this, options);\n        }\n        this._$parts.push(part);\n        templatePart = parts[++partIndex];\n      }\n      if (nodeIndex !== templatePart?.index) {\n        node = walker.nextNode()!;\n        nodeIndex++;\n      }\n    }\n    // We need to set the currentNode away from the cloned tree so that we\n    // don't hold onto the tree even if the tree is detached and should be\n    // freed.\n    walker.currentNode = d;\n    return fragment;\n  }\n\n  _update(values: Array<unknown>) {\n    let i = 0;\n    for (const part of this._$parts) {\n      if (part !== undefined) {\n        debugLogEvent &&\n          debugLogEvent({\n            kind: 'set part',\n            part,\n            value: values[i],\n            valueIndex: i,\n            values,\n            templateInstance: this,\n          });\n        if ((part as AttributePart).strings !== undefined) {\n          (part as AttributePart)._$setValue(values, part as AttributePart, i);\n          // The number of values the part consumes is part.strings.length - 1\n          // since values are in between template spans. We increment i by 1\n          // later in the loop, so increment it by part.strings.length - 2 here\n          i += (part as AttributePart).strings!.length - 2;\n        } else {\n          part._$setValue(values[i]);\n        }\n      }\n      i++;\n    }\n  }\n}\n\n/*\n * Parts\n */\ntype AttributeTemplatePart = {\n  readonly type: typeof ATTRIBUTE_PART;\n  readonly index: number;\n  readonly name: string;\n  readonly ctor: typeof AttributePart;\n  readonly strings: ReadonlyArray<string>;\n};\ntype ChildTemplatePart = {\n  readonly type: typeof CHILD_PART;\n  readonly index: number;\n};\ntype ElementTemplatePart = {\n  readonly type: typeof ELEMENT_PART;\n  readonly index: number;\n};\ntype CommentTemplatePart = {\n  readonly type: typeof COMMENT_PART;\n  readonly index: number;\n};\n\n/**\n * A TemplatePart represents a dynamic part in a template, before the template\n * is instantiated. When a template is instantiated Parts are created from\n * TemplateParts.\n */\ntype TemplatePart =\n  | ChildTemplatePart\n  | AttributeTemplatePart\n  | ElementTemplatePart\n  | CommentTemplatePart;\n\nexport type Part =\n  | ChildPart\n  | AttributePart\n  | PropertyPart\n  | BooleanAttributePart\n  | ElementPart\n  | EventPart;\n\nexport type {ChildPart};\nclass ChildPart implements Disconnectable {\n  readonly type = CHILD_PART;\n  readonly options: RenderOptions | undefined;\n  _$committedValue: unknown = nothing;\n  /** @internal */\n  __directive?: Directive;\n  /** @internal */\n  _$startNode: ChildNode;\n  /** @internal */\n  _$endNode: ChildNode | null;\n  private _textSanitizer: ValueSanitizer | undefined;\n  /** @internal */\n  _$parent: Disconnectable | undefined;\n  /**\n   * Connection state for RootParts only (i.e. ChildPart without _$parent\n   * returned from top-level `render`). This field is unsed otherwise. The\n   * intention would clearer if we made `RootPart` a subclass of `ChildPart`\n   * with this field (and a different _$isConnected getter), but the subclass\n   * caused a perf regression, possibly due to making call sites polymorphic.\n   * @internal\n   */\n  __isConnected: boolean;\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    // ChildParts that are not at the root should always be created with a\n    // parent; only RootChildNode's won't, so they return the local isConnected\n    // state\n    return this._$parent?._$isConnected ?? this.__isConnected;\n  }\n\n  // The following fields will be patched onto ChildParts when required by\n  // AsyncDirective\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n  /** @internal */\n  _$notifyConnectionChanged?(\n    isConnected: boolean,\n    removeFromParent?: boolean,\n    from?: number,\n  ): void;\n  /** @internal */\n  _$reparentDisconnectables?(parent: Disconnectable): void;\n\n  constructor(\n    startNode: ChildNode,\n    endNode: ChildNode | null,\n    parent: TemplateInstance | ChildPart | undefined,\n    options: RenderOptions | undefined,\n  ) {\n    this._$startNode = startNode;\n    this._$endNode = endNode;\n    this._$parent = parent;\n    this.options = options;\n    // Note __isConnected is only ever accessed on RootParts (i.e. when there is\n    // no _$parent); the value on a non-root-part is \"don't care\", but checking\n    // for parent would be more code\n    this.__isConnected = options?.isConnected ?? true;\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      // Explicitly initialize for consistent class shape.\n      this._textSanitizer = undefined;\n    }\n  }\n\n  /**\n   * The parent node into which the part renders its content.\n   *\n   * A ChildPart's content consists of a range of adjacent child nodes of\n   * `.parentNode`, possibly bordered by 'marker nodes' (`.startNode` and\n   * `.endNode`).\n   *\n   * - If both `.startNode` and `.endNode` are non-null, then the part's content\n   * consists of all siblings between `.startNode` and `.endNode`, exclusively.\n   *\n   * - If `.startNode` is non-null but `.endNode` is null, then the part's\n   * content consists of all siblings following `.startNode`, up to and\n   * including the last child of `.parentNode`. If `.endNode` is non-null, then\n   * `.startNode` will always be non-null.\n   *\n   * - If both `.endNode` and `.startNode` are null, then the part's content\n   * consists of all child nodes of `.parentNode`.\n   */\n  get parentNode(): Node {\n    let parentNode: Node = wrap(this._$startNode).parentNode!;\n    const parent = this._$parent;\n    if (\n      parent !== undefined &&\n      parentNode?.nodeType === 11 /* Node.DOCUMENT_FRAGMENT */\n    ) {\n      // If the parentNode is a DocumentFragment, it may be because the DOM is\n      // still in the cloned fragment during initial render; if so, get the real\n      // parentNode the part will be committed into by asking the parent.\n      parentNode = (parent as ChildPart | TemplateInstance).parentNode;\n    }\n    return parentNode;\n  }\n\n  /**\n   * The part's leading marker node, if any. See `.parentNode` for more\n   * information.\n   */\n  get startNode(): Node | null {\n    return this._$startNode;\n  }\n\n  /**\n   * The part's trailing marker node, if any. See `.parentNode` for more\n   * information.\n   */\n  get endNode(): Node | null {\n    return this._$endNode;\n  }\n\n  _$setValue(value: unknown, directiveParent: DirectiveParent = this): void {\n    if (DEV_MODE && this.parentNode === null) {\n      throw new Error(\n        `This \\`ChildPart\\` has no \\`parentNode\\` and therefore cannot accept a value. This likely means the element containing the part was manipulated in an unsupported way outside of Lit's control such that the part's marker nodes were ejected from DOM. For example, setting the element's \\`innerHTML\\` or \\`textContent\\` can do this.`,\n      );\n    }\n    value = resolveDirective(this, value, directiveParent);\n    if (isPrimitive(value)) {\n      // Non-rendering child values. It's important that these do not render\n      // empty text nodes to avoid issues with preventing default <slot>\n      // fallback content.\n      if (value === nothing || value == null || value === '') {\n        if (this._$committedValue !== nothing) {\n          debugLogEvent &&\n            debugLogEvent({\n              kind: 'commit nothing to child',\n              start: this._$startNode,\n              end: this._$endNode,\n              parent: this._$parent,\n              options: this.options,\n            });\n          this._$clear();\n        }\n        this._$committedValue = nothing;\n      } else if (value !== this._$committedValue && value !== noChange) {\n        this._commitText(value);\n      }\n      // This property needs to remain unminified.\n    } else if ((value as TemplateResult)['_$litType$'] !== undefined) {\n      this._commitTemplateResult(value as TemplateResult);\n    } else if ((value as Node).nodeType !== undefined) {\n      if (DEV_MODE && this.options?.host === value) {\n        this._commitText(\n          `[probable mistake: rendered a template's host in itself ` +\n            `(commonly caused by writing \\${this} in a template]`,\n        );\n        console.warn(\n          `Attempted to render the template host`,\n          value,\n          `inside itself. This is almost always a mistake, and in dev mode `,\n          `we render some warning text. In production however, we'll `,\n          `render it, which will usually result in an error, and sometimes `,\n          `in the element disappearing from the DOM.`,\n        );\n        return;\n      }\n      this._commitNode(value as Node);\n    } else if (isIterable(value)) {\n      this._commitIterable(value);\n    } else {\n      // Fallback, will render the string representation\n      this._commitText(value);\n    }\n  }\n\n  private _insert<T extends Node>(node: T) {\n    return wrap(wrap(this._$startNode).parentNode!).insertBefore(\n      node,\n      this._$endNode,\n    );\n  }\n\n  private _commitNode(value: Node): void {\n    if (this._$committedValue !== value) {\n      this._$clear();\n      if (\n        ENABLE_EXTRA_SECURITY_HOOKS &&\n        sanitizerFactoryInternal !== noopSanitizer\n      ) {\n        const parentNodeName = this._$startNode.parentNode?.nodeName;\n        if (parentNodeName === 'STYLE' || parentNodeName === 'SCRIPT') {\n          let message = 'Forbidden';\n          if (DEV_MODE) {\n            if (parentNodeName === 'STYLE') {\n              message =\n                `Lit does not support binding inside style nodes. ` +\n                `This is a security risk, as style injection attacks can ` +\n                `exfiltrate data and spoof UIs. ` +\n                `Consider instead using css\\`...\\` literals ` +\n                `to compose styles, and make do dynamic styling with ` +\n                `css custom properties, ::parts, <slot>s, ` +\n                `and by mutating the DOM rather than stylesheets.`;\n            } else {\n              message =\n                `Lit does not support binding inside script nodes. ` +\n                `This is a security risk, as it could allow arbitrary ` +\n                `code execution.`;\n            }\n          }\n          throw new Error(message);\n        }\n      }\n      debugLogEvent &&\n        debugLogEvent({\n          kind: 'commit node',\n          start: this._$startNode,\n          parent: this._$parent,\n          value: value,\n          options: this.options,\n        });\n      this._$committedValue = this._insert(value);\n    }\n  }\n\n  private _commitText(value: unknown): void {\n    // If the committed value is a primitive it means we called _commitText on\n    // the previous render, and we know that this._$startNode.nextSibling is a\n    // Text node. We can now just replace the text content (.data) of the node.\n    if (\n      this._$committedValue !== nothing &&\n      isPrimitive(this._$committedValue)\n    ) {\n      const node = wrap(this._$startNode).nextSibling as Text;\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        if (this._textSanitizer === undefined) {\n          this._textSanitizer = createSanitizer(node, 'data', 'property');\n        }\n        value = this._textSanitizer(value);\n      }\n      debugLogEvent &&\n        debugLogEvent({\n          kind: 'commit text',\n          node,\n          value,\n          options: this.options,\n        });\n      (node as Text).data = value as string;\n    } else {\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        const textNode = d.createTextNode('');\n        this._commitNode(textNode);\n        // When setting text content, for security purposes it matters a lot\n        // what the parent is. For example, <style> and <script> need to be\n        // handled with care, while <span> does not. So first we need to put a\n        // text node into the document, then we can sanitize its content.\n        if (this._textSanitizer === undefined) {\n          this._textSanitizer = createSanitizer(textNode, 'data', 'property');\n        }\n        value = this._textSanitizer(value);\n        debugLogEvent &&\n          debugLogEvent({\n            kind: 'commit text',\n            node: textNode,\n            value,\n            options: this.options,\n          });\n        textNode.data = value as string;\n      } else {\n        this._commitNode(d.createTextNode(value as string));\n        debugLogEvent &&\n          debugLogEvent({\n            kind: 'commit text',\n            node: wrap(this._$startNode).nextSibling as Text,\n            value,\n            options: this.options,\n          });\n      }\n    }\n    this._$committedValue = value;\n  }\n\n  private _commitTemplateResult(\n    result: TemplateResult | CompiledTemplateResult,\n  ): void {\n    // This property needs to remain unminified.\n    const {values, ['_$litType$']: type} = result;\n    // If $litType$ is a number, result is a plain TemplateResult and we get\n    // the template from the template cache. If not, result is a\n    // CompiledTemplateResult and _$litType$ is a CompiledTemplate and we need\n    // to create the <template> element the first time we see it.\n    const template: Template | CompiledTemplate =\n      typeof type === 'number'\n        ? this._$getTemplate(result as UncompiledTemplateResult)\n        : (type.el === undefined &&\n            (type.el = Template.createElement(\n              trustFromTemplateString(type.h, type.h[0]),\n              this.options,\n            )),\n          type);\n\n    if ((this._$committedValue as TemplateInstance)?._$template === template) {\n      debugLogEvent &&\n        debugLogEvent({\n          kind: 'template updating',\n          template,\n          instance: this._$committedValue as TemplateInstance,\n          parts: (this._$committedValue as TemplateInstance)._$parts,\n          options: this.options,\n          values,\n        });\n      (this._$committedValue as TemplateInstance)._update(values);\n    } else {\n      const instance = new TemplateInstance(template as Template, this);\n      const fragment = instance._clone(this.options);\n      debugLogEvent &&\n        debugLogEvent({\n          kind: 'template instantiated',\n          template,\n          instance,\n          parts: instance._$parts,\n          options: this.options,\n          fragment,\n          values,\n        });\n      instance._update(values);\n      debugLogEvent &&\n        debugLogEvent({\n          kind: 'template instantiated and updated',\n          template,\n          instance,\n          parts: instance._$parts,\n          options: this.options,\n          fragment,\n          values,\n        });\n      this._commitNode(fragment);\n      this._$committedValue = instance;\n    }\n  }\n\n  // Overridden via `litHtmlPolyfillSupport` to provide platform support.\n  /** @internal */\n  _$getTemplate(result: UncompiledTemplateResult) {\n    let template = templateCache.get(result.strings);\n    if (template === undefined) {\n      templateCache.set(result.strings, (template = new Template(result)));\n    }\n    return template;\n  }\n\n  private _commitIterable(value: Iterable<unknown>): void {\n    // For an Iterable, we create a new InstancePart per item, then set its\n    // value to the item. This is a little bit of overhead for every item in\n    // an Iterable, but it lets us recurse easily and efficiently update Arrays\n    // of TemplateResults that will be commonly returned from expressions like:\n    // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n\n    // If value is an array, then the previous render was of an\n    // iterable and value will contain the ChildParts from the previous\n    // render. If value is not an array, clear this part and make a new\n    // array for ChildParts.\n    if (!isArray(this._$committedValue)) {\n      this._$committedValue = [];\n      this._$clear();\n    }\n\n    // Lets us keep track of how many items we stamped so we can clear leftover\n    // items from a previous render\n    const itemParts = this._$committedValue as ChildPart[];\n    let partIndex = 0;\n    let itemPart: ChildPart | undefined;\n\n    for (const item of value) {\n      if (partIndex === itemParts.length) {\n        // If no existing part, create a new one\n        // TODO (justinfagnani): test perf impact of always creating two parts\n        // instead of sharing parts between nodes\n        // https://github.com/lit/lit/issues/1266\n        itemParts.push(\n          (itemPart = new ChildPart(\n            this._insert(createMarker()),\n            this._insert(createMarker()),\n            this,\n            this.options,\n          )),\n        );\n      } else {\n        // Reuse an existing part\n        itemPart = itemParts[partIndex];\n      }\n      itemPart._$setValue(item);\n      partIndex++;\n    }\n\n    if (partIndex < itemParts.length) {\n      // itemParts always have end nodes\n      this._$clear(\n        itemPart && wrap(itemPart._$endNode!).nextSibling,\n        partIndex,\n      );\n      // Truncate the parts array so _value reflects the current state\n      itemParts.length = partIndex;\n    }\n  }\n\n  /**\n   * Removes the nodes contained within this Part from the DOM.\n   *\n   * @param start Start node to clear from, for clearing a subset of the part's\n   *     DOM (used when truncating iterables)\n   * @param from  When `start` is specified, the index within the iterable from\n   *     which ChildParts are being removed, used for disconnecting directives in\n   *     those Parts.\n   *\n   * @internal\n   */\n  _$clear(\n    start: ChildNode | null = wrap(this._$startNode).nextSibling,\n    from?: number,\n  ) {\n    this._$notifyConnectionChanged?.(false, true, from);\n    while (start && start !== this._$endNode) {\n      const n = wrap(start!).nextSibling;\n      (wrap(start!) as Element).remove();\n      start = n;\n    }\n  }\n  /**\n   * Implementation of RootPart's `isConnected`. Note that this metod\n   * should only be called on `RootPart`s (the `ChildPart` returned from a\n   * top-level `render()` call). It has no effect on non-root ChildParts.\n   * @param isConnected Whether to set\n   * @internal\n   */\n  setConnected(isConnected: boolean) {\n    if (this._$parent === undefined) {\n      this.__isConnected = isConnected;\n      this._$notifyConnectionChanged?.(isConnected);\n    } else if (DEV_MODE) {\n      throw new Error(\n        'part.setConnected() may only be called on a ' +\n          'RootPart returned from render().',\n      );\n    }\n  }\n}\n\n/**\n * A top-level `ChildPart` returned from `render` that manages the connected\n * state of `AsyncDirective`s created throughout the tree below it.\n */\nexport interface RootPart extends ChildPart {\n  /**\n   * Sets the connection state for `AsyncDirective`s contained within this root\n   * ChildPart.\n   *\n   * lit-html does not automatically monitor the connectedness of DOM rendered;\n   * as such, it is the responsibility of the caller to `render` to ensure that\n   * `part.setConnected(false)` is called before the part object is potentially\n   * discarded, to ensure that `AsyncDirective`s have a chance to dispose of\n   * any resources being held. If a `RootPart` that was previously\n   * disconnected is subsequently re-connected (and its `AsyncDirective`s should\n   * re-connect), `setConnected(true)` should be called.\n   *\n   * @param isConnected Whether directives within this tree should be connected\n   * or not\n   */\n  setConnected(isConnected: boolean): void;\n}\n\nexport type {AttributePart};\nclass AttributePart implements Disconnectable {\n  readonly type = ATTRIBUTE_PART as\n    | typeof ATTRIBUTE_PART\n    | typeof PROPERTY_PART\n    | typeof BOOLEAN_ATTRIBUTE_PART\n    | typeof EVENT_PART;\n  readonly element: HTMLElement;\n  readonly name: string;\n  readonly options: RenderOptions | undefined;\n\n  /**\n   * If this attribute part represents an interpolation, this contains the\n   * static strings of the interpolation. For single-value, complete bindings,\n   * this is undefined.\n   */\n  readonly strings?: ReadonlyArray<string>;\n  /** @internal */\n  _$committedValue: unknown | Array<unknown> = nothing;\n  /** @internal */\n  __directives?: Array<Directive | undefined>;\n  /** @internal */\n  _$parent: Disconnectable;\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  protected _sanitizer: ValueSanitizer | undefined;\n\n  get tagName() {\n    return this.element.tagName;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  constructor(\n    element: HTMLElement,\n    name: string,\n    strings: ReadonlyArray<string>,\n    parent: Disconnectable,\n    options: RenderOptions | undefined,\n  ) {\n    this.element = element;\n    this.name = name;\n    this._$parent = parent;\n    this.options = options;\n    if (strings.length > 2 || strings[0] !== '' || strings[1] !== '') {\n      this._$committedValue = new Array(strings.length - 1).fill(new String());\n      this.strings = strings;\n    } else {\n      this._$committedValue = nothing;\n    }\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      this._sanitizer = undefined;\n    }\n  }\n\n  /**\n   * Sets the value of this part by resolving the value from possibly multiple\n   * values and static strings and committing it to the DOM.\n   * If this part is single-valued, `this._strings` will be undefined, and the\n   * method will be called with a single value argument. If this part is\n   * multi-value, `this._strings` will be defined, and the method is called\n   * with the value array of the part's owning TemplateInstance, and an offset\n   * into the value array from which the values should be read.\n   * This method is overloaded this way to eliminate short-lived array slices\n   * of the template instance values, and allow a fast-path for single-valued\n   * parts.\n   *\n   * @param value The part value, or an array of values for multi-valued parts\n   * @param valueIndex the index to start reading values from. `undefined` for\n   *   single-valued parts\n   * @param noCommit causes the part to not commit its value to the DOM. Used\n   *   in hydration to prime attribute parts with their first-rendered value,\n   *   but not set the attribute, and in SSR to no-op the DOM operation and\n   *   capture the value for serialization.\n   *\n   * @internal\n   */\n  _$setValue(\n    value: unknown | Array<unknown>,\n    directiveParent: DirectiveParent = this,\n    valueIndex?: number,\n    noCommit?: boolean,\n  ) {\n    const strings = this.strings;\n\n    // Whether any of the values has changed, for dirty-checking\n    let change = false;\n\n    if (strings === undefined) {\n      // Single-value binding case\n      value = resolveDirective(this, value, directiveParent, 0);\n      change =\n        !isPrimitive(value) ||\n        (value !== this._$committedValue && value !== noChange);\n      if (change) {\n        this._$committedValue = value;\n      }\n    } else {\n      // Interpolation case\n      const values = value as Array<unknown>;\n      value = strings[0];\n\n      let i, v;\n      for (i = 0; i < strings.length - 1; i++) {\n        v = resolveDirective(this, values[valueIndex! + i], directiveParent, i);\n\n        if (v === noChange) {\n          // If the user-provided value is `noChange`, use the previous value\n          v = (this._$committedValue as Array<unknown>)[i];\n        }\n        change ||=\n          !isPrimitive(v) || v !== (this._$committedValue as Array<unknown>)[i];\n        if (v === nothing) {\n          value = nothing;\n        } else if (value !== nothing) {\n          value += (v ?? '') + strings[i + 1];\n        }\n        // We always record each value, even if one is `nothing`, for future\n        // change detection.\n        (this._$committedValue as Array<unknown>)[i] = v;\n      }\n    }\n    if (change && !noCommit) {\n      this._commitValue(value);\n    }\n  }\n\n  /** @internal */\n  _commitValue(value: unknown) {\n    if (value === nothing) {\n      (wrap(this.element) as Element).removeAttribute(this.name);\n    } else {\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        if (this._sanitizer === undefined) {\n          this._sanitizer = sanitizerFactoryInternal(\n            this.element,\n            this.name,\n            'attribute',\n          );\n        }\n        value = this._sanitizer(value ?? '');\n      }\n      debugLogEvent &&\n        debugLogEvent({\n          kind: 'commit attribute',\n          element: this.element,\n          name: this.name,\n          value,\n          options: this.options,\n        });\n      (wrap(this.element) as Element).setAttribute(\n        this.name,\n        (value ?? '') as string,\n      );\n    }\n  }\n}\n\nexport type {PropertyPart};\nclass PropertyPart extends AttributePart {\n  override readonly type = PROPERTY_PART;\n\n  /** @internal */\n  override _commitValue(value: unknown) {\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      if (this._sanitizer === undefined) {\n        this._sanitizer = sanitizerFactoryInternal(\n          this.element,\n          this.name,\n          'property',\n        );\n      }\n      value = this._sanitizer(value);\n    }\n    debugLogEvent &&\n      debugLogEvent({\n        kind: 'commit property',\n        element: this.element,\n        name: this.name,\n        value,\n        options: this.options,\n      });\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (this.element as any)[this.name] = value === nothing ? undefined : value;\n  }\n}\n\nexport type {BooleanAttributePart};\nclass BooleanAttributePart extends AttributePart {\n  override readonly type = BOOLEAN_ATTRIBUTE_PART;\n\n  /** @internal */\n  override _commitValue(value: unknown) {\n    debugLogEvent &&\n      debugLogEvent({\n        kind: 'commit boolean attribute',\n        element: this.element,\n        name: this.name,\n        value: !!(value && value !== nothing),\n        options: this.options,\n      });\n    (wrap(this.element) as Element).toggleAttribute(\n      this.name,\n      !!value && value !== nothing,\n    );\n  }\n}\n\ntype EventListenerWithOptions = EventListenerOrEventListenerObject &\n  Partial<AddEventListenerOptions>;\n\n/**\n * An AttributePart that manages an event listener via add/removeEventListener.\n *\n * This part works by adding itself as the event listener on an element, then\n * delegating to the value passed to it. This reduces the number of calls to\n * add/removeEventListener if the listener changes frequently, such as when an\n * inline function is used as a listener.\n *\n * Because event options are passed when adding listeners, we must take case\n * to add and remove the part as a listener when the event options change.\n */\nexport type {EventPart};\nclass EventPart extends AttributePart {\n  override readonly type = EVENT_PART;\n\n  constructor(\n    element: HTMLElement,\n    name: string,\n    strings: ReadonlyArray<string>,\n    parent: Disconnectable,\n    options: RenderOptions | undefined,\n  ) {\n    super(element, name, strings, parent, options);\n\n    if (DEV_MODE && this.strings !== undefined) {\n      throw new Error(\n        `A \\`<${element.localName}>\\` has a \\`@${name}=...\\` listener with ` +\n          'invalid content. Event listeners in templates must have exactly ' +\n          'one expression and no surrounding text.',\n      );\n    }\n  }\n\n  // EventPart does not use the base _$setValue/_resolveValue implementation\n  // since the dirty checking is more complex\n  /** @internal */\n  override _$setValue(\n    newListener: unknown,\n    directiveParent: DirectiveParent = this,\n  ) {\n    newListener =\n      resolveDirective(this, newListener, directiveParent, 0) ?? nothing;\n    if (newListener === noChange) {\n      return;\n    }\n    const oldListener = this._$committedValue;\n\n    // If the new value is nothing or any options change we have to remove the\n    // part as a listener.\n    const shouldRemoveListener =\n      (newListener === nothing && oldListener !== nothing) ||\n      (newListener as EventListenerWithOptions).capture !==\n        (oldListener as EventListenerWithOptions).capture ||\n      (newListener as EventListenerWithOptions).once !==\n        (oldListener as EventListenerWithOptions).once ||\n      (newListener as EventListenerWithOptions).passive !==\n        (oldListener as EventListenerWithOptions).passive;\n\n    // If the new value is not nothing and we removed the listener, we have\n    // to add the part as a listener.\n    const shouldAddListener =\n      newListener !== nothing &&\n      (oldListener === nothing || shouldRemoveListener);\n\n    debugLogEvent &&\n      debugLogEvent({\n        kind: 'commit event listener',\n        element: this.element,\n        name: this.name,\n        value: newListener,\n        options: this.options,\n        removeListener: shouldRemoveListener,\n        addListener: shouldAddListener,\n        oldListener,\n      });\n    if (shouldRemoveListener) {\n      this.element.removeEventListener(\n        this.name,\n        this,\n        oldListener as EventListenerWithOptions,\n      );\n    }\n    if (shouldAddListener) {\n      // Beware: IE11 and Chrome 41 don't like using the listener as the\n      // options object. Figure out how to deal w/ this in IE11 - maybe\n      // patch addEventListener?\n      this.element.addEventListener(\n        this.name,\n        this,\n        newListener as EventListenerWithOptions,\n      );\n    }\n    this._$committedValue = newListener;\n  }\n\n  handleEvent(event: Event) {\n    if (typeof this._$committedValue === 'function') {\n      this._$committedValue.call(this.options?.host ?? this.element, event);\n    } else {\n      (this._$committedValue as EventListenerObject).handleEvent(event);\n    }\n  }\n}\n\nexport type {ElementPart};\nclass ElementPart implements Disconnectable {\n  readonly type = ELEMENT_PART;\n\n  /** @internal */\n  __directive?: Directive;\n\n  // This is to ensure that every Part has a _$committedValue\n  _$committedValue: undefined;\n\n  /** @internal */\n  _$parent!: Disconnectable;\n\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  options: RenderOptions | undefined;\n\n  constructor(\n    public element: Element,\n    parent: Disconnectable,\n    options: RenderOptions | undefined,\n  ) {\n    this._$parent = parent;\n    this.options = options;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  _$setValue(value: unknown): void {\n    debugLogEvent &&\n      debugLogEvent({\n        kind: 'commit to element binding',\n        element: this.element,\n        value,\n        options: this.options,\n      });\n    resolveDirective(this, value);\n  }\n}\n\n/**\n * END USERS SHOULD NOT RELY ON THIS OBJECT.\n *\n * Private exports for use by other Lit packages, not intended for use by\n * external users.\n *\n * We currently do not make a mangled rollup build of the lit-ssr code. In order\n * to keep a number of (otherwise private) top-level exports  mangled in the\n * client side code, we export a _$LH object containing those members (or\n * helper methods for accessing private fields of those members), and then\n * re-export them for use in lit-ssr. This keeps lit-ssr agnostic to whether the\n * client-side code is being used in `dev` mode or `prod` mode.\n *\n * This has a unique name, to disambiguate it from private exports in\n * lit-element, which re-exports all of lit-html.\n *\n * @private\n */\nexport const _$LH = {\n  // Used in lit-ssr\n  _boundAttributeSuffix: boundAttributeSuffix,\n  _marker: marker,\n  _markerMatch: markerMatch,\n  _HTML_RESULT: HTML_RESULT,\n  _getTemplateHtml: getTemplateHtml,\n  // Used in tests and private-ssr-support\n  _TemplateInstance: TemplateInstance,\n  _isIterable: isIterable,\n  _resolveDirective: resolveDirective,\n  _ChildPart: ChildPart,\n  _AttributePart: AttributePart,\n  _BooleanAttributePart: BooleanAttributePart,\n  _EventPart: EventPart,\n  _PropertyPart: PropertyPart,\n  _ElementPart: ElementPart,\n};\n\n// Apply polyfills if available\nconst polyfillSupport = DEV_MODE\n  ? global.litHtmlPolyfillSupportDevMode\n  : global.litHtmlPolyfillSupport;\npolyfillSupport?.(Template, ChildPart);\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n(global.litHtmlVersions ??= []).push('3.1.4');\nif (DEV_MODE && global.litHtmlVersions.length > 1) {\n  issueWarning!(\n    'multiple-versions',\n    `Multiple versions of Lit loaded. ` +\n      `Loading multiple versions is not recommended.`,\n  );\n}\n\n/**\n * Renders a value, usually a lit-html TemplateResult, to the container.\n *\n * This example renders the text \"Hello, Zoe!\" inside a paragraph tag, appending\n * it to the container `document.body`.\n *\n * ```js\n * import {html, render} from 'lit';\n *\n * const name = \"Zoe\";\n * render(html`<p>Hello, ${name}!</p>`, document.body);\n * ```\n *\n * @param value Any [renderable\n *   value](https://lit.dev/docs/templates/expressions/#child-expressions),\n *   typically a {@linkcode TemplateResult} created by evaluating a template tag\n *   like {@linkcode html} or {@linkcode svg}.\n * @param container A DOM container to render to. The first render will append\n *   the rendered value to the container, and subsequent renders will\n *   efficiently update the rendered value if the same result type was\n *   previously rendered there.\n * @param options See {@linkcode RenderOptions} for options documentation.\n * @see\n * {@link https://lit.dev/docs/libraries/standalone-templates/#rendering-lit-html-templates| Rendering Lit HTML Templates}\n */\nexport const render = (\n  value: unknown,\n  container: HTMLElement | DocumentFragment,\n  options?: RenderOptions,\n): RootPart => {\n  if (DEV_MODE && container == null) {\n    // Give a clearer error message than\n    //     Uncaught TypeError: Cannot read properties of null (reading\n    //     '_$litPart$')\n    // which reads like an internal Lit error.\n    throw new TypeError(`The container to render into may not be ${container}`);\n  }\n  const renderId = DEV_MODE ? debugLogRenderId++ : 0;\n  const partOwnerNode = options?.renderBefore ?? container;\n  // This property needs to remain unminified.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let part: ChildPart = (partOwnerNode as any)['_$litPart$'];\n  debugLogEvent &&\n    debugLogEvent({\n      kind: 'begin render',\n      id: renderId,\n      value,\n      container,\n      options,\n      part,\n    });\n  if (part === undefined) {\n    const endNode = options?.renderBefore ?? null;\n    // This property needs to remain unminified.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (partOwnerNode as any)['_$litPart$'] = part = new ChildPart(\n      container.insertBefore(createMarker(), endNode),\n      endNode,\n      undefined,\n      options ?? {},\n    );\n  }\n  part._$setValue(value);\n  debugLogEvent &&\n    debugLogEvent({\n      kind: 'end render',\n      id: renderId,\n      value,\n      container,\n      options,\n      part,\n    });\n  return part as RootPart;\n};\n\nif (ENABLE_EXTRA_SECURITY_HOOKS) {\n  render.setSanitizer = setSanitizer;\n  render.createSanitizer = createSanitizer;\n  if (DEV_MODE) {\n    render._testOnlyClearSanitizerFactoryDoNotCallOrElse =\n      _testOnlyClearSanitizerFactoryDoNotCallOrElse;\n  }\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * The main LitElement module, which defines the {@linkcode LitElement} base\n * class and related APIs.\n *\n *  LitElement components can define a template and a set of observed\n * properties. Changing an observed property triggers a re-render of the\n * element.\n *\n *  Import {@linkcode LitElement} and {@linkcode html} from this module to\n * create a component:\n *\n *  ```js\n * import {LitElement, html} from 'lit-element';\n *\n * class MyElement extends LitElement {\n *\n *   // Declare observed properties\n *   static get properties() {\n *     return {\n *       adjective: {}\n *     }\n *   }\n *\n *   constructor() {\n *     this.adjective = 'awesome';\n *   }\n *\n *   // Define the element's template\n *   render() {\n *     return html`<p>your ${adjective} template here</p>`;\n *   }\n * }\n *\n * customElements.define('my-element', MyElement);\n * ```\n *\n * `LitElement` extends {@linkcode ReactiveElement} and adds lit-html\n * templating. The `ReactiveElement` class is provided for users that want to\n * build their own custom element base classes that don't use lit-html.\n *\n * @packageDocumentation\n */\nimport {PropertyValues, ReactiveElement} from '@lit/reactive-element';\nimport {render, RenderOptions, noChange, RootPart} from 'lit-html';\nexport * from '@lit/reactive-element';\nexport * from 'lit-html';\n\nimport {LitUnstable} from 'lit-html';\nimport {ReactiveUnstable} from '@lit/reactive-element';\n\n/**\n * Contains types that are part of the unstable debug API.\n *\n * Everything in this API is not stable and may change or be removed in the future,\n * even on patch releases.\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace Unstable {\n  /**\n   * When Lit is running in dev mode and `window.emitLitDebugLogEvents` is true,\n   * we will emit 'lit-debug' events to window, with live details about the update and render\n   * lifecycle. These can be useful for writing debug tooling and visualizations.\n   *\n   * Please be aware that running with window.emitLitDebugLogEvents has performance overhead,\n   * making certain operations that are normally very cheap (like a no-op render) much slower,\n   * because we must copy data and dispatch events.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  export namespace DebugLog {\n    export type Entry =\n      | LitUnstable.DebugLog.Entry\n      | ReactiveUnstable.DebugLog.Entry;\n  }\n}\n/*\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\n/*@__INLINE__*/\nconst JSCompiler_renameProperty = <P extends PropertyKey>(\n  prop: P,\n  _obj: unknown\n): P => prop;\n\nconst DEV_MODE = true;\n\nlet issueWarning: (code: string, warning: string) => void;\n\nif (DEV_MODE) {\n  // Ensure warnings are issued only 1x, even if multiple versions of Lit\n  // are loaded.\n  const issuedWarnings: Set<string | undefined> =\n    (globalThis.litIssuedWarnings ??= new Set());\n\n  // Issue a warning, if we haven't already.\n  issueWarning = (code: string, warning: string) => {\n    warning += ` See https://lit.dev/msg/${code} for more information.`;\n    if (!issuedWarnings.has(warning)) {\n      console.warn(warning);\n      issuedWarnings.add(warning);\n    }\n  };\n}\n\n/**\n * Base element class that manages element properties and attributes, and\n * renders a lit-html template.\n *\n * To define a component, subclass `LitElement` and implement a\n * `render` method to provide the component's template. Define properties\n * using the {@linkcode LitElement.properties properties} property or the\n * {@linkcode property} decorator.\n */\nexport class LitElement extends ReactiveElement {\n  // This property needs to remain unminified.\n  static ['_$litElement$'] = true;\n\n  /**\n   * @category rendering\n   */\n  readonly renderOptions: RenderOptions = {host: this};\n\n  private __childPart: RootPart | undefined = undefined;\n\n  /**\n   * @category rendering\n   */\n  protected override createRenderRoot() {\n    const renderRoot = super.createRenderRoot();\n    // When adoptedStyleSheets are shimmed, they are inserted into the\n    // shadowRoot by createRenderRoot. Adjust the renderBefore node so that\n    // any styles in Lit content render before adoptedStyleSheets. This is\n    // important so that adoptedStyleSheets have precedence over styles in\n    // the shadowRoot.\n    this.renderOptions.renderBefore ??= renderRoot!.firstChild as ChildNode;\n    return renderRoot;\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes\n   * and calls `render` to render DOM via lit-html. Setting properties inside\n   * this method will *not* trigger another update.\n   * @param changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected override update(changedProperties: PropertyValues) {\n    // Setting properties in `render` should not trigger an update. Since\n    // updates are allowed after super.update, it's important to call `render`\n    // before that.\n    const value = this.render();\n    if (!this.hasUpdated) {\n      this.renderOptions.isConnected = this.isConnected;\n    }\n    super.update(changedProperties);\n    this.__childPart = render(value, this.renderRoot, this.renderOptions);\n  }\n\n  /**\n   * Invoked when the component is added to the document's DOM.\n   *\n   * In `connectedCallback()` you should setup tasks that should only occur when\n   * the element is connected to the document. The most common of these is\n   * adding event listeners to nodes external to the element, like a keydown\n   * event handler added to the window.\n   *\n   * ```ts\n   * connectedCallback() {\n   *   super.connectedCallback();\n   *   addEventListener('keydown', this._handleKeydown);\n   * }\n   * ```\n   *\n   * Typically, anything done in `connectedCallback()` should be undone when the\n   * element is disconnected, in `disconnectedCallback()`.\n   *\n   * @category lifecycle\n   */\n  override connectedCallback() {\n    super.connectedCallback();\n    this.__childPart?.setConnected(true);\n  }\n\n  /**\n   * Invoked when the component is removed from the document's DOM.\n   *\n   * This callback is the main signal to the element that it may no longer be\n   * used. `disconnectedCallback()` should ensure that nothing is holding a\n   * reference to the element (such as event listeners added to nodes external\n   * to the element), so that it is free to be garbage collected.\n   *\n   * ```ts\n   * disconnectedCallback() {\n   *   super.disconnectedCallback();\n   *   window.removeEventListener('keydown', this._handleKeydown);\n   * }\n   * ```\n   *\n   * An element may be re-connected after being disconnected.\n   *\n   * @category lifecycle\n   */\n  override disconnectedCallback() {\n    super.disconnectedCallback();\n    this.__childPart?.setConnected(false);\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method may return\n   * any value renderable by lit-html's `ChildPart` - typically a\n   * `TemplateResult`. Setting properties inside this method will *not* trigger\n   * the element to update.\n   * @category rendering\n   */\n  protected render(): unknown {\n    return noChange;\n  }\n}\n\n/**\n * Ensure this class is marked as `finalized` as an optimization ensuring\n * it will not needlessly try to `finalize`.\n *\n * Note this property name is a string to prevent breaking Closure JS Compiler\n * optimizations. See @lit/reactive-element for more information.\n */\n(LitElement as unknown as Record<string, unknown>)[\n  JSCompiler_renameProperty('finalized', LitElement)\n] = true;\n\n// Install hydration if available\nglobalThis.litElementHydrateSupport?.({LitElement});\n\n// Apply polyfills if available\nconst polyfillSupport = DEV_MODE\n  ? globalThis.litElementPolyfillSupportDevMode\n  : globalThis.litElementPolyfillSupport;\npolyfillSupport?.({LitElement});\n\n/**\n * END USERS SHOULD NOT RELY ON THIS OBJECT.\n *\n * Private exports for use by other Lit packages, not intended for use by\n * external users.\n *\n * We currently do not make a mangled rollup build of the lit-ssr code. In order\n * to keep a number of (otherwise private) top-level exports  mangled in the\n * client side code, we export a _$LE object containing those members (or\n * helper methods for accessing private fields of those members), and then\n * re-export them for use in lit-ssr. This keeps lit-ssr agnostic to whether the\n * client-side code is being used in `dev` mode or `prod` mode.\n *\n * This has a unique name, to disambiguate it from private exports in\n * lit-html, since this module re-exports all of lit-html.\n *\n * @private\n */\nexport const _$LE = {\n  _$attributeToProperty: (\n    el: LitElement,\n    name: string,\n    value: string | null\n  ) => {\n    // eslint-disable-next-line\n    (el as any)._$attributeToProperty(name, value);\n  },\n  // eslint-disable-next-line\n  _$changedProperties: (el: LitElement) => (el as any)._$changedProperties,\n};\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n(globalThis.litElementVersions ??= []).push('4.0.6');\nif (DEV_MODE && globalThis.litElementVersions.length > 1) {\n  issueWarning!(\n    'multiple-versions',\n    `Multiple versions of Lit loaded. Loading multiple versions ` +\n      `is not recommended.`\n  );\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport type {Constructor} from './base.js';\n\n/**\n * Allow for custom element classes with private constructors\n */\ntype CustomElementClass = Omit<typeof HTMLElement, 'new'>;\n\nexport type CustomElementDecorator = {\n  // legacy\n  (cls: CustomElementClass): void;\n\n  // standard\n  (\n    target: CustomElementClass,\n    context: ClassDecoratorContext<Constructor<HTMLElement>>\n  ): void;\n};\n\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * ```js\n * @customElement('my-element')\n * class MyElement extends LitElement {\n *   render() {\n *     return html``;\n *   }\n * }\n * ```\n * @category Decorator\n * @param tagName The tag name of the custom element to define.\n */\nexport const customElement =\n  (tagName: string): CustomElementDecorator =>\n  (\n    classOrTarget: CustomElementClass | Constructor<HTMLElement>,\n    context?: ClassDecoratorContext<Constructor<HTMLElement>>\n  ) => {\n    if (context !== undefined) {\n      context.addInitializer(() => {\n        customElements.define(\n          tagName,\n          classOrTarget as CustomElementConstructor\n        );\n      });\n    } else {\n      customElements.define(tagName, classOrTarget as CustomElementConstructor);\n    }\n  };\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport {\n  type PropertyDeclaration,\n  type ReactiveElement,\n  defaultConverter,\n  notEqual,\n} from '../reactive-element.js';\nimport type {Interface} from './base.js';\n\nconst DEV_MODE = true;\n\nlet issueWarning: (code: string, warning: string) => void;\n\nif (DEV_MODE) {\n  // Ensure warnings are issued only 1x, even if multiple versions of Lit\n  // are loaded.\n  const issuedWarnings: Set<string | undefined> =\n    (globalThis.litIssuedWarnings ??= new Set());\n\n  // Issue a warning, if we haven't already.\n  issueWarning = (code: string, warning: string) => {\n    warning += ` See https://lit.dev/msg/${code} for more information.`;\n    if (!issuedWarnings.has(warning)) {\n      console.warn(warning);\n      issuedWarnings.add(warning);\n    }\n  };\n}\n\n// Overloads for property decorator so that TypeScript can infer the correct\n// return type when a decorator is used as an accessor decorator or a setter\n// decorator.\nexport type PropertyDecorator = {\n  // accessor decorator signature\n  <C extends Interface<ReactiveElement>, V>(\n    target: ClassAccessorDecoratorTarget<C, V>,\n    context: ClassAccessorDecoratorContext<C, V>\n  ): ClassAccessorDecoratorResult<C, V>;\n\n  // setter decorator signature\n  <C extends Interface<ReactiveElement>, V>(\n    target: (value: V) => void,\n    context: ClassSetterDecoratorContext<C, V>\n  ): (this: C, value: V) => void;\n\n  // legacy decorator signature\n  (\n    protoOrDescriptor: Object,\n    name: PropertyKey,\n    descriptor?: PropertyDescriptor\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ): any;\n};\n\nconst legacyProperty = (\n  options: PropertyDeclaration | undefined,\n  proto: Object,\n  name: PropertyKey\n) => {\n  const hasOwnProperty = proto.hasOwnProperty(name);\n  (proto.constructor as typeof ReactiveElement).createProperty(\n    name,\n    hasOwnProperty ? {...options, wrapped: true} : options\n  );\n  // For accessors (which have a descriptor on the prototype) we need to\n  // return a descriptor, otherwise TypeScript overwrites the descriptor we\n  // define in createProperty() with the original descriptor. We don't do this\n  // for fields, which don't have a descriptor, because this could overwrite\n  // descriptor defined by other decorators.\n  return hasOwnProperty\n    ? Object.getOwnPropertyDescriptor(proto, name)\n    : undefined;\n};\n\n// This is duplicated from a similar variable in reactive-element.ts, but\n// actually makes sense to have this default defined with the decorator, so\n// that different decorators could have different defaults.\nconst defaultPropertyDeclaration: PropertyDeclaration = {\n  attribute: true,\n  type: String,\n  converter: defaultConverter,\n  reflect: false,\n  hasChanged: notEqual,\n};\n\n// Temporary type, until google3 is on TypeScript 5.2\ntype StandardPropertyContext<C, V> = (\n  | ClassAccessorDecoratorContext<C, V>\n  | ClassSetterDecoratorContext<C, V>\n) & {metadata: object};\n\n/**\n * Wraps a class accessor or setter so that `requestUpdate()` is called with the\n * property name and old value when the accessor is set.\n */\nexport const standardProperty = <C extends Interface<ReactiveElement>, V>(\n  options: PropertyDeclaration = defaultPropertyDeclaration,\n  target: ClassAccessorDecoratorTarget<C, V> | ((value: V) => void),\n  context: StandardPropertyContext<C, V>\n): ClassAccessorDecoratorResult<C, V> | ((this: C, value: V) => void) => {\n  const {kind, metadata} = context;\n\n  if (DEV_MODE && metadata == null) {\n    issueWarning(\n      'missing-class-metadata',\n      `The class ${target} is missing decorator metadata. This ` +\n        `could mean that you're using a compiler that supports decorators ` +\n        `but doesn't support decorator metadata, such as TypeScript 5.1. ` +\n        `Please update your compiler.`\n    );\n  }\n\n  // Store the property options\n  let properties = globalThis.litPropertyMetadata.get(metadata);\n  if (properties === undefined) {\n    globalThis.litPropertyMetadata.set(metadata, (properties = new Map()));\n  }\n  properties.set(context.name, options);\n\n  if (kind === 'accessor') {\n    // Standard decorators cannot dynamically modify the class, so we can't\n    // replace a field with accessors. The user must use the new `accessor`\n    // keyword instead.\n    const {name} = context;\n    return {\n      set(this: ReactiveElement, v: V) {\n        const oldValue = (\n          target as ClassAccessorDecoratorTarget<C, V>\n        ).get.call(this as unknown as C);\n        (target as ClassAccessorDecoratorTarget<C, V>).set.call(\n          this as unknown as C,\n          v\n        );\n        this.requestUpdate(name, oldValue, options);\n      },\n      init(this: ReactiveElement, v: V): V {\n        if (v !== undefined) {\n          this._$changeProperty(name, undefined, options);\n        }\n        return v;\n      },\n    } as unknown as ClassAccessorDecoratorResult<C, V>;\n  } else if (kind === 'setter') {\n    const {name} = context;\n    return function (this: ReactiveElement, value: V) {\n      const oldValue = this[name as keyof ReactiveElement];\n      (target as (value: V) => void).call(this, value);\n      this.requestUpdate(name, oldValue, options);\n    } as unknown as (this: C, value: V) => void;\n  }\n  throw new Error(`Unsupported decorator location: ${kind}`);\n};\n\n/**\n * A class field or accessor decorator which creates a reactive property that\n * reflects a corresponding attribute value. When a decorated property is set\n * the element will update and render. A {@linkcode PropertyDeclaration} may\n * optionally be supplied to configure property features.\n *\n * This decorator should only be used for public fields. As public fields,\n * properties should be considered as primarily settable by element users,\n * either via attribute or the property itself.\n *\n * Generally, properties that are changed by the element should be private or\n * protected fields and should use the {@linkcode state} decorator.\n *\n * However, sometimes element code does need to set a public property. This\n * should typically only be done in response to user interaction, and an event\n * should be fired informing the user; for example, a checkbox sets its\n * `checked` property when clicked and fires a `changed` event. Mutating public\n * properties should typically not be done for non-primitive (object or array)\n * properties. In other cases when an element needs to manage state, a private\n * property decorated via the {@linkcode state} decorator should be used. When\n * needed, state properties can be initialized via public properties to\n * facilitate complex interactions.\n *\n * ```ts\n * class MyElement {\n *   @property({ type: Boolean })\n *   clicked = false;\n * }\n * ```\n * @category Decorator\n * @ExportDecoratedItems\n */\nexport function property(options?: PropertyDeclaration): PropertyDecorator {\n  return <C extends Interface<ReactiveElement>, V>(\n    protoOrTarget:\n      | object\n      | ClassAccessorDecoratorTarget<C, V>\n      | ((value: V) => void),\n    nameOrContext:\n      | PropertyKey\n      | ClassAccessorDecoratorContext<C, V>\n      | ClassSetterDecoratorContext<C, V>\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ): any => {\n    return (\n      typeof nameOrContext === 'object'\n        ? standardProperty<C, V>(\n            options,\n            protoOrTarget as\n              | ClassAccessorDecoratorTarget<C, V>\n              | ((value: V) => void),\n            nameOrContext as StandardPropertyContext<C, V>\n          )\n        : legacyProperty(\n            options,\n            protoOrTarget as Object,\n            nameOrContext as PropertyKey\n          )\n    ) as PropertyDecorator;\n  };\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport {property} from './property.js';\n\nexport interface StateDeclaration<Type = unknown> {\n  /**\n   * A function that indicates if a property should be considered changed when\n   * it is set. The function should take the `newValue` and `oldValue` and\n   * return `true` if an update should be requested.\n   */\n  hasChanged?(value: Type, oldValue: Type): boolean;\n}\n\n/**\n * @deprecated use StateDeclaration\n */\nexport type InternalPropertyDeclaration<Type = unknown> =\n  StateDeclaration<Type>;\n\n/**\n * Declares a private or protected reactive property that still triggers\n * updates to the element when it changes. It does not reflect from the\n * corresponding attribute.\n *\n * Properties declared this way must not be used from HTML or HTML templating\n * systems, they're solely for properties internal to the element. These\n * properties may be renamed by optimization tools like closure compiler.\n * @category Decorator\n */\nexport function state(options?: StateDeclaration) {\n  return property({\n    ...options,\n    // Add both `state` and `attribute` because we found a third party\n    // controller that is keying off of PropertyOptions.state to determine\n    // whether a field is a private internal property or not.\n    state: true,\n    attribute: false,\n  });\n}\n", "import { AddAppCb, GetApp } from \"client/store\";\nimport { getAuth } from \"firebase/auth\";\nimport type { TemplateResult } from \"lit\";\nimport { LitElement, html, css } from \"lit\";\nimport { customElement, state } from \"lit/decorators.js\";\n\nenum State {\n  OnLogin,\n  OnDraw\n}\n\n@customElement(\"router-element\")\nexport class RouterElement extends LitElement {\n  static styles = css`\n    #router {\n      width: 100%;\n      height: 100%;\n    }\n  `;\n\n  @state()\n  private state_ = State.OnLogin;\n\n  protected logInSuccess() {\n    console.log(\"router-login\");\n    this.state_ = State.OnDraw;\n  }\n\n  protected render() {\n    AddAppCb(async (app) => {\n      console.log(\"app cb\", app);\n      const auth = getAuth(app);\n      await auth.authStateReady();\n      if (auth.currentUser !== null) {\n        console.log('user there!');\n        this.state_ = State.OnDraw;\n      }\n    });\n\n    let route: TemplateResult;\n    switch (this.state_) {\n      case State.OnLogin:\n        route = html`<login-element @logIn=\"${this.logInSuccess}\"></login-element>`;\n        break;\n      case State.OnDraw:\n        route = html`<quiz-element character=\"\u8F66\"></quiz-element>`;\n        break;\n    }\n\n    return html`<div id=\"router\">${route}</div>`;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"router-element\": RouterElement;\n  }\n}\n", "import { ColorObject, RecursivePartial } from './typings/types';\n\n// hacky way to get around rollup not properly setting `global` to `window` in browser\nconst globalObj = typeof window === 'undefined' ? global : window;\n\nexport const performanceNow =\n  (globalObj.performance && (() => globalObj.performance.now())) || (() => Date.now());\nexport const requestAnimationFrame =\n  globalObj.requestAnimationFrame ||\n  ((callback) => setTimeout(() => callback(performanceNow()), 1000 / 60));\nexport const cancelAnimationFrame = globalObj.cancelAnimationFrame || clearTimeout;\n\n// Object.assign polyfill, because IE :/\nexport const _assign = function (target: any, ...overrides: any[]) {\n  const overrideTarget = Object(target);\n  overrides.forEach((override) => {\n    if (override != null) {\n      for (const key in override) {\n        if (Object.prototype.hasOwnProperty.call(override, key)) {\n          overrideTarget[key] = override[key];\n        }\n      }\n    }\n  });\n  return overrideTarget;\n};\n\nexport const assign = Object.assign || _assign;\n\nexport function arrLast<TValue>(arr: Array<TValue>) {\n  return arr[arr.length - 1];\n}\n\nexport const fixIndex = (index: number, length: number) => {\n  // helper to handle negative indexes in array indices\n  if (index < 0) {\n    return length + index;\n  }\n  return index;\n};\n\nexport const selectIndex = <T>(arr: Array<T>, index: number) => {\n  // helper to select item from array at index, supporting negative indexes\n  return arr[fixIndex(index, arr.length)];\n};\n\nexport function copyAndMergeDeep<T>(base: T, override: RecursivePartial<T> | undefined) {\n  const output = { ...base };\n  for (const key in override) {\n    const baseVal = base[key];\n    const overrideVal = override[key];\n    if (baseVal === overrideVal) {\n      continue;\n    }\n    if (\n      baseVal &&\n      overrideVal &&\n      typeof baseVal === 'object' &&\n      typeof overrideVal === 'object' &&\n      !Array.isArray(overrideVal)\n    ) {\n      output[key] = copyAndMergeDeep(baseVal, overrideVal);\n    } else {\n      // @ts-ignore\n      output[key] = overrideVal;\n    }\n  }\n  return output;\n}\n\n/** basically a simplified version of lodash.get, selects a key out of an object like 'a.b' from {a: {b: 7}} */\nexport function inflate(scope: string, obj: any): any {\n  const parts = scope.split('.');\n  const final: any = {};\n  let current = final;\n  for (let i = 0; i < parts.length; i++) {\n    const cap = i === parts.length - 1 ? obj : {};\n    current[parts[i]] = cap;\n    current = cap;\n  }\n  return final;\n}\n\nlet count = 0;\n\nexport function counter() {\n  count++;\n  return count;\n}\n\nexport function average(arr: number[]) {\n  const sum = arr.reduce((acc, val) => val + acc, 0);\n  return sum / arr.length;\n}\n\nexport function timeout(duration = 0) {\n  return new Promise((resolve) => setTimeout(resolve, duration));\n}\n\nexport function colorStringToVals(colorString: string): ColorObject {\n  const normalizedColor = colorString.toUpperCase().trim();\n  // based on https://stackoverflow.com/a/21648508\n  if (/^#([A-F0-9]{3}){1,2}$/.test(normalizedColor)) {\n    let hexParts = normalizedColor.substring(1).split('');\n    if (hexParts.length === 3) {\n      hexParts = [\n        hexParts[0],\n        hexParts[0],\n        hexParts[1],\n        hexParts[1],\n        hexParts[2],\n        hexParts[2],\n      ];\n    }\n    const hexStr = `${hexParts.join('')}`;\n    return {\n      r: parseInt(hexStr.slice(0, 2), 16),\n      g: parseInt(hexStr.slice(2, 4), 16),\n      b: parseInt(hexStr.slice(4, 6), 16),\n      a: 1,\n    };\n  }\n  const rgbMatch = normalizedColor.match(\n    /^RGBA?\\((\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)(?:\\s*,\\s*(\\d*\\.?\\d+))?\\)$/,\n  );\n  if (rgbMatch) {\n    return {\n      r: parseInt(rgbMatch[1], 10),\n      g: parseInt(rgbMatch[2], 10),\n      b: parseInt(rgbMatch[3], 10),\n      // @ts-expect-error ts-migrate(2554) FIXME: Expected 1 arguments, but got 2.\n      a: parseFloat(rgbMatch[4] || 1, 10),\n    };\n  }\n  throw new Error(`Invalid color: ${colorString}`);\n}\n\nexport const trim = (string: string) => string.replace(/^\\s+/, '').replace(/\\s+$/, '');\n\n// return a new array-like object with int keys where each key is item\n// ex: objRepeat({x: 8}, 3) === {0: {x: 8}, 1: {x: 8}, 2: {x: 8}}\nexport function objRepeat<T>(item: T, times: number) {\n  const obj: Record<number, T> = {};\n  for (let i = 0; i < times; i++) {\n    obj[i] = item;\n  }\n  return obj;\n}\n\n// similar to objRepeat, but takes in a callback which is called for each index in the object\nexport function objRepeatCb<T>(times: number, cb: (i: number) => T) {\n  const obj: Record<number, T> = {};\n  for (let i = 0; i < times; i++) {\n    obj[i] = cb(i);\n  }\n  return obj;\n}\n\nconst ua = globalObj.navigator?.userAgent || '';\n\nexport const isMsBrowser =\n  ua.indexOf('MSIE ') > 0 || ua.indexOf('Trident/') > 0 || ua.indexOf('Edge/') > 0;\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nexport const noop = () => {};\n", "import Character from './models/Character';\nimport { GenericMutation } from './Mutation';\nimport {\n  ColorObject,\n  OnCompleteFunction,\n  Point,\n  RecursivePartial,\n} from './typings/types';\nimport { copyAndMergeDeep, colorStringToVals, noop } from './utils';\n\nexport type StrokeRenderState = {\n  opacity: number;\n  displayPortion: number;\n};\n\nexport type CharacterRenderState = {\n  opacity: number;\n  strokes: Record<number | string, StrokeRenderState>;\n};\n\nexport type RenderStateObject = {\n  options: {\n    drawingFadeDuration: number;\n    drawingWidth: number;\n    drawingColor: ColorObject;\n    strokeColor: ColorObject;\n    outlineColor: ColorObject;\n    radicalColor: ColorObject;\n    highlightColor: ColorObject;\n  };\n  character: {\n    main: CharacterRenderState;\n    outline: CharacterRenderState;\n    highlight: CharacterRenderState;\n  };\n  userStrokes: Record<\n    string,\n    | {\n        points: Point[];\n        opacity: number;\n      }\n    | undefined\n  > | null;\n};\n\nexport type CharacterName = keyof RenderStateObject['character'];\n\ntype OnStateChangeCallback = (\n  nextState: RenderStateObject,\n  currentState: RenderStateObject,\n) => void;\n\ntype MutationChain = {\n  _isActive: boolean;\n  _index: number;\n  _resolve: OnCompleteFunction;\n  _mutations: GenericMutation[];\n  _loop: boolean | undefined;\n  _scopes: string[];\n};\n\nexport type RenderStateOptions = {\n  strokeColor: string;\n  radicalColor: string | null;\n  highlightColor: string;\n  outlineColor: string;\n  drawingColor: string;\n  drawingFadeDuration: number;\n  drawingWidth: number;\n  outlineWidth: number;\n  showCharacter: boolean;\n  showOutline: boolean;\n};\n\nexport default class RenderState {\n  _mutationChains: MutationChain[] = [];\n  _onStateChange: OnStateChangeCallback;\n\n  state: RenderStateObject;\n\n  constructor(\n    character: Character,\n    options: RenderStateOptions,\n    onStateChange: OnStateChangeCallback = noop,\n  ) {\n    this._onStateChange = onStateChange;\n\n    this.state = {\n      options: {\n        drawingFadeDuration: options.drawingFadeDuration,\n        drawingWidth: options.drawingWidth,\n        drawingColor: colorStringToVals(options.drawingColor),\n        strokeColor: colorStringToVals(options.strokeColor),\n        outlineColor: colorStringToVals(options.outlineColor),\n        radicalColor: colorStringToVals(options.radicalColor || options.strokeColor),\n        highlightColor: colorStringToVals(options.highlightColor),\n      },\n      character: {\n        main: {\n          opacity: options.showCharacter ? 1 : 0,\n          strokes: {},\n        },\n        outline: {\n          opacity: options.showOutline ? 1 : 0,\n          strokes: {},\n        },\n        highlight: {\n          opacity: 1,\n          strokes: {},\n        },\n      },\n      userStrokes: null,\n    };\n\n    for (let i = 0; i < character.strokes.length; i++) {\n      this.state.character.main.strokes[i] = {\n        opacity: 1,\n        displayPortion: 1,\n      };\n\n      this.state.character.outline.strokes[i] = {\n        opacity: 1,\n        displayPortion: 1,\n      };\n\n      this.state.character.highlight.strokes[i] = {\n        opacity: 0,\n        displayPortion: 1,\n      };\n    }\n  }\n\n  overwriteOnStateChange(onStateChange: OnStateChangeCallback) {\n    this._onStateChange = onStateChange;\n  }\n\n  updateState(stateChanges: RecursivePartial<RenderStateObject>) {\n    const nextState = copyAndMergeDeep(this.state, stateChanges);\n    this._onStateChange(nextState, this.state);\n    this.state = nextState;\n  }\n\n  run(\n    mutations: GenericMutation[],\n    options: {\n      loop?: boolean;\n    } = {},\n  ) {\n    const scopes = mutations.map((mut) => mut.scope);\n\n    this.cancelMutations(scopes);\n\n    return new Promise((resolve: OnCompleteFunction) => {\n      const mutationChain: MutationChain = {\n        _isActive: true,\n        _index: 0,\n        _resolve: resolve,\n        _mutations: mutations,\n        _loop: options.loop,\n        _scopes: scopes,\n      };\n      this._mutationChains.push(mutationChain);\n      this._run(mutationChain);\n    });\n  }\n\n  _run(mutationChain: MutationChain) {\n    if (!mutationChain._isActive) {\n      return;\n    }\n\n    const mutations = mutationChain._mutations;\n    if (mutationChain._index >= mutations.length) {\n      if (mutationChain._loop) {\n        mutationChain._index = 0; // eslint-disable-line no-param-reassign\n      } else {\n        mutationChain._isActive = false; // eslint-disable-line no-param-reassign\n        this._mutationChains = this._mutationChains.filter(\n          (chain) => chain !== mutationChain,\n        );\n        // The chain is done - resolve the promise to signal it finished successfully\n        mutationChain._resolve({ canceled: false });\n        return;\n      }\n    }\n\n    const activeMutation = mutationChain._mutations[mutationChain._index];\n\n    activeMutation.run(this).then(() => {\n      if (mutationChain._isActive) {\n        mutationChain._index++; // eslint-disable-line no-param-reassign\n        this._run(mutationChain);\n      }\n    });\n  }\n\n  _getActiveMutations() {\n    return this._mutationChains.map((chain) => chain._mutations[chain._index]);\n  }\n\n  pauseAll() {\n    this._getActiveMutations().forEach((mutation) => mutation.pause());\n  }\n\n  resumeAll() {\n    this._getActiveMutations().forEach((mutation) => mutation.resume());\n  }\n\n  cancelMutations(scopesToCancel: string[]) {\n    for (const chain of this._mutationChains) {\n      for (const chainId of chain._scopes) {\n        for (const scopeToCancel of scopesToCancel) {\n          if (chainId.startsWith(scopeToCancel) || scopeToCancel.startsWith(chainId)) {\n            this._cancelMutationChain(chain);\n          }\n        }\n      }\n    }\n  }\n\n  cancelAll() {\n    this.cancelMutations(['']);\n  }\n\n  _cancelMutationChain(mutationChain: MutationChain) {\n    mutationChain._isActive = false;\n    for (let i = mutationChain._index; i < mutationChain._mutations.length; i++) {\n      mutationChain._mutations[i].cancel(this);\n    }\n\n    mutationChain._resolve?.({ canceled: true });\n\n    this._mutationChains = this._mutationChains.filter(\n      (chain) => chain !== mutationChain,\n    );\n  }\n}\n", "import { Point } from './typings/types';\nimport { average, arrLast } from './utils';\n\nexport const subtract = (p1: Point, p2: Point) => ({ x: p1.x - p2.x, y: p1.y - p2.y });\n\nexport const magnitude = (point: Point) =>\n  Math.sqrt(Math.pow(point.x, 2) + Math.pow(point.y, 2));\n\nexport const distance = (point1: Point, point2: Point) =>\n  magnitude(subtract(point1, point2));\n\nexport const equals = (point1: Point, point2: Point) =>\n  point1.x === point2.x && point1.y === point2.y;\n\nexport const round = (point: Point, precision = 1) => {\n  const multiplier = precision * 10;\n  return {\n    x: Math.round(multiplier * point.x) / multiplier,\n    y: Math.round(multiplier * point.y) / multiplier,\n  };\n};\n\nexport const length = (points: Point[]) => {\n  let lastPoint = points[0];\n  const pointsSansFirst = points.slice(1);\n  return pointsSansFirst.reduce((acc, point) => {\n    const dist = distance(point, lastPoint);\n    lastPoint = point;\n    return acc + dist;\n  }, 0);\n};\n\nexport const cosineSimilarity = (point1: Point, point2: Point) => {\n  const rawDotProduct = point1.x * point2.x + point1.y * point2.y;\n  return rawDotProduct / magnitude(point1) / magnitude(point2);\n};\n\n/**\n * return a new point, p3, which is on the same line as p1 and p2, but distance away\n * from p2. p1, p2, p3 will always lie on the line in that order\n */\nexport const _extendPointOnLine = (p1: Point, p2: Point, dist: number) => {\n  const vect = subtract(p2, p1);\n  const norm = dist / magnitude(vect);\n  return { x: p2.x + norm * vect.x, y: p2.y + norm * vect.y };\n};\n\n/** based on http://www.kr.tuwien.ac.at/staff/eiter/et-archive/cdtr9464.pdf */\nexport const frechetDist = (curve1: Point[], curve2: Point[]) => {\n  const longCurve = curve1.length >= curve2.length ? curve1 : curve2;\n  const shortCurve = curve1.length >= curve2.length ? curve2 : curve1;\n\n  const calcVal = (\n    i: number,\n    j: number,\n    prevResultsCol: number[],\n    curResultsCol: number[],\n  ): number => {\n    if (i === 0 && j === 0) {\n      return distance(longCurve[0], shortCurve[0]);\n    }\n\n    if (i > 0 && j === 0) {\n      return Math.max(prevResultsCol[0], distance(longCurve[i], shortCurve[0]));\n    }\n\n    const lastResult = curResultsCol[curResultsCol.length - 1];\n\n    if (i === 0 && j > 0) {\n      return Math.max(lastResult, distance(longCurve[0], shortCurve[j]));\n    }\n\n    return Math.max(\n      Math.min(prevResultsCol[j], prevResultsCol[j - 1], lastResult),\n      distance(longCurve[i], shortCurve[j]),\n    );\n  };\n\n  let prevResultsCol: number[] = [];\n  for (let i = 0; i < longCurve.length; i++) {\n    const curResultsCol: number[] = [];\n    for (let j = 0; j < shortCurve.length; j++) {\n      // we only need the results from i - 1 and j - 1 to continue the calculation\n      // so we only need to hold onto the last column of calculated results\n      // prevResultsCol is results[i-1][:] in the original algorithm\n      // curResultsCol is results[i][:j-1] in the original algorithm\n      curResultsCol.push(calcVal(i, j, prevResultsCol, curResultsCol));\n    }\n    prevResultsCol = curResultsCol;\n  }\n\n  return prevResultsCol[shortCurve.length - 1];\n};\n\n/** break up long segments in the curve into smaller segments of len maxLen or smaller */\nexport const subdivideCurve = (curve: Point[], maxLen = 0.05) => {\n  const newCurve = curve.slice(0, 1);\n\n  for (const point of curve.slice(1)) {\n    const prevPoint = newCurve[newCurve.length - 1];\n    const segLen = distance(point, prevPoint);\n    if (segLen > maxLen) {\n      const numNewPoints = Math.ceil(segLen / maxLen);\n      const newSegLen = segLen / numNewPoints;\n      for (let i = 0; i < numNewPoints; i++) {\n        newCurve.push(_extendPointOnLine(point, prevPoint, -1 * newSegLen * (i + 1)));\n      }\n    } else {\n      newCurve.push(point);\n    }\n  }\n\n  return newCurve;\n};\n\n/** redraw the curve using numPoints equally spaced out along the length of the curve */\nexport const outlineCurve = (curve: Point[], numPoints = 30) => {\n  const curveLen = length(curve);\n  const segmentLen = curveLen / (numPoints - 1);\n  const outlinePoints = [curve[0]];\n  const endPoint = arrLast(curve);\n  const remainingCurvePoints = curve.slice(1);\n\n  for (let i = 0; i < numPoints - 2; i++) {\n    let lastPoint: Point = arrLast(outlinePoints);\n    let remainingDist = segmentLen;\n    let outlinePointFound = false;\n    while (!outlinePointFound) {\n      const nextPointDist = distance(lastPoint, remainingCurvePoints[0]);\n      if (nextPointDist < remainingDist) {\n        remainingDist -= nextPointDist;\n        lastPoint = remainingCurvePoints.shift()!;\n      } else {\n        const nextPoint = _extendPointOnLine(\n          lastPoint,\n          remainingCurvePoints[0],\n          remainingDist - nextPointDist,\n        );\n        outlinePoints.push(nextPoint);\n        outlinePointFound = true;\n      }\n    }\n  }\n\n  outlinePoints.push(endPoint);\n\n  return outlinePoints;\n};\n\n/** translate and scale from https://en.wikipedia.org/wiki/Procrustes_analysis */\nexport const normalizeCurve = (curve: Point[]) => {\n  const outlinedCurve = outlineCurve(curve);\n  const meanX = average(outlinedCurve.map((point) => point.x));\n  const meanY = average(outlinedCurve.map((point) => point.y));\n  const mean = { x: meanX, y: meanY };\n  const translatedCurve = outlinedCurve.map((point) => subtract(point, mean));\n  const scale = Math.sqrt(\n    average([\n      Math.pow(translatedCurve[0].x, 2) + Math.pow(translatedCurve[0].y, 2),\n      Math.pow(arrLast(translatedCurve).x, 2) + Math.pow(arrLast(translatedCurve).y, 2),\n    ]),\n  );\n  const scaledCurve = translatedCurve.map((point) => ({\n    x: point.x / scale,\n    y: point.y / scale,\n  }));\n  return subdivideCurve(scaledCurve);\n};\n\n// rotate around the origin\nexport const rotate = (curve: Point[], theta: number) => {\n  return curve.map((point) => ({\n    x: Math.cos(theta) * point.x - Math.sin(theta) * point.y,\n    y: Math.sin(theta) * point.x + Math.cos(theta) * point.y,\n  }));\n};\n\n// remove intermediate points that are on the same line as the points to either side\nexport const _filterParallelPoints = (points: Point[]) => {\n  if (points.length < 3) return points;\n  const filteredPoints = [points[0], points[1]];\n  points.slice(2).forEach((point) => {\n    const numFilteredPoints = filteredPoints.length;\n    const curVect = subtract(point, filteredPoints[numFilteredPoints - 1]);\n    const prevVect = subtract(\n      filteredPoints[numFilteredPoints - 1],\n      filteredPoints[numFilteredPoints - 2],\n    );\n    // this is the z coord of the cross-product. If this is 0 then they're parallel\n    const isParallel = curVect.y * prevVect.x - curVect.x * prevVect.y === 0;\n    if (isParallel) {\n      filteredPoints.pop();\n    }\n    filteredPoints.push(point);\n  });\n  return filteredPoints;\n};\n\nexport function getPathString(points: Point[], close = false) {\n  const start = round(points[0]);\n  const remainingPoints = points.slice(1);\n  let pathString = `M ${start.x} ${start.y}`;\n  remainingPoints.forEach((point) => {\n    const roundedPoint = round(point);\n    pathString += ` L ${roundedPoint.x} ${roundedPoint.y}`;\n  });\n  if (close) {\n    pathString += 'Z';\n  }\n  return pathString;\n}\n\n/** take points on a path and move their start point backwards by distance */\nexport const extendStart = (points: Point[], dist: number) => {\n  const filteredPoints = _filterParallelPoints(points);\n  if (filteredPoints.length < 2) return filteredPoints;\n  const p1 = filteredPoints[1];\n  const p2 = filteredPoints[0];\n  const newStart = _extendPointOnLine(p1, p2, dist);\n  const extendedPoints = filteredPoints.slice(1);\n  extendedPoints.unshift(newStart);\n  return extendedPoints;\n};\n", "import { subtract, distance, length } from '../geometry';\nimport { Point } from '../typings/types';\n\nexport default class Stroke {\n  path: string;\n  points: Point[];\n  strokeNum: number;\n  isInRadical: boolean;\n\n  constructor(path: string, points: Point[], strokeNum: number, isInRadical = false) {\n    this.path = path;\n    this.points = points;\n    this.strokeNum = strokeNum;\n    this.isInRadical = isInRadical;\n  }\n\n  getStartingPoint() {\n    return this.points[0];\n  }\n\n  getEndingPoint() {\n    return this.points[this.points.length - 1];\n  }\n\n  getLength(): number {\n    return length(this.points);\n  }\n\n  getVectors() {\n    let lastPoint = this.points[0];\n    const pointsSansFirst = this.points.slice(1);\n    return pointsSansFirst.map((point) => {\n      const vector = subtract(point, lastPoint);\n      lastPoint = point;\n      return vector;\n    });\n  }\n\n  getDistance(point: Point) {\n    const distances = this.points.map((strokePoint) => distance(strokePoint, point));\n    return Math.min(...distances);\n  }\n\n  getAverageDistance(points: Point[]) {\n    const totalDist = points.reduce((acc, point) => acc + this.getDistance(point), 0);\n    return totalDist / points.length;\n  }\n}\n", "import Stroke from './Stroke';\n\nexport default class Character {\n  symbol: string;\n  strokes: Stroke[];\n\n  constructor(symbol: string, strokes: Stroke[]) {\n    this.symbol = symbol;\n    this.strokes = strokes;\n  }\n}\n", "import Stroke from './models/Stroke';\nimport Character from './models/Character';\nimport { CharacterJson } from './typings/types';\n\nfunction generateStrokes({ radStrokes, strokes, medians }: CharacterJson) {\n  const isInRadical = (strokeNum: number) => (radStrokes?.indexOf(strokeNum) ?? -1) >= 0;\n  return strokes.map((path, index) => {\n    const points = medians[index].map((pointData) => {\n      const [x, y] = pointData;\n      return { x, y };\n    });\n    return new Stroke(path, points, index, isInRadical(index));\n  });\n}\n\nexport default function parseCharData(symbol: string, charJson: CharacterJson) {\n  const strokes = generateStrokes(charJson);\n  return new Character(symbol, strokes);\n}\n", "import { Point } from './typings/types';\n\n// All makemeahanzi characters have the same bounding box\nconst CHARACTER_BOUNDS = [\n  { x: 0, y: -124 },\n  { x: 1024, y: 900 },\n];\nconst [from, to] = CHARACTER_BOUNDS;\nconst preScaledWidth = to.x - from.x;\nconst preScaledHeight = to.y - from.y;\n\nexport type PositionerOptions = {\n  /** Default: 0 */\n  width: number;\n  /** Default: 0 */\n  height: number;\n  /** Default: 20 */\n  padding: number;\n};\n\nexport default class Positioner {\n  padding: number;\n  width: number;\n  height: number;\n  xOffset: number;\n  yOffset: number;\n  scale: number;\n\n  constructor(options: PositionerOptions) {\n    const { padding, width, height } = options;\n    this.padding = padding;\n    this.width = width;\n    this.height = height;\n\n    const effectiveWidth = width - 2 * padding;\n    const effectiveHeight = height - 2 * padding;\n    const scaleX = effectiveWidth / preScaledWidth;\n    const scaleY = effectiveHeight / preScaledHeight;\n\n    this.scale = Math.min(scaleX, scaleY);\n\n    const xCenteringBuffer = padding + (effectiveWidth - this.scale * preScaledWidth) / 2;\n    const yCenteringBuffer =\n      padding + (effectiveHeight - this.scale * preScaledHeight) / 2;\n\n    this.xOffset = -1 * from.x * this.scale + xCenteringBuffer;\n    this.yOffset = -1 * from.y * this.scale + yCenteringBuffer;\n  }\n\n  convertExternalPoint(point: Point) {\n    const x = (point.x - this.xOffset) / this.scale;\n    const y = (this.height - this.yOffset - point.y) / this.scale;\n    return { x, y };\n  }\n}\n", "import { average } from './utils';\nimport {\n  cosineSimilarity,\n  equals,\n  frechetDist,\n  distance,\n  subtract,\n  normalizeCurve,\n  rotate,\n  length,\n} from './geometry';\nimport { Point } from './typings/types';\nimport UserStroke from './models/UserStroke';\nimport Stroke from './models/Stroke';\nimport Character from './models/Character';\n\nconst COSINE_SIMILARITY_THRESHOLD = 0; // -1 to 1, smaller = more lenient\nconst START_AND_END_DIST_THRESHOLD = 250; // bigger = more lenient\nconst FRECHET_THRESHOLD = 0.4; // bigger = more lenient\nconst MIN_LEN_THRESHOLD = 0.35; // smaller = more lenient\n\nexport interface StrokeMatchResultMeta {\n  isStrokeBackwards: boolean;\n}\n\nexport interface StrokeMatchResult {\n  isMatch: boolean;\n  meta: StrokeMatchResultMeta;\n}\n\nexport default function strokeMatches(\n  userStroke: UserStroke,\n  character: Character,\n  strokeNum: number,\n  options: {\n    leniency?: number;\n    isOutlineVisible?: boolean;\n    averageDistanceThreshold?: number;\n  } = {},\n): StrokeMatchResult {\n  const strokes = character.strokes;\n  const points = stripDuplicates(userStroke.points);\n\n  if (points.length < 2) {\n    return { isMatch: false, meta: { isStrokeBackwards: false } };\n  }\n\n  const { isMatch, meta, avgDist } = getMatchData(points, strokes[strokeNum], options);\n\n  if (!isMatch) {\n    return { isMatch, meta };\n  }\n\n  // if there is a better match among strokes the user hasn't drawn yet, the user probably drew the wrong stroke\n  const laterStrokes = strokes.slice(strokeNum + 1);\n  let closestMatchDist = avgDist;\n\n  for (let i = 0; i < laterStrokes.length; i++) {\n    const { isMatch, avgDist } = getMatchData(points, laterStrokes[i], {\n      ...options,\n      checkBackwards: false,\n    });\n    if (isMatch && avgDist < closestMatchDist) {\n      closestMatchDist = avgDist;\n    }\n  }\n  // if there's a better match, rather that returning false automatically, try reducing leniency instead\n  // if leniency is already really high we can allow some similar strokes to pass\n  if (closestMatchDist < avgDist) {\n    // adjust leniency between 0.3 and 0.6 depending on how much of a better match the new match is\n    const leniencyAdjustment = (0.6 * (closestMatchDist + avgDist)) / (2 * avgDist);\n    const { isMatch, meta } = getMatchData(points, strokes[strokeNum], {\n      ...options,\n      leniency: (options.leniency || 1) * leniencyAdjustment,\n    });\n    return { isMatch, meta };\n  }\n\n  return { isMatch, meta };\n}\n\nconst startAndEndMatches = (points: Point[], closestStroke: Stroke, leniency: number) => {\n  const startingDist = distance(closestStroke.getStartingPoint(), points[0]);\n  const endingDist = distance(closestStroke.getEndingPoint(), points[points.length - 1]);\n  return (\n    startingDist <= START_AND_END_DIST_THRESHOLD * leniency &&\n    endingDist <= START_AND_END_DIST_THRESHOLD * leniency\n  );\n};\n\n// returns a list of the direction of all segments in the line connecting the points\nconst getEdgeVectors = (points: Point[]) => {\n  const vectors: Point[] = [];\n  let lastPoint = points[0];\n  points.slice(1).forEach((point) => {\n    vectors.push(subtract(point, lastPoint));\n    lastPoint = point;\n  });\n  return vectors;\n};\n\nconst directionMatches = (points: Point[], stroke: Stroke) => {\n  const edgeVectors = getEdgeVectors(points);\n  const strokeVectors = stroke.getVectors();\n  const similarities = edgeVectors.map((edgeVector) => {\n    const strokeSimilarities = strokeVectors.map((strokeVector) =>\n      cosineSimilarity(strokeVector, edgeVector),\n    );\n    return Math.max(...strokeSimilarities);\n  });\n  const avgSimilarity = average(similarities);\n  return avgSimilarity > COSINE_SIMILARITY_THRESHOLD;\n};\n\nconst lengthMatches = (points: Point[], stroke: Stroke, leniency: number) => {\n  return (\n    (leniency * (length(points) + 25)) / (stroke.getLength() + 25) >= MIN_LEN_THRESHOLD\n  );\n};\n\nconst stripDuplicates = (points: Point[]) => {\n  if (points.length < 2) return points;\n  const [firstPoint, ...rest] = points;\n  const dedupedPoints = [firstPoint];\n\n  for (const point of rest) {\n    if (!equals(point, dedupedPoints[dedupedPoints.length - 1])) {\n      dedupedPoints.push(point);\n    }\n  }\n\n  return dedupedPoints;\n};\n\nconst SHAPE_FIT_ROTATIONS = [\n  Math.PI / 16,\n  Math.PI / 32,\n  0,\n  (-1 * Math.PI) / 32,\n  (-1 * Math.PI) / 16,\n];\n\nconst shapeFit = (curve1: Point[], curve2: Point[], leniency: number) => {\n  const normCurve1 = normalizeCurve(curve1);\n  const normCurve2 = normalizeCurve(curve2);\n  let minDist = Infinity;\n  SHAPE_FIT_ROTATIONS.forEach((theta) => {\n    const dist = frechetDist(normCurve1, rotate(normCurve2, theta));\n    if (dist < minDist) {\n      minDist = dist;\n    }\n  });\n  return minDist <= FRECHET_THRESHOLD * leniency;\n};\n\nconst getMatchData = (\n  points: Point[],\n  stroke: Stroke,\n  options: {\n    leniency?: number;\n    isOutlineVisible?: boolean;\n    checkBackwards?: boolean;\n    averageDistanceThreshold?: number;\n  },\n): StrokeMatchResult & { avgDist: number } => {\n  const {\n    leniency = 1,\n    isOutlineVisible = false,\n    checkBackwards = true,\n    averageDistanceThreshold = 350,\n  } = options;\n  const avgDist = stroke.getAverageDistance(points);\n  const distMod = isOutlineVisible || stroke.strokeNum > 0 ? 0.5 : 1;\n  const withinDistThresh = avgDist <= averageDistanceThreshold * distMod * leniency;\n  // short circuit for faster matching\n  if (!withinDistThresh) {\n    return { isMatch: false, avgDist, meta: { isStrokeBackwards: false } };\n  }\n  const startAndEndMatch = startAndEndMatches(points, stroke, leniency);\n  const directionMatch = directionMatches(points, stroke);\n  const shapeMatch = shapeFit(points, stroke.points, leniency);\n  const lengthMatch = lengthMatches(points, stroke, leniency);\n\n  const isMatch =\n    withinDistThresh && startAndEndMatch && directionMatch && shapeMatch && lengthMatch;\n\n  if (checkBackwards && !isMatch) {\n    const backwardsMatchData = getMatchData([...points].reverse(), stroke, {\n      ...options,\n      checkBackwards: false,\n    });\n\n    if (backwardsMatchData.isMatch) {\n      return {\n        isMatch,\n        avgDist,\n        meta: { isStrokeBackwards: true },\n      };\n    }\n  }\n\n  return { isMatch, avgDist, meta: { isStrokeBackwards: false } };\n};\n", "import { Point } from '../typings/types';\n\nexport default class UserStroke {\n  id: number;\n  points: Point[];\n  externalPoints: Point[];\n\n  constructor(id: number, startingPoint: Point, startingExternalPoint: Point) {\n    this.id = id;\n    this.points = [startingPoint];\n    this.externalPoints = [startingExternalPoint];\n  }\n\n  appendPoint(point: Point, externalPoint: Point) {\n    this.points.push(point);\n    this.externalPoints.push(externalPoint);\n  }\n}\n", "import {\n  cancelAnimationFrame,\n  requestAnimationFrame,\n  inflate,\n  performanceNow,\n} from './utils';\nimport RenderState from './RenderState';\nimport { RecursivePartial } from './typings/types';\n\n/** Used by `Mutation` & `Delay` */\nexport interface GenericMutation<\n  TRenderStateClass extends GenericRenderStateClass = RenderState\n> {\n  /** Allows mutations starting with the provided string to be cancelled */\n  scope: string;\n  /** Can be useful for checking whether the mutation is running */\n  _runningPromise: Promise<void> | undefined;\n  run(renderState: TRenderStateClass): Promise<void>;\n  pause(): void;\n  resume(): void;\n  cancel(renderState: TRenderStateClass): void;\n}\n\nclass Delay implements GenericMutation {\n  scope: string;\n  _runningPromise: Promise<void> | undefined;\n  _duration: number;\n  _startTime: number | null;\n  _paused: boolean;\n  _timeout!: NodeJS.Timeout;\n  _resolve: (() => void) | undefined;\n\n  constructor(duration: number) {\n    this._duration = duration;\n    this._startTime = null;\n    this._paused = false;\n    this.scope = `delay.${duration}`;\n  }\n\n  run() {\n    this._startTime = performanceNow();\n    this._runningPromise = new Promise((resolve) => {\n      this._resolve = resolve;\n      // @ts-ignore return type of \"setTimeout\" in builds is parsed as `number` instead of `Timeout`\n      this._timeout = setTimeout(() => this.cancel(), this._duration);\n    }) as Promise<void>;\n    return this._runningPromise;\n  }\n\n  pause() {\n    if (this._paused) return;\n    // to pause, clear the timeout and rewrite this._duration with whatever time is remaining\n    const elapsedDelay = performance.now() - (this._startTime || 0);\n    this._duration = Math.max(0, this._duration - elapsedDelay);\n    clearTimeout(this._timeout);\n    this._paused = true;\n  }\n\n  resume() {\n    if (!this._paused) return;\n    this._startTime = performance.now();\n    // @ts-ignore return type of \"setTimeout\" in builds is parsed as `number` instead of `Timeout`\n    this._timeout = setTimeout(() => this.cancel(), this._duration);\n    this._paused = false;\n  }\n\n  cancel() {\n    clearTimeout(this._timeout!);\n    if (this._resolve) {\n      this._resolve();\n    }\n    this._resolve = undefined;\n  }\n}\n\ntype GenericRenderStateClass<T = any> = {\n  state: T;\n  updateState(changes: RecursivePartial<T>): void;\n};\n\nexport default class Mutation<\n  TRenderStateClass extends GenericRenderStateClass,\n  TRenderStateObj = TRenderStateClass['state']\n> implements GenericMutation<TRenderStateClass> {\n  static Delay = Delay;\n\n  scope: string;\n  _runningPromise: Promise<void> | undefined;\n  _valuesOrCallable: any;\n  _duration: number;\n  _force: boolean | undefined;\n  _pausedDuration: number;\n  _startPauseTime: number | null;\n\n  // Only set on .run()\n  _startTime: number | undefined;\n  _startState: RecursivePartial<TRenderStateObj> | undefined;\n  _renderState: TRenderStateClass | undefined;\n  _frameHandle: number | undefined;\n  _values: RecursivePartial<TRenderStateObj> | undefined;\n  _resolve: ((_val?: any) => void) | undefined;\n\n  /**\n   *\n   * @param scope a string representation of what fields this mutation affects from the state. This is used to cancel conflicting mutations\n   * @param valuesOrCallable a thunk containing the value to set, or a callback which will return those values\n   */\n  constructor(\n    scope: string,\n    valuesOrCallable: any,\n    options: {\n      duration?: number;\n      /** Updates render state regardless if cancelled */\n      force?: boolean;\n    } = {},\n  ) {\n    this.scope = scope;\n    this._valuesOrCallable = valuesOrCallable;\n    this._duration = options.duration || 0;\n    this._force = options.force;\n    this._pausedDuration = 0;\n    this._startPauseTime = null;\n  }\n\n  run(renderState: TRenderStateClass): Promise<void> {\n    if (!this._values) this._inflateValues(renderState);\n    if (this._duration === 0) renderState.updateState(this._values!);\n    if (this._duration === 0 || isAlreadyAtEnd(renderState.state, this._values)) {\n      return Promise.resolve();\n    }\n    this._renderState = renderState;\n    this._startState = renderState.state;\n    this._startTime = performance.now();\n    this._frameHandle = requestAnimationFrame(this._tick);\n    return new Promise((resolve) => {\n      this._resolve = resolve;\n    });\n  }\n\n  private _inflateValues(renderState: TRenderStateClass) {\n    let values = this._valuesOrCallable;\n    if (typeof this._valuesOrCallable === 'function') {\n      values = this._valuesOrCallable(renderState.state);\n    }\n    this._values = inflate(this.scope, values);\n  }\n\n  pause() {\n    if (this._startPauseTime !== null) {\n      return;\n    }\n    if (this._frameHandle) {\n      cancelAnimationFrame(this._frameHandle);\n    }\n    this._startPauseTime = performance.now();\n  }\n\n  resume() {\n    if (this._startPauseTime === null) {\n      return;\n    }\n    this._frameHandle = requestAnimationFrame(this._tick);\n    this._pausedDuration += performance.now() - this._startPauseTime;\n    this._startPauseTime = null;\n  }\n\n  private _tick = (timing: number) => {\n    if (this._startPauseTime !== null) {\n      return;\n    }\n\n    const progress = Math.min(\n      1,\n      (timing - this._startTime! - this._pausedDuration) / this._duration,\n    );\n\n    if (progress === 1) {\n      this._renderState!.updateState(this._values!);\n      this._frameHandle = undefined;\n      this.cancel(this._renderState!);\n    } else {\n      const easedProgress = ease(progress);\n      const stateChanges = getPartialValues(\n        this._startState as TRenderStateObj,\n        this._values!,\n        easedProgress,\n      );\n\n      this._renderState!.updateState(stateChanges);\n      this._frameHandle = requestAnimationFrame(this._tick);\n    }\n  };\n\n  cancel(renderState: TRenderStateClass) {\n    this._resolve?.();\n    this._resolve = undefined;\n\n    cancelAnimationFrame(this._frameHandle || -1);\n    this._frameHandle = undefined;\n\n    if (this._force) {\n      if (!this._values) this._inflateValues(renderState);\n      renderState.updateState(this._values!);\n    }\n  }\n}\n\nfunction getPartialValues<T>(\n  startValues: T | undefined,\n  endValues: RecursivePartial<T> | undefined,\n  progress: number,\n) {\n  const target: RecursivePartial<T> = {};\n\n  for (const key in endValues) {\n    const endValue = endValues[key];\n    const startValue = startValues?.[key];\n    if (typeof startValue === 'number' && typeof endValue === 'number' && endValue >= 0) {\n      target[key] = progress * (endValue - startValue) + startValue;\n    } else {\n      target[key] = getPartialValues(startValue, endValue, progress);\n    }\n  }\n  return target;\n}\n\nfunction isAlreadyAtEnd<T>(\n  startValues: T | undefined,\n  endValues: RecursivePartial<T> | undefined,\n) {\n  for (const key in endValues) {\n    const endValue = endValues[key];\n    const startValue = startValues?.[key];\n    if (endValue >= 0) {\n      if (endValue !== startValue) {\n        return false;\n      }\n    } else if (!isAlreadyAtEnd(startValue, endValue)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// from https://github.com/maxwellito/vivus\nconst ease = (x: number) => -Math.cos(x * Math.PI) / 2 + 0.5;\n", "import Stroke from './models/Stroke';\nimport { ColorObject, RecursivePartial } from './typings/types';\nimport Character from './models/Character';\nimport Mutation, { GenericMutation } from './Mutation';\nimport { objRepeat } from './utils';\nimport { CharacterName, CharacterRenderState, RenderStateObject } from './RenderState';\n\nexport const showStrokes = (\n  charName: CharacterName,\n  character: Character,\n  duration: number,\n): GenericMutation[] => {\n  return [\n    new Mutation(\n      `character.${charName}.strokes`,\n      objRepeat(\n        { opacity: 1, displayPortion: 1 },\n        character.strokes.length,\n      ) as CharacterRenderState['strokes'],\n      { duration, force: true },\n    ),\n  ];\n};\n\nexport const showCharacter = (\n  charName: CharacterName,\n  character: Character,\n  duration: number,\n): GenericMutation[] => {\n  return [\n    new Mutation(\n      `character.${charName}`,\n      {\n        opacity: 1,\n        strokes: objRepeat({ opacity: 1, displayPortion: 1 }, character.strokes.length),\n      },\n      { duration, force: true },\n    ),\n  ];\n};\n\nexport const hideCharacter = (\n  charName: CharacterName,\n  character: Character,\n  duration?: number,\n): GenericMutation[] => {\n  return [\n    new Mutation(`character.${charName}.opacity`, 0, { duration, force: true }),\n    ...showStrokes(charName, character, 0),\n  ];\n};\n\nexport const updateColor = (\n  colorName: string,\n  colorVal: ColorObject | null,\n  duration: number,\n) => {\n  return [new Mutation(`options.${colorName}`, colorVal, { duration })];\n};\n\nexport const highlightStroke = (\n  stroke: Stroke,\n  color: ColorObject | null,\n  speed: number,\n): GenericMutation[] => {\n  const strokeNum = stroke.strokeNum;\n  const duration = (stroke.getLength() + 600) / (3 * speed);\n  return [\n    new Mutation('options.highlightColor', color),\n    new Mutation('character.highlight', {\n      opacity: 1,\n      strokes: {\n        [strokeNum]: {\n          displayPortion: 0,\n          opacity: 0,\n        },\n      },\n    }),\n    new Mutation(\n      `character.highlight.strokes.${strokeNum}`,\n      {\n        displayPortion: 1,\n        opacity: 1,\n      },\n      { duration },\n    ),\n    new Mutation(`character.highlight.strokes.${strokeNum}.opacity`, 0, {\n      duration,\n      force: true,\n    }),\n  ];\n};\n\nexport const animateStroke = (\n  charName: CharacterName,\n  stroke: Stroke,\n  speed: number,\n): GenericMutation[] => {\n  const strokeNum = stroke.strokeNum;\n  const duration = (stroke.getLength() + 600) / (3 * speed);\n  return [\n    new Mutation(`character.${charName}`, {\n      opacity: 1,\n      strokes: {\n        [strokeNum]: {\n          displayPortion: 0,\n          opacity: 1,\n        },\n      },\n    }),\n    new Mutation(`character.${charName}.strokes.${strokeNum}.displayPortion`, 1, {\n      duration,\n    }),\n  ];\n};\n\nexport const animateSingleStroke = (\n  charName: CharacterName,\n  character: Character,\n  strokeNum: number,\n  speed: number,\n): GenericMutation[] => {\n  const mutationStateFunc = (state: RenderStateObject) => {\n    const curCharState = state.character[charName];\n    const mutationState: RecursivePartial<CharacterRenderState> = {\n      opacity: 1,\n      strokes: {},\n    };\n    for (let i = 0; i < character.strokes.length; i++) {\n      mutationState.strokes![i] = {\n        opacity: curCharState.opacity * curCharState.strokes[i].opacity,\n      };\n    }\n    return mutationState;\n  };\n  const stroke = character.strokes[strokeNum];\n  return [\n    new Mutation(`character.${charName}`, mutationStateFunc),\n    ...animateStroke(charName, stroke, speed),\n  ];\n};\n\nexport const showStroke = (\n  charName: CharacterName,\n  strokeNum: number,\n  duration: number,\n): GenericMutation[] => {\n  return [\n    new Mutation(\n      `character.${charName}.strokes.${strokeNum}`,\n      {\n        displayPortion: 1,\n        opacity: 1,\n      },\n      { duration, force: true },\n    ),\n  ];\n};\n\nexport const animateCharacter = (\n  charName: CharacterName,\n  character: Character,\n  fadeDuration: number,\n  speed: number,\n  delayBetweenStrokes: number,\n): GenericMutation[] => {\n  let mutations: GenericMutation[] = hideCharacter(charName, character, fadeDuration);\n  mutations = mutations.concat(showStrokes(charName, character, 0));\n  mutations.push(\n    new Mutation(\n      `character.${charName}`,\n      {\n        opacity: 1,\n        strokes: objRepeat({ opacity: 0 }, character.strokes.length),\n      },\n      { force: true },\n    ),\n  );\n  character.strokes.forEach((stroke, i) => {\n    if (i > 0) mutations.push(new Mutation.Delay(delayBetweenStrokes));\n    mutations = mutations.concat(animateStroke(charName, stroke, speed));\n  });\n  return mutations;\n};\n\nexport const animateCharacterLoop = (\n  charName: CharacterName,\n  character: Character,\n  fadeDuration: number,\n  speed: number,\n  delayBetweenStrokes: number,\n  delayBetweenLoops: number,\n): GenericMutation[] => {\n  const mutations = animateCharacter(\n    charName,\n    character,\n    fadeDuration,\n    speed,\n    delayBetweenStrokes,\n  );\n  mutations.push(new Mutation.Delay(delayBetweenLoops));\n  return mutations;\n};\n", "import Mutation, { GenericMutation } from './Mutation';\nimport * as characterActions from './characterActions';\nimport { objRepeat, objRepeatCb } from './utils';\nimport Character from './models/Character';\nimport { ColorObject, Point } from './typings/types';\n\nexport const startQuiz = (\n  character: Character,\n  fadeDuration: number,\n  startStrokeNum: number,\n): GenericMutation[] => {\n  return [\n    ...characterActions.hideCharacter('main', character, fadeDuration),\n    new Mutation(\n      'character.highlight',\n      {\n        opacity: 1,\n        strokes: objRepeat({ opacity: 0 }, character.strokes.length),\n      },\n      { force: true },\n    ),\n    new Mutation(\n      'character.main',\n      {\n        opacity: 1,\n        strokes: objRepeatCb(character.strokes.length, (i) => ({\n          opacity: i < startStrokeNum ? 1 : 0,\n        })),\n      },\n      { force: true },\n    ),\n  ];\n};\n\nexport const startUserStroke = (id: string | number, point: Point): GenericMutation[] => {\n  return [\n    new Mutation('quiz.activeUserStrokeId', id, { force: true }),\n    new Mutation(\n      `userStrokes.${id}`,\n      {\n        points: [point],\n        opacity: 1,\n      },\n      { force: true },\n    ),\n  ];\n};\n\nexport const updateUserStroke = (\n  userStrokeId: string | number,\n  points: Point[],\n): GenericMutation[] => {\n  return [new Mutation(`userStrokes.${userStrokeId}.points`, points, { force: true })];\n};\n\nexport const removeUserStroke = (\n  userStrokeId: string | number,\n  duration: number,\n): GenericMutation[] => {\n  return [\n    new Mutation(`userStrokes.${userStrokeId}.opacity`, 0, { duration }),\n    new Mutation(`userStrokes.${userStrokeId}`, null, { force: true }),\n  ];\n};\n\nexport const highlightCompleteChar = (\n  character: Character,\n  color: ColorObject | null,\n  duration: number,\n): GenericMutation[] => {\n  return [\n    new Mutation('options.highlightColor', color),\n    ...characterActions.hideCharacter('highlight', character),\n    ...characterActions.showCharacter('highlight', character, duration / 2),\n    ...characterActions.hideCharacter('highlight', character, duration / 2),\n  ];\n};\n\nexport const highlightStroke = characterActions.highlightStroke;\n", "import strokeMatches, { StrokeMatchResultMeta } from './strokeMatches';\nimport UserStroke from './models/UserStroke';\nimport Positioner from './Positioner';\nimport { counter, colorStringToVals, fixIndex } from './utils';\nimport * as quizActions from './quizActions';\nimport * as geometry from './geometry';\nimport * as characterActions from './characterActions';\nimport Character from './models/Character';\nimport { ParsedHanziWriterOptions, Point, StrokeData } from './typings/types';\nimport RenderState from './RenderState';\nimport { GenericMutation } from './Mutation';\n\nconst getDrawnPath = (userStroke: UserStroke) => ({\n  pathString: geometry.getPathString(userStroke.externalPoints),\n  points: userStroke.points.map((point) => geometry.round(point)),\n});\n\nexport default class Quiz {\n  _character: Character;\n  _renderState: RenderState;\n  _isActive: boolean;\n  _positioner: Positioner;\n\n  /** Set on startQuiz */\n  _options: ParsedHanziWriterOptions | undefined;\n  _currentStrokeIndex = 0;\n  _mistakesOnStroke = 0;\n  _totalMistakes = 0;\n  _userStroke: UserStroke | undefined;\n\n  constructor(character: Character, renderState: RenderState, positioner: Positioner) {\n    this._character = character;\n    this._renderState = renderState;\n    this._isActive = false;\n    this._positioner = positioner;\n  }\n\n  startQuiz(options: ParsedHanziWriterOptions) {\n    this._isActive = true;\n    this._options = options;\n    const startIndex = fixIndex(\n      options.quizStartStrokeNum,\n      this._character.strokes.length,\n    );\n    this._currentStrokeIndex = Math.min(startIndex, this._character.strokes.length - 1);\n    this._mistakesOnStroke = 0;\n    this._totalMistakes = 0;\n\n    return this._renderState.run(\n      quizActions.startQuiz(\n        this._character,\n        options.strokeFadeDuration,\n        this._currentStrokeIndex,\n      ),\n    );\n  }\n\n  startUserStroke(externalPoint: Point) {\n    if (!this._isActive) {\n      return null;\n    }\n    if (this._userStroke) {\n      return this.endUserStroke();\n    }\n    const point = this._positioner.convertExternalPoint(externalPoint);\n    const strokeId = counter();\n    this._userStroke = new UserStroke(strokeId, point, externalPoint);\n    return this._renderState.run(quizActions.startUserStroke(strokeId, point));\n  }\n\n  continueUserStroke(externalPoint: Point) {\n    if (!this._userStroke) {\n      return Promise.resolve();\n    }\n    const point = this._positioner.convertExternalPoint(externalPoint);\n    this._userStroke.appendPoint(point, externalPoint);\n    const nextPoints = this._userStroke.points.slice(0);\n    return this._renderState.run(\n      quizActions.updateUserStroke(this._userStroke.id, nextPoints),\n    );\n  }\n\n  setPositioner(positioner: Positioner) {\n    this._positioner = positioner;\n  }\n\n  endUserStroke() {\n    if (!this._userStroke) return;\n\n    this._renderState.run(\n      quizActions.removeUserStroke(\n        this._userStroke.id,\n        this._options!.drawingFadeDuration ?? 300,\n      ),\n    );\n\n    // skip single-point strokes\n    if (this._userStroke.points.length === 1) {\n      this._userStroke = undefined;\n      return;\n    }\n\n    const { acceptBackwardsStrokes, markStrokeCorrectAfterMisses } = this._options!;\n\n    const currentStroke = this._getCurrentStroke();\n    const { isMatch, meta } = strokeMatches(\n      this._userStroke,\n      this._character,\n      this._currentStrokeIndex,\n      {\n        isOutlineVisible: this._renderState.state.character.outline.opacity > 0,\n        leniency: this._options!.leniency,\n        averageDistanceThreshold: this._options!.averageDistanceThreshold,\n      },\n    );\n\n    // if markStrokeCorrectAfterMisses is passed, just force the stroke to count as correct after n tries\n    const isForceAccepted =\n      markStrokeCorrectAfterMisses &&\n      this._mistakesOnStroke + 1 >= markStrokeCorrectAfterMisses;\n\n    const isAccepted =\n      isMatch || isForceAccepted || (meta.isStrokeBackwards && acceptBackwardsStrokes);\n\n    if (isAccepted) {\n      this._handleSuccess(meta);\n    } else {\n      this._handleFailure(meta);\n\n      const {\n        showHintAfterMisses,\n        highlightColor,\n        strokeHighlightSpeed,\n      } = this._options!;\n\n      if (\n        showHintAfterMisses !== false &&\n        this._mistakesOnStroke >= showHintAfterMisses\n      ) {\n        this._renderState.run(\n          characterActions.highlightStroke(\n            currentStroke,\n            colorStringToVals(highlightColor),\n            strokeHighlightSpeed,\n          ),\n        );\n      }\n    }\n\n    this._userStroke = undefined;\n  }\n\n  cancel() {\n    this._isActive = false;\n    if (this._userStroke) {\n      this._renderState.run(\n        quizActions.removeUserStroke(\n          this._userStroke.id,\n          this._options!.drawingFadeDuration,\n        ),\n      );\n    }\n  }\n\n  _getStrokeData({\n    isCorrect,\n    meta,\n  }: {\n    isCorrect: boolean;\n    meta: StrokeMatchResultMeta;\n  }): StrokeData {\n    return {\n      character: this._character.symbol,\n      strokeNum: this._currentStrokeIndex,\n      mistakesOnStroke: this._mistakesOnStroke,\n      totalMistakes: this._totalMistakes,\n      strokesRemaining:\n        this._character.strokes.length - this._currentStrokeIndex - (isCorrect ? 1 : 0),\n      drawnPath: getDrawnPath(this._userStroke!),\n      isBackwards: meta.isStrokeBackwards,\n    };\n  }\n\n  nextStroke() {\n    if (!this._options) return;\n\n    const { strokes, symbol } = this._character;\n\n    const {\n      onComplete,\n      highlightOnComplete,\n      strokeFadeDuration,\n      highlightCompleteColor,\n      highlightColor,\n      strokeHighlightDuration,\n    } = this._options;\n\n    let animation: GenericMutation[] = characterActions.showStroke(\n      'main',\n      this._currentStrokeIndex,\n      strokeFadeDuration,\n    );\n\n    this._mistakesOnStroke = 0;\n    this._currentStrokeIndex += 1;\n\n    const isComplete = this._currentStrokeIndex === strokes.length;\n\n    if (isComplete) {\n      this._isActive = false;\n      onComplete?.({\n        character: symbol,\n        totalMistakes: this._totalMistakes,\n      });\n      if (highlightOnComplete) {\n        animation = animation.concat(\n          quizActions.highlightCompleteChar(\n            this._character,\n            colorStringToVals(highlightCompleteColor || highlightColor),\n            (strokeHighlightDuration || 0) * 2,\n          ),\n        );\n      }\n    }\n\n    this._renderState.run(animation);\n  }\n\n  _handleSuccess(meta: StrokeMatchResultMeta) {\n    if (!this._options) return;\n\n    const { onCorrectStroke } = this._options;\n\n    onCorrectStroke?.({\n      ...this._getStrokeData({ isCorrect: true, meta }),\n    });\n\n    this.nextStroke();\n  }\n\n  _handleFailure(meta: StrokeMatchResultMeta) {\n    this._mistakesOnStroke += 1;\n    this._totalMistakes += 1;\n    this._options!.onMistake?.(this._getStrokeData({ isCorrect: false, meta }));\n  }\n\n  _getCurrentStroke() {\n    return this._character.strokes[this._currentStrokeIndex];\n  }\n}\n", "export function createElm(elmType: string) {\n  return document.createElementNS('http://www.w3.org/2000/svg', elmType);\n}\n\nexport function attr(elm: Element, name: string, value: string) {\n  elm.setAttributeNS(null, name, value);\n}\n\nexport function attrs(elm: Element, attrsMap: Record<string, string>) {\n  Object.keys(attrsMap).forEach((attrName) => attr(elm, attrName, attrsMap[attrName]));\n}\n\n// inspired by https://talk.observablehq.com/t/hanzi-writer-renders-incorrectly-inside-an-observable-notebook-on-a-mobile-browser/1898\nexport function urlIdRef(id: string) {\n  let prefix = '';\n  if (window.location && window.location.href) {\n    prefix = window.location.href.replace(/#[^#]*$/, '').replace(/\"/gi, '%22');\n  }\n  return `url(\"${prefix}#${id}\")`;\n}\n\nexport function removeElm(elm: Element | undefined) {\n  elm?.parentNode?.removeChild(elm);\n}\n", "import Stroke from '../models/Stroke';\nimport { ColorObject } from '../typings/types';\n\nexport default class StrokeRendererBase {\n  _pathLength: number;\n  stroke: Stroke;\n  static STROKE_WIDTH = 200;\n\n  constructor(stroke: Stroke) {\n    this.stroke = stroke;\n    this._pathLength = stroke.getLength() + StrokeRendererBase.STROKE_WIDTH / 2;\n  }\n\n  _getStrokeDashoffset(displayPortion: number) {\n    return this._pathLength * 0.999 * (1 - displayPortion);\n  }\n\n  _getColor({\n    strokeColor,\n    radicalColor,\n  }: {\n    strokeColor: ColorObject;\n    radicalColor?: ColorObject | null;\n  }) {\n    return radicalColor && this.stroke.isInRadical ? radicalColor : strokeColor;\n  }\n}\n", "import { counter } from '../../utils';\nimport * as svg from './svgUtils';\nimport { extendStart, getPathString } from '../../geometry';\nimport StrokeRendererBase from '../StrokeRendererBase';\nimport Stroke from '../../models/Stroke';\nimport SVGRenderTarget from './RenderTarget';\nimport { ColorObject } from '../../typings/types';\n\nconst STROKE_WIDTH = 200;\n\ntype StrokeRenderProps = {\n  strokeColor: ColorObject;\n  radicalColor: ColorObject | null;\n  displayPortion: number;\n  opacity: number;\n};\n\n/** This is a stroke composed of several stroke parts **/\nexport default class StrokeRenderer extends StrokeRendererBase {\n  _oldProps: StrokeRenderProps | undefined = undefined;\n\n  _animationPath: SVGPathElement | undefined;\n  _clip: SVGClipPathElement | undefined;\n  _strokePath: SVGPathElement | undefined;\n\n  constructor(stroke: Stroke) {\n    super(stroke);\n  }\n\n  mount(target: SVGRenderTarget) {\n    this._animationPath = svg.createElm('path') as SVGPathElement;\n    this._clip = svg.createElm('clipPath') as SVGClipPathElement;\n    this._strokePath = svg.createElm('path') as SVGPathElement;\n    const maskId = `mask-${counter()}`;\n    svg.attr(this._clip, 'id', maskId);\n\n    svg.attr(this._strokePath, 'd', this.stroke.path);\n    this._animationPath.style.opacity = '0';\n    svg.attr(this._animationPath, 'clip-path', svg.urlIdRef(maskId));\n\n    const extendedMaskPoints = extendStart(this.stroke.points, STROKE_WIDTH / 2);\n    svg.attr(this._animationPath, 'd', getPathString(extendedMaskPoints));\n    svg.attrs(this._animationPath, {\n      stroke: '#FFFFFF',\n      'stroke-width': STROKE_WIDTH.toString(),\n      fill: 'none',\n      'stroke-linecap': 'round',\n      'stroke-linejoin': 'miter',\n      'stroke-dasharray': `${this._pathLength},${this._pathLength}`,\n    });\n\n    this._clip.appendChild(this._strokePath);\n    target.defs.appendChild(this._clip);\n    target.svg.appendChild(this._animationPath);\n    return this;\n  }\n\n  render(props: StrokeRenderProps) {\n    if (props === this._oldProps || !this._animationPath) {\n      return;\n    }\n\n    if (props.displayPortion !== this._oldProps?.displayPortion) {\n      this._animationPath.style.strokeDashoffset = this._getStrokeDashoffset(\n        props.displayPortion,\n      ).toString();\n    }\n\n    const color = this._getColor(props);\n\n    if (!this._oldProps || color !== this._getColor(this._oldProps)) {\n      const { r, g, b, a } = color;\n      svg.attrs(this._animationPath, { stroke: `rgba(${r},${g},${b},${a})` });\n    }\n\n    if (props.opacity !== this._oldProps?.opacity) {\n      this._animationPath.style.opacity = props.opacity.toString();\n    }\n    this._oldProps = props;\n  }\n}\n", "import { isMsBrowser } from '../../utils';\nimport StrokeRenderer from './StrokeRenderer';\nimport SVGRenderTarget from './RenderTarget';\nimport Character from '../../models/Character';\nimport { ColorObject } from '../../typings/types';\nimport { StrokeRenderState } from '../../RenderState';\n\ntype SvgCharacterRenderProps = {\n  opacity: number;\n  strokes: Record<number, StrokeRenderState>;\n  strokeColor: ColorObject;\n  radicalColor?: ColorObject | null;\n};\n\nexport default class CharacterRenderer {\n  _oldProps: SvgCharacterRenderProps | undefined = undefined;\n  _strokeRenderers: StrokeRenderer[];\n\n  // set on mount()\n  _group: SVGElement | SVGSVGElement | undefined;\n\n  constructor(character: Character) {\n    this._strokeRenderers = character.strokes.map((stroke) => new StrokeRenderer(stroke));\n  }\n\n  mount(target: SVGRenderTarget) {\n    const subTarget = target.createSubRenderTarget();\n    this._group = subTarget.svg;\n    this._strokeRenderers.forEach((strokeRenderer) => {\n      strokeRenderer.mount(subTarget);\n    });\n  }\n\n  render(props: SvgCharacterRenderProps) {\n    if (props === this._oldProps || !this._group) {\n      return;\n    }\n    const { opacity, strokes, strokeColor, radicalColor = null } = props;\n    if (opacity !== this._oldProps?.opacity) {\n      this._group.style.opacity = opacity.toString();\n      // MS browsers seem to have a bug where if SVG is set to display:none, it sometimes breaks.\n      // More info: https://github.com/chanind/hanzi-writer/issues/164\n      // this is just a perf improvement, so disable for MS browsers\n      if (!isMsBrowser) {\n        if (opacity === 0) {\n          this._group.style.display = 'none';\n        } else if (this._oldProps?.opacity === 0) {\n          this._group.style.removeProperty('display');\n        }\n      }\n    }\n    const colorsChanged =\n      !this._oldProps ||\n      strokeColor !== this._oldProps.strokeColor ||\n      radicalColor !== this._oldProps.radicalColor;\n\n    if (colorsChanged || strokes !== this._oldProps?.strokes) {\n      for (let i = 0; i < this._strokeRenderers.length; i++) {\n        if (\n          !colorsChanged &&\n          this._oldProps?.strokes &&\n          strokes[i] === this._oldProps.strokes[i]\n        ) {\n          continue;\n        }\n        this._strokeRenderers[i].render({\n          strokeColor,\n          radicalColor,\n          opacity: strokes[i].opacity,\n          displayPortion: strokes[i].displayPortion,\n        });\n      }\n    }\n    this._oldProps = props;\n  }\n}\n", "import * as svg from './svgUtils';\nimport { getPathString } from '../../geometry';\nimport { ColorObject, Point } from '../../typings/types';\nimport SVGRenderTarget from './RenderTarget';\n\nexport type UserStrokeProps = {\n  strokeWidth: number;\n  strokeColor: ColorObject;\n  opacity: number;\n  points: Point[];\n};\n\nexport default class UserStrokeRenderer {\n  _oldProps: UserStrokeProps | undefined = undefined;\n  _path: SVGElement | undefined;\n\n  mount(target: SVGRenderTarget) {\n    this._path = svg.createElm('path');\n    target.svg.appendChild(this._path);\n  }\n\n  render(props: UserStrokeProps) {\n    if (!this._path || props === this._oldProps) {\n      return;\n    }\n    if (\n      props.strokeColor !== this._oldProps?.strokeColor ||\n      props.strokeWidth !== this._oldProps?.strokeWidth\n    ) {\n      const { r, g, b, a } = props.strokeColor;\n      svg.attrs(this._path, {\n        fill: 'none',\n        stroke: `rgba(${r},${g},${b},${a})`,\n        'stroke-width': props.strokeWidth.toString(),\n        'stroke-linecap': 'round',\n        'stroke-linejoin': 'round',\n      });\n    }\n    if (props.opacity !== this._oldProps?.opacity) {\n      svg.attr(this._path, 'opacity', props.opacity.toString());\n    }\n    if (props.points !== this._oldProps?.points) {\n      svg.attr(this._path, 'd', getPathString(props.points));\n    }\n    this._oldProps = props;\n  }\n\n  destroy() {\n    svg.removeElm(this._path);\n  }\n}\n", "import CharacterRenderer from './CharacterRenderer';\nimport UserStrokeRenderer, { UserStrokeProps } from './UserStrokeRenderer';\nimport * as svg from './svgUtils';\nimport Character from '../../models/Character';\nimport Positioner from '../../Positioner';\nimport SVGRenderTarget from './RenderTarget';\nimport HanziWriterRendererBase from '../HanziWriterRendererBase';\nimport { RenderStateObject } from '../../RenderState';\n\nexport default class HanziWriterRenderer\n  implements HanziWriterRendererBase<SVGElement | SVGSVGElement, SVGRenderTarget> {\n  _character: Character;\n  _positioner: Positioner;\n  _mainCharRenderer: CharacterRenderer;\n  _outlineCharRenderer: CharacterRenderer;\n  _highlightCharRenderer: CharacterRenderer;\n  _userStrokeRenderers: Record<string, UserStrokeRenderer | undefined>;\n  _positionedTarget: SVGRenderTarget | undefined;\n\n  constructor(character: Character, positioner: Positioner) {\n    this._character = character;\n    this._positioner = positioner;\n    this._mainCharRenderer = new CharacterRenderer(character);\n    this._outlineCharRenderer = new CharacterRenderer(character);\n    this._highlightCharRenderer = new CharacterRenderer(character);\n    this._userStrokeRenderers = {};\n  }\n\n  mount(target: SVGRenderTarget) {\n    const positionedTarget = target.createSubRenderTarget();\n    const group = positionedTarget.svg;\n    const { xOffset, yOffset, height, scale } = this._positioner;\n\n    svg.attr(\n      group,\n      'transform',\n      `translate(${xOffset}, ${height - yOffset}) scale(${scale}, ${-1 * scale})`,\n    );\n    this._outlineCharRenderer.mount(positionedTarget);\n    this._mainCharRenderer.mount(positionedTarget);\n    this._highlightCharRenderer.mount(positionedTarget);\n    this._positionedTarget = positionedTarget;\n  }\n\n  render(props: RenderStateObject) {\n    const { main, outline, highlight } = props.character;\n    const {\n      outlineColor,\n      radicalColor,\n      highlightColor,\n      strokeColor,\n      drawingWidth,\n      drawingColor,\n    } = props.options;\n\n    this._outlineCharRenderer.render({\n      opacity: outline.opacity,\n      strokes: outline.strokes,\n      strokeColor: outlineColor,\n    });\n\n    this._mainCharRenderer.render({\n      opacity: main.opacity,\n      strokes: main.strokes,\n      strokeColor,\n      radicalColor: radicalColor,\n    });\n\n    this._highlightCharRenderer.render({\n      opacity: highlight.opacity,\n      strokes: highlight.strokes,\n      strokeColor: highlightColor,\n    });\n\n    const userStrokes = props.userStrokes || {};\n\n    for (const userStrokeId in this._userStrokeRenderers) {\n      if (!userStrokes[userStrokeId]) {\n        this._userStrokeRenderers[userStrokeId]?.destroy();\n        delete this._userStrokeRenderers[userStrokeId];\n      }\n    }\n\n    for (const userStrokeId in userStrokes) {\n      const stroke = userStrokes[userStrokeId];\n      if (!stroke) {\n        continue;\n      }\n      const userStrokeProps: UserStrokeProps = {\n        strokeWidth: drawingWidth,\n        strokeColor: drawingColor,\n        ...stroke,\n      };\n\n      const strokeRenderer = (() => {\n        if (this._userStrokeRenderers[userStrokeId]) {\n          return this._userStrokeRenderers[userStrokeId]!;\n        }\n        const newStrokeRenderer = new UserStrokeRenderer();\n        newStrokeRenderer.mount(this._positionedTarget!);\n        this._userStrokeRenderers[userStrokeId] = newStrokeRenderer;\n        return newStrokeRenderer;\n      })();\n\n      strokeRenderer.render(userStrokeProps);\n    }\n  }\n\n  destroy() {\n    svg.removeElm(this._positionedTarget!.svg);\n    this._positionedTarget!.defs.innerHTML = '';\n  }\n}\n", "import { Point } from '../typings/types';\n\ntype BoundEvent = {\n  getPoint(): Point;\n  preventDefault(): void;\n};\n\n/** Generic render target */\nexport default class RenderTargetBase<\n  TElement extends\n    | HTMLElement\n    | SVGElement\n    | SVGSVGElement\n    | HTMLCanvasElement = HTMLElement\n> {\n  node: TElement;\n\n  constructor(node: TElement) {\n    this.node = node;\n  }\n\n  addPointerStartListener(callback: (arg: BoundEvent) => void) {\n    this.node.addEventListener('mousedown', (evt) => {\n      callback(this._eventify(evt as MouseEvent, this._getMousePoint));\n    });\n    this.node.addEventListener('touchstart', (evt) => {\n      callback(this._eventify(evt as TouchEvent, this._getTouchPoint));\n    });\n  }\n\n  addPointerMoveListener(callback: (arg: BoundEvent) => void) {\n    this.node.addEventListener('mousemove', (evt) => {\n      callback(this._eventify(evt as MouseEvent, this._getMousePoint));\n    });\n    this.node.addEventListener('touchmove', (evt) => {\n      callback(this._eventify(evt as TouchEvent, this._getTouchPoint));\n    });\n  }\n\n  addPointerEndListener(callback: () => void) {\n    // TODO: find a way to not need global listeners\n    document.addEventListener('mouseup', callback);\n    document.addEventListener('touchend', callback);\n  }\n\n  getBoundingClientRect() {\n    return this.node.getBoundingClientRect();\n  }\n\n  updateDimensions(width: string | number, height: string | number) {\n    this.node.setAttribute('width', `${width}`);\n    this.node.setAttribute('height', `${height}`);\n  }\n\n  _eventify<TEvent extends Event>(evt: TEvent, pointFunc: (event: TEvent) => Point) {\n    return {\n      getPoint: () => pointFunc.call(this, evt),\n      preventDefault: () => evt.preventDefault(),\n    };\n  }\n\n  _getMousePoint(evt: MouseEvent): Point {\n    const { left, top } = this.getBoundingClientRect();\n    const x = evt.clientX - left;\n    const y = evt.clientY - top;\n    return { x, y };\n  }\n\n  _getTouchPoint(evt: TouchEvent): Point {\n    const { left, top } = this.getBoundingClientRect();\n    const x = evt.touches[0].clientX - left;\n    const y = evt.touches[0].clientY - top;\n    return { x, y };\n  }\n}\n", "import { createElm, attrs } from './svgUtils';\nimport RenderTargetBase from '../RenderTargetBase';\n\nexport default class RenderTarget extends RenderTargetBase<SVGSVGElement | SVGElement> {\n  static init(elmOrId: Element | string, width = '100%', height = '100%') {\n    const element = (() => {\n      if (typeof elmOrId === 'string') {\n        return document.getElementById(elmOrId);\n      }\n      return elmOrId;\n    })();\n\n    if (!element) {\n      throw new Error(`HanziWriter target element not found: ${elmOrId}`);\n    }\n    const nodeType = element.nodeName.toUpperCase();\n\n    const svg = (() => {\n      if (nodeType === 'SVG' || nodeType === 'G') {\n        return element;\n      } else {\n        const svg = createElm('svg');\n        element.appendChild(svg);\n        return svg;\n      }\n    })() as SVGSVGElement;\n\n    attrs(svg, { width, height });\n    const defs = createElm('defs');\n    svg.appendChild(defs);\n\n    return new RenderTarget(svg, defs);\n  }\n\n  svg: SVGSVGElement | SVGElement;\n  defs: SVGElement;\n  _pt: DOMPoint | undefined;\n\n  constructor(svg: SVGElement | SVGSVGElement, defs: SVGElement) {\n    super(svg);\n\n    this.svg = svg;\n    this.defs = defs;\n\n    if ('createSVGPoint' in svg) {\n      this._pt = svg.createSVGPoint();\n    }\n  }\n\n  createSubRenderTarget() {\n    const group = createElm('g');\n    this.svg.appendChild(group);\n    return new RenderTarget(group, this.defs);\n  }\n\n  _getMousePoint(evt: MouseEvent) {\n    if (this._pt) {\n      this._pt.x = evt.clientX;\n      this._pt.y = evt.clientY;\n      if ('getScreenCTM' in this.node) {\n        const localPt = this._pt.matrixTransform(this.node.getScreenCTM()?.inverse());\n        return { x: localPt.x, y: localPt.y };\n      }\n    }\n    return super._getMousePoint.call(this, evt);\n  }\n\n  _getTouchPoint(evt: TouchEvent) {\n    if (this._pt) {\n      this._pt.x = evt.touches[0].clientX;\n      this._pt.y = evt.touches[0].clientY;\n      if ('getScreenCTM' in this.node) {\n        const localPt = this._pt.matrixTransform(\n          (this.node as SVGSVGElement).getScreenCTM()?.inverse(),\n        );\n        return { x: localPt.x, y: localPt.y };\n      }\n    }\n    return super._getTouchPoint(evt);\n  }\n}\n", "import { RenderTargetInitFunction } from '../../typings/types';\nimport HanziWriterRenderer from './HanziWriterRenderer';\nimport RenderTarget from './RenderTarget';\n\nexport default {\n  HanziWriterRenderer,\n  createRenderTarget: RenderTarget.init as RenderTargetInitFunction<\n    SVGSVGElement | SVGElement\n  >,\n};\n", "import { Point } from '../../typings/types';\n\nexport const drawPath = (ctx: CanvasRenderingContext2D, points: Point[]) => {\n  ctx.beginPath();\n  const start = points[0];\n  const remainingPoints = points.slice(1);\n  ctx.moveTo(start.x, start.y);\n  for (const point of remainingPoints) {\n    ctx.lineTo(point.x, point.y);\n  }\n  ctx.stroke();\n};\n\n/**\n * Break a path string into a series of canvas path commands\n *\n * Note: only works with the subset of SVG paths used by MakeMeAHanzi data\n * @param pathString\n */\nexport const pathStringToCanvas = (pathString: string) => {\n  const pathParts = pathString.split(/(^|\\s+)(?=[A-Z])/).filter((part) => part !== ' ');\n  const commands = [(ctx: CanvasRenderingContext2D) => ctx.beginPath()];\n  for (const part of pathParts) {\n    const [cmd, ...rawParams] = part.split(/\\s+/);\n    const params = rawParams.map((param) => parseFloat(param)) as any[];\n    if (cmd === 'M') {\n      commands.push((ctx) => ctx.moveTo(...(params as [number, number])));\n    } else if (cmd === 'L') {\n      commands.push((ctx) => ctx.lineTo(...(params as [number, number])));\n    } else if (cmd === 'C') {\n      commands.push((ctx) =>\n        ctx.bezierCurveTo(...(params as Parameters<typeof ctx.bezierCurveTo>)),\n      );\n    } else if (cmd === 'Q') {\n      commands.push((ctx) =>\n        ctx.quadraticCurveTo(...(params as Parameters<typeof ctx.quadraticCurveTo>)),\n      );\n    } else if (cmd === 'Z') {\n      // commands.push((ctx) => ctx.closePath());\n    }\n  }\n  return (ctx: CanvasRenderingContext2D) => commands.forEach((cmd) => cmd(ctx));\n};\n", "import { extendStart } from '../../geometry';\nimport { drawPath, pathStringToCanvas } from './canvasUtils';\nimport StrokeRendererBase from '../StrokeRendererBase';\nimport Stroke from '../../models/Stroke';\nimport { ColorObject, Point } from '../../typings/types';\n\n/** this is a stroke composed of several stroke parts */\nexport default class StrokeRenderer extends StrokeRendererBase {\n  _extendedMaskPoints: Point[];\n\n  // Conditionally set on constructor\n  _path2D: Path2D | undefined;\n  _pathCmd: ((ctx: CanvasRenderingContext2D) => void) | undefined;\n\n  constructor(stroke: Stroke, usePath2D = true) {\n    super(stroke);\n\n    if (usePath2D && Path2D) {\n      this._path2D = new Path2D(this.stroke.path);\n    } else {\n      this._pathCmd = pathStringToCanvas(this.stroke.path);\n    }\n    this._extendedMaskPoints = extendStart(\n      this.stroke.points,\n      StrokeRendererBase.STROKE_WIDTH / 2,\n    );\n  }\n\n  render(\n    ctx: CanvasRenderingContext2D,\n    props: {\n      opacity: number;\n      strokeColor: ColorObject;\n      radicalColor?: ColorObject | null;\n      displayPortion: number;\n    },\n  ) {\n    if (props.opacity < 0.05) {\n      return;\n    }\n    ctx.save();\n\n    if (this._path2D) {\n      ctx.clip(this._path2D);\n    } else {\n      this._pathCmd?.(ctx);\n      // wechat bugs out if the clip path isn't stroked or filled\n      ctx.globalAlpha = 0;\n      ctx.stroke();\n      ctx.clip();\n    }\n\n    const { r, g, b, a } = this._getColor(props);\n    const color = a === 1 ? `rgb(${r},${g},${b})` : `rgb(${r},${g},${b},${a})`;\n    const dashOffset = this._getStrokeDashoffset(props.displayPortion);\n    ctx.globalAlpha = props.opacity;\n    ctx.strokeStyle = color;\n    ctx.fillStyle = color;\n    ctx.lineWidth = StrokeRendererBase.STROKE_WIDTH;\n    ctx.lineCap = 'round';\n    ctx.lineJoin = 'round';\n    // wechat sets dashOffset as a second param here. Should be harmless for browsers to add here too\n    // @ts-ignore\n    ctx.setLineDash([this._pathLength, this._pathLength], dashOffset);\n    ctx.lineDashOffset = dashOffset;\n    drawPath(ctx, this._extendedMaskPoints);\n\n    ctx.restore();\n  }\n}\n", "import Character from '../../models/Character';\nimport { StrokeRenderState } from '../../RenderState';\nimport { ColorObject } from '../../typings/types';\nimport StrokeRenderer from './StrokeRenderer';\n\nexport default class CharacterRenderer {\n  _strokeRenderers: StrokeRenderer[];\n\n  constructor(character: Character) {\n    this._strokeRenderers = character.strokes.map((stroke) => new StrokeRenderer(stroke));\n  }\n\n  render(\n    ctx: CanvasRenderingContext2D,\n    props: {\n      opacity: number;\n      strokes: Record<number, StrokeRenderState>;\n      strokeColor: ColorObject;\n      radicalColor?: ColorObject | null;\n    },\n  ) {\n    if (props.opacity < 0.05) return;\n\n    const { opacity, strokeColor, radicalColor, strokes } = props;\n\n    for (let i = 0; i < this._strokeRenderers.length; i++) {\n      this._strokeRenderers[i].render(ctx, {\n        strokeColor,\n        radicalColor,\n        opacity: strokes[i].opacity * opacity,\n        displayPortion: strokes[i].displayPortion || 0,\n      });\n    }\n  }\n}\n", "import { ColorObject, Point } from '../../typings/types';\nimport { drawPath } from './canvasUtils';\n\nexport default function renderUserStroke(\n  ctx: CanvasRenderingContext2D,\n  props: {\n    opacity: number;\n    strokeWidth: number;\n    strokeColor: ColorObject;\n    points: Point[];\n  },\n) {\n  if (props.opacity < 0.05) {\n    return;\n  }\n  const { opacity, strokeWidth, strokeColor, points } = props;\n  const { r, g, b, a } = strokeColor;\n\n  ctx.save();\n  ctx.globalAlpha = opacity;\n  ctx.lineWidth = strokeWidth;\n  ctx.strokeStyle = `rgba(${r},${g},${b},${a})`;\n  ctx.lineCap = 'round';\n  ctx.lineJoin = 'round';\n  drawPath(ctx, points);\n  ctx.restore();\n}\n", "import Character from '../../models/Character';\nimport Positioner from '../../Positioner';\nimport HanziWriterRendererBase from '../HanziWriterRendererBase';\nimport CanvasRenderTarget from '../canvas/RenderTarget';\nimport CharacterRenderer from './CharacterRenderer';\nimport renderUserStroke from './renderUserStroke';\nimport { RenderStateObject } from '../../RenderState';\nimport { noop } from '../../utils';\n\nexport default class HanziWriterRenderer\n  implements HanziWriterRendererBase<HTMLCanvasElement, CanvasRenderTarget> {\n  _character: Character;\n  _positioner: Positioner;\n  _mainCharRenderer: CharacterRenderer;\n  _outlineCharRenderer: CharacterRenderer;\n  _highlightCharRenderer: CharacterRenderer;\n  _target: CanvasRenderTarget | undefined;\n\n  constructor(character: Character, positioner: Positioner) {\n    this._character = character;\n    this._positioner = positioner;\n    this._mainCharRenderer = new CharacterRenderer(character);\n    this._outlineCharRenderer = new CharacterRenderer(character);\n    this._highlightCharRenderer = new CharacterRenderer(character);\n  }\n\n  mount(target: CanvasRenderTarget) {\n    this._target = target;\n  }\n\n  destroy = noop;\n\n  _animationFrame(cb: (ctx: CanvasRenderingContext2D) => void) {\n    const { width, height, scale, xOffset, yOffset } = this._positioner;\n    const ctx = this._target!.getContext()!;\n    ctx.clearRect(0, 0, width, height);\n    ctx.save();\n    ctx.translate(xOffset, height - yOffset);\n    ctx.transform(1, 0, 0, -1, 0, 0);\n    ctx.scale(scale, scale);\n    cb(ctx);\n    ctx.restore();\n    // @ts-expect-error Verify if this is still needed for the \"wechat miniprogram\".\n    if (ctx.draw) {\n      // @ts-expect-error\n      ctx.draw();\n    }\n  }\n\n  render(props: RenderStateObject) {\n    const { outline, main, highlight } = props.character;\n    const {\n      outlineColor,\n      strokeColor,\n      radicalColor,\n      highlightColor,\n      drawingColor,\n      drawingWidth,\n    } = props.options;\n\n    this._animationFrame((ctx) => {\n      this._outlineCharRenderer.render(ctx, {\n        opacity: outline.opacity,\n        strokes: outline.strokes,\n        strokeColor: outlineColor,\n      });\n      this._mainCharRenderer.render(ctx, {\n        opacity: main.opacity,\n        strokes: main.strokes,\n        strokeColor: strokeColor,\n        radicalColor: radicalColor,\n      });\n      this._highlightCharRenderer.render(ctx, {\n        opacity: highlight.opacity,\n        strokes: highlight.strokes,\n        strokeColor: highlightColor,\n      });\n\n      const userStrokes = props.userStrokes || {};\n\n      for (const userStrokeId in userStrokes) {\n        const userStroke = userStrokes[userStrokeId];\n        if (userStroke) {\n          const userStrokeProps = {\n            strokeWidth: drawingWidth,\n            strokeColor: drawingColor,\n            ...userStroke,\n          };\n          renderUserStroke(ctx, userStrokeProps);\n        }\n      }\n    });\n  }\n}\n", "import RenderTargetBase from '../RenderTargetBase';\n\nexport default class RenderTarget extends RenderTargetBase<HTMLCanvasElement> {\n  constructor(canvas: HTMLCanvasElement) {\n    super(canvas);\n  }\n\n  static init(elmOrId: string | HTMLCanvasElement, width = '100%', height = '100%') {\n    const element = (() => {\n      if (typeof elmOrId === 'string') {\n        return document.getElementById(elmOrId);\n      }\n      return elmOrId;\n    })();\n\n    if (!element) {\n      throw new Error(`HanziWriter target element not found: ${elmOrId}`);\n    }\n\n    const nodeType = element.nodeName.toUpperCase();\n\n    const canvas = (() => {\n      if (nodeType === 'CANVAS') {\n        return element as HTMLCanvasElement;\n      }\n      const canvas = document.createElement('canvas');\n      element.appendChild(canvas);\n      return canvas;\n    })();\n\n    canvas.setAttribute('width', width);\n    canvas.setAttribute('height', height);\n\n    return new RenderTarget(canvas);\n  }\n\n  getContext() {\n    return this.node.getContext('2d');\n  }\n}\n", "import { RenderTargetInitFunction } from '../../typings/types';\nimport HanziWriterRenderer from './HanziWriterRenderer';\nimport RenderTarget from './RenderTarget';\n\nexport default {\n  HanziWriterRenderer,\n  createRenderTarget: RenderTarget.init as RenderTargetInitFunction<HTMLCanvasElement>,\n};\n", "import { CharacterJson } from './typings/types';\n\nconst VERSION = '2.0';\nconst getCharDataUrl = (char: string) =>\n  `https://cdn.jsdelivr.net/npm/hanzi-writer-data@${VERSION}/${char}.json`;\n\nconst defaultCharDataLoader = (\n  char: string,\n  onLoad: (parsedJson: CharacterJson) => void,\n  onError: (error?: any, context?: any) => void,\n) => {\n  // load char data from hanziwriter cdn (currently hosted on jsdelivr)\n  const xhr = new XMLHttpRequest();\n  if (xhr.overrideMimeType) {\n    // IE 9 and 10 don't seem to support this...\n    xhr.overrideMimeType('application/json');\n  }\n  xhr.open('GET', getCharDataUrl(char), true);\n  xhr.onerror = (event) => {\n    onError(xhr, event);\n  };\n  xhr.onreadystatechange = () => {\n    // TODO: error handling\n    if (xhr.readyState !== 4) return;\n\n    if (xhr.status === 200) {\n      onLoad(JSON.parse(xhr.responseText));\n    } else if (xhr.status !== 0 && onError) {\n      onError(xhr);\n    }\n  };\n  xhr.send(null);\n};\n\nexport default defaultCharDataLoader;\n", "import { HanziWriterOptions } from './typings/types';\nimport defaultCharDataLoader from './defaultCharDataLoader';\n\nconst defaultOptions: HanziWriterOptions = {\n  charDataLoader: defaultCharDataLoader,\n  onLoadCharDataError: null,\n  onLoadCharDataSuccess: null,\n  showOutline: true,\n  showCharacter: true,\n  renderer: 'svg',\n\n  // positioning options\n\n  width: 0,\n  height: 0,\n  padding: 20,\n\n  // animation options\n\n  strokeAnimationSpeed: 1,\n  strokeFadeDuration: 400,\n  strokeHighlightDuration: 200,\n  strokeHighlightSpeed: 2,\n  delayBetweenStrokes: 1000,\n  delayBetweenLoops: 2000,\n\n  // colors\n\n  strokeColor: '#555',\n  radicalColor: null,\n  highlightColor: '#AAF',\n  outlineColor: '#DDD',\n  drawingColor: '#333',\n\n  // quiz options\n\n  leniency: 1,\n  showHintAfterMisses: 3,\n  highlightOnComplete: true,\n  highlightCompleteColor: null,\n  markStrokeCorrectAfterMisses: false,\n  acceptBackwardsStrokes: false,\n  quizStartStrokeNum: 0,\n  averageDistanceThreshold: 350,\n\n  // undocumented obscure options\n\n  drawingFadeDuration: 300,\n  drawingWidth: 4,\n  strokeWidth: 2,\n  outlineWidth: 2,\n  rendererOverride: {},\n};\n\nexport default defaultOptions;\n", "import { CharacterJson, LoadingManagerOptions } from './typings/types';\n\ntype CustomError = Error & { reason: string };\n\nexport default class LoadingManager {\n  _loadCounter = 0;\n  _isLoading = false;\n  _resolve: ((data: CharacterJson) => void) | undefined;\n  _reject: ((error?: Error | CustomError | string) => void) | undefined;\n  _options: LoadingManagerOptions;\n\n  /** Set when calling LoadingManager.loadCharData  */\n  _loadingChar: string | undefined;\n  /** use this to attribute to determine if there was a problem with loading */\n  loadingFailed = false;\n\n  constructor(options: LoadingManagerOptions) {\n    this._options = options;\n  }\n\n  _debouncedLoad(char: string, count: number) {\n    // these wrappers ignore all responses except the most recent.\n    const wrappedResolve = (data: CharacterJson) => {\n      if (count === this._loadCounter) {\n        this._resolve?.(data);\n      }\n    };\n    const wrappedReject = (reason?: Error | string) => {\n      if (count === this._loadCounter) {\n        this._reject?.(reason);\n      }\n    };\n\n    const returnedData = this._options.charDataLoader(\n      char,\n      wrappedResolve,\n      wrappedReject,\n    );\n\n    if (returnedData) {\n      if ('then' in returnedData) {\n        returnedData.then(wrappedResolve).catch(wrappedReject);\n      } else {\n        wrappedResolve(returnedData);\n      }\n    }\n  }\n\n  _setupLoadingPromise() {\n    return new Promise(\n      (\n        resolve: (data: CharacterJson) => void,\n        reject: (err?: Error | CustomError | string) => void,\n      ) => {\n        this._resolve = resolve;\n        this._reject = reject;\n      },\n    )\n      .then((data: CharacterJson) => {\n        this._isLoading = false;\n        this._options.onLoadCharDataSuccess?.(data);\n        return data;\n      })\n      .catch((reason) => {\n        this._isLoading = false;\n        this.loadingFailed = true;\n\n        // If the user has provided an \"onLoadCharDataError\", call this function\n        // Otherwise, throw the promise\n        if (this._options.onLoadCharDataError) {\n          this._options.onLoadCharDataError(reason);\n          return;\n        }\n\n        // If error callback wasn't provided, throw an error so the developer will be aware something went wrong\n        if (reason instanceof Error) {\n          throw reason;\n        }\n\n        const err = new Error(\n          `Failed to load char data for ${this._loadingChar}`,\n        ) as CustomError;\n\n        err.reason = reason;\n\n        throw err;\n      });\n  }\n\n  loadCharData(char: string) {\n    this._loadingChar = char;\n    const promise = this._setupLoadingPromise();\n    this.loadingFailed = false;\n    this._isLoading = true;\n    this._loadCounter++;\n    this._debouncedLoad(char, this._loadCounter);\n    return promise;\n  }\n}\n", "import RenderState from './RenderState';\nimport parseCharData from './parseCharData';\nimport Positioner from './Positioner';\nimport Quiz from './Quiz';\nimport svgRenderer from './renderers/svg';\nimport canvasRenderer from './renderers/canvas';\nimport defaultOptions from './defaultOptions';\nimport LoadingManager from './LoadingManager';\nimport * as characterActions from './characterActions';\nimport { trim, colorStringToVals, selectIndex, fixIndex } from './utils';\nimport Character from './models/Character';\nimport HanziWriterRendererBase, {\n  HanziWriterRendererConstructor,\n} from './renderers/HanziWriterRendererBase';\nimport RenderTargetBase from './renderers/RenderTargetBase';\nimport { GenericMutation } from './Mutation';\n\n// Typings\nimport {\n  ColorOptions,\n  DimensionOptions,\n  HanziWriterOptions,\n  LoadingManagerOptions,\n  OnCompleteFunction,\n  ParsedHanziWriterOptions,\n  QuizOptions,\n  RenderTargetInitFunction,\n} from './typings/types';\n\n// Export type interfaces\nexport * from './typings/types';\n\nexport default class HanziWriter {\n  _options: ParsedHanziWriterOptions;\n  _loadingManager: LoadingManager;\n  /** Only set when calling .setCharacter() */\n  _char: string | undefined;\n  /** Only set when calling .setCharacter() */\n  _renderState: RenderState | undefined;\n  /** Only set when calling .setCharacter() */\n  _character: Character | undefined;\n  /** Only set when calling .setCharacter() */\n  _positioner: Positioner | undefined;\n  /** Only set when calling .setCharacter() */\n  _hanziWriterRenderer: HanziWriterRendererBase<HTMLElement, any> | null | undefined;\n  /** Only set when calling .setCharacter() */\n  _withDataPromise: Promise<void> | undefined;\n\n  _quiz: Quiz | undefined;\n  _renderer: {\n    HanziWriterRenderer: HanziWriterRendererConstructor;\n    createRenderTarget: RenderTargetInitFunction<any>;\n  };\n\n  target: RenderTargetBase;\n\n  /** Main entry point */\n  static create(\n    element: string | HTMLElement,\n    character: string,\n    options?: Partial<HanziWriterOptions>,\n  ) {\n    const writer = new HanziWriter(element, options);\n    writer.setCharacter(character);\n\n    return writer;\n  }\n\n  /** Singleton instance of LoadingManager. Only set in `loadCharacterData` */\n  static _loadingManager: LoadingManager | null = null;\n  /** Singleton loading options. Only set in `loadCharacterData` */\n  static _loadingOptions: Partial<HanziWriterOptions> | null = null;\n\n  static loadCharacterData(\n    character: string,\n    options: Partial<LoadingManagerOptions> = {},\n  ) {\n    const loadingManager = (() => {\n      const { _loadingManager, _loadingOptions } = HanziWriter;\n      if (_loadingManager?._loadingChar === character && _loadingOptions === options) {\n        return _loadingManager;\n      }\n      return new LoadingManager({ ...defaultOptions, ...options });\n    })();\n\n    HanziWriter._loadingManager = loadingManager;\n    HanziWriter._loadingOptions = options;\n    return loadingManager.loadCharData(character);\n  }\n\n  static getScalingTransform(width: number, height: number, padding = 0) {\n    const positioner = new Positioner({ width, height, padding });\n    return {\n      x: positioner.xOffset,\n      y: positioner.yOffset,\n      scale: positioner.scale,\n      transform: trim(`\n        translate(${positioner.xOffset}, ${positioner.height - positioner.yOffset})\n        scale(${positioner.scale}, ${-1 * positioner.scale})\n      `).replace(/\\s+/g, ' '),\n    };\n  }\n\n  constructor(element: string | HTMLElement, options: Partial<HanziWriterOptions> = {}) {\n    const { HanziWriterRenderer, createRenderTarget } =\n      options.renderer === 'canvas' ? canvasRenderer : svgRenderer;\n    const rendererOverride = options.rendererOverride || {};\n\n    this._renderer = {\n      HanziWriterRenderer: rendererOverride.HanziWriterRenderer || HanziWriterRenderer,\n      createRenderTarget: rendererOverride.createRenderTarget || createRenderTarget,\n    };\n    // wechat miniprogram component needs direct access to the render target, so this is public\n    this.target = this._renderer.createRenderTarget(\n      element,\n      options.width,\n      options.height,\n    );\n    this._options = this._assignOptions(options);\n    this._loadingManager = new LoadingManager(this._options);\n    this._setupListeners();\n  }\n\n  showCharacter(\n    options: {\n      onComplete?: OnCompleteFunction;\n      duration?: number;\n    } = {},\n  ) {\n    this._options.showCharacter = true;\n    return this._withData(() =>\n      this._renderState\n        ?.run(\n          characterActions.showCharacter(\n            'main',\n            this._character!,\n            typeof options.duration === 'number'\n              ? options.duration\n              : this._options.strokeFadeDuration,\n          ),\n        )\n        .then((res) => {\n          options.onComplete?.(res);\n          return res;\n        }),\n    );\n  }\n\n  hideCharacter(\n    options: {\n      onComplete?: OnCompleteFunction;\n      duration?: number;\n    } = {},\n  ) {\n    this._options.showCharacter = false;\n    return this._withData(() =>\n      this._renderState\n        ?.run(\n          characterActions.hideCharacter(\n            'main',\n            this._character!,\n            typeof options.duration === 'number'\n              ? options.duration\n              : this._options.strokeFadeDuration,\n          ),\n        )\n        .then((res) => {\n          options.onComplete?.(res);\n          return res;\n        }),\n    );\n  }\n\n  animateCharacter(\n    options: {\n      onComplete?: OnCompleteFunction;\n    } = {},\n  ) {\n    this.cancelQuiz();\n\n    return this._withData(() =>\n      this._renderState\n        ?.run(\n          characterActions.animateCharacter(\n            'main',\n            this._character!,\n            this._options.strokeFadeDuration,\n            this._options.strokeAnimationSpeed,\n            this._options.delayBetweenStrokes,\n          ),\n        )\n        .then((res) => {\n          options.onComplete?.(res);\n          return res;\n        }),\n    );\n  }\n\n  animateStroke(\n    strokeNum: number,\n    options: {\n      onComplete?: OnCompleteFunction;\n    } = {},\n  ) {\n    this.cancelQuiz();\n    return this._withData(() =>\n      this._renderState\n        ?.run(\n          characterActions.animateSingleStroke(\n            'main',\n            this._character!,\n            fixIndex(strokeNum, this._character!.strokes.length),\n            this._options.strokeAnimationSpeed,\n          ),\n        )\n        .then((res) => {\n          options.onComplete?.(res);\n          return res;\n        }),\n    );\n  }\n\n  highlightStroke(\n    strokeNum: number,\n    options: {\n      onComplete?: OnCompleteFunction;\n    } = {},\n  ) {\n    const promise = () => {\n      if (!this._character || !this._renderState) {\n        return;\n      }\n\n      return this._renderState\n        .run(\n          characterActions.highlightStroke(\n            selectIndex(this._character.strokes, strokeNum),\n            colorStringToVals(this._options.highlightColor),\n            this._options.strokeHighlightSpeed,\n          ),\n        )\n        .then((res) => {\n          options.onComplete?.(res);\n          return res;\n        });\n    };\n\n    return this._withData(promise);\n  }\n\n  async loopCharacterAnimation() {\n    this.cancelQuiz();\n    return this._withData(() =>\n      this._renderState!.run(\n        characterActions.animateCharacterLoop(\n          'main',\n          this._character!,\n          this._options.strokeFadeDuration,\n          this._options.strokeAnimationSpeed,\n          this._options.delayBetweenStrokes,\n          this._options.delayBetweenLoops,\n        ),\n        { loop: true },\n      ),\n    );\n  }\n\n  pauseAnimation() {\n    return this._withData(() => this._renderState?.pauseAll());\n  }\n\n  resumeAnimation() {\n    return this._withData(() => this._renderState?.resumeAll());\n  }\n\n  showOutline(\n    options: {\n      duration?: number;\n      onComplete?: OnCompleteFunction;\n    } = {},\n  ) {\n    this._options.showOutline = true;\n    return this._withData(() =>\n      this._renderState\n        ?.run(\n          characterActions.showCharacter(\n            'outline',\n            this._character!,\n            typeof options.duration === 'number'\n              ? options.duration\n              : this._options.strokeFadeDuration,\n          ),\n        )\n        .then((res) => {\n          options.onComplete?.(res);\n          return res;\n        }),\n    );\n  }\n\n  hideOutline(\n    options: {\n      duration?: number;\n      onComplete?: OnCompleteFunction;\n    } = {},\n  ) {\n    this._options.showOutline = false;\n    return this._withData(() =>\n      this._renderState\n        ?.run(\n          characterActions.hideCharacter(\n            'outline',\n            this._character!,\n            typeof options.duration === 'number'\n              ? options.duration\n              : this._options.strokeFadeDuration,\n          ),\n        )\n        .then((res) => {\n          options.onComplete?.(res);\n          return res;\n        }),\n    );\n  }\n\n  /** Updates the size of the writer instance without resetting render state */\n  updateDimensions({ width, height, padding }: Partial<DimensionOptions>) {\n    if (width !== undefined) this._options.width = width;\n    if (height !== undefined) this._options.height = height;\n    if (padding !== undefined) this._options.padding = padding;\n    this.target.updateDimensions(this._options.width, this._options.height);\n    // if there's already a character drawn, destroy and recreate the renderer in the same state\n    if (\n      this._character &&\n      this._renderState &&\n      this._hanziWriterRenderer &&\n      this._positioner\n    ) {\n      this._hanziWriterRenderer.destroy();\n      const hanziWriterRenderer = this._initAndMountHanziWriterRenderer(this._character);\n      // TODO: this should probably implement EventEmitter instead of manually tracking updates like this\n      this._renderState.overwriteOnStateChange((nextState) =>\n        hanziWriterRenderer.render(nextState),\n      );\n      hanziWriterRenderer.render(this._renderState.state);\n      // update the current quiz as well, if one is active\n      if (this._quiz) {\n        this._quiz.setPositioner(this._positioner);\n      }\n    }\n  }\n\n  updateColor(\n    colorName: keyof ColorOptions,\n    colorVal: string | null,\n    options: {\n      duration?: number;\n      onComplete?: OnCompleteFunction;\n    } = {},\n  ) {\n    let mutations: GenericMutation[] = [];\n\n    const fixedColorVal = (() => {\n      // If we're removing radical color, tween it to the stroke color\n      if (colorName === 'radicalColor' && !colorVal) {\n        return this._options.strokeColor;\n      }\n      return colorVal;\n    })();\n\n    const mappedColor = colorStringToVals(fixedColorVal as string);\n\n    this._options[colorName] = colorVal as any;\n\n    const duration = options.duration ?? this._options.strokeFadeDuration;\n\n    mutations = mutations.concat(\n      characterActions.updateColor(colorName, mappedColor, duration),\n    );\n\n    // make sure to set radicalColor back to null after the transition finishes if val == null\n    if (colorName === 'radicalColor' && !colorVal) {\n      mutations = mutations.concat(characterActions.updateColor(colorName, null, 0));\n    }\n\n    return this._withData(() =>\n      this._renderState?.run(mutations).then((res) => {\n        options.onComplete?.(res);\n        return res;\n      }),\n    );\n  }\n\n  quiz(quizOptions: Partial<QuizOptions> = {}) {\n    return this._withData(async () => {\n      if (this._character && this._renderState && this._positioner) {\n        this.cancelQuiz();\n        this._quiz = new Quiz(this._character, this._renderState, this._positioner);\n        this._options = {\n          ...this._options,\n          ...quizOptions,\n        };\n        this._quiz.startQuiz(this._options);\n      }\n    });\n  }\n\n  skipQuizStroke() {\n    if (this._quiz) {\n      this._quiz.nextStroke();\n    }\n  }\n\n  cancelQuiz() {\n    if (this._quiz) {\n      this._quiz.cancel();\n      this._quiz = undefined;\n    }\n  }\n\n  setCharacter(char: string) {\n    this.cancelQuiz();\n    this._char = char;\n    if (this._hanziWriterRenderer) {\n      this._hanziWriterRenderer.destroy();\n    }\n    if (this._renderState) {\n      this._renderState.cancelAll();\n    }\n    this._hanziWriterRenderer = null;\n    this._withDataPromise = this._loadingManager\n      .loadCharData(char)\n      .then((pathStrings) => {\n        // if \"pathStrings\" isn't set, \".catch()\"\" was probably called and loading likely failed\n        if (!pathStrings || this._loadingManager.loadingFailed) {\n          return;\n        }\n\n        this._character = parseCharData(char, pathStrings);\n        this._renderState = new RenderState(this._character, this._options, (nextState) =>\n          hanziWriterRenderer.render(nextState),\n        );\n\n        const hanziWriterRenderer = this._initAndMountHanziWriterRenderer(\n          this._character,\n        );\n        hanziWriterRenderer.render(this._renderState.state);\n      });\n    return this._withDataPromise;\n  }\n\n  _initAndMountHanziWriterRenderer(character: Character) {\n    const { width, height, padding } = this._options;\n    this._positioner = new Positioner({ width, height, padding });\n    const hanziWriterRenderer = new this._renderer.HanziWriterRenderer(\n      character,\n      this._positioner,\n    );\n    hanziWriterRenderer.mount(this.target);\n    this._hanziWriterRenderer = hanziWriterRenderer;\n    return hanziWriterRenderer;\n  }\n\n  async getCharacterData(): Promise<Character> {\n    if (!this._char) {\n      throw new Error('setCharacter() must be called before calling getCharacterData()');\n    }\n    const character = await this._withData(() => this._character);\n    return character!;\n  }\n\n  _assignOptions(options: Partial<HanziWriterOptions>): ParsedHanziWriterOptions {\n    const mergedOptions = {\n      ...defaultOptions,\n      ...options,\n    };\n\n    // backfill strokeAnimationSpeed if deprecated strokeAnimationDuration is provided instead\n    if (options.strokeAnimationDuration && !options.strokeAnimationSpeed) {\n      mergedOptions.strokeAnimationSpeed = 500 / options.strokeAnimationDuration;\n    }\n    if (options.strokeHighlightDuration && !options.strokeHighlightSpeed) {\n      mergedOptions.strokeHighlightSpeed = 500 / mergedOptions.strokeHighlightDuration;\n    }\n\n    if (!options.highlightCompleteColor) {\n      mergedOptions.highlightCompleteColor = mergedOptions.highlightColor;\n    }\n\n    return this._fillWidthAndHeight(mergedOptions);\n  }\n\n  /** returns a new options object with width and height filled in if missing */\n  _fillWidthAndHeight(options: HanziWriterOptions): ParsedHanziWriterOptions {\n    const filledOpts = { ...options };\n    if (filledOpts.width && !filledOpts.height) {\n      filledOpts.height = filledOpts.width;\n    } else if (filledOpts.height && !filledOpts.width) {\n      filledOpts.width = filledOpts.height;\n    } else if (!filledOpts.width && !filledOpts.height) {\n      const { width, height } = this.target.getBoundingClientRect();\n      const minDim = Math.min(width, height);\n      filledOpts.width = minDim;\n      filledOpts.height = minDim;\n    }\n    return filledOpts as ParsedHanziWriterOptions;\n  }\n\n  _withData<T>(func: () => T) {\n    // if this._loadingManager.loadingFailed, then loading failed before this method was called\n    if (this._loadingManager.loadingFailed) {\n      throw Error('Failed to load character data. Call setCharacter and try again.');\n    }\n\n    if (this._withDataPromise) {\n      return this._withDataPromise.then(() => {\n        if (!this._loadingManager.loadingFailed) {\n          return func();\n        }\n      });\n    }\n    return Promise.resolve().then(func);\n  }\n\n  _setupListeners() {\n    this.target.addPointerStartListener((evt) => {\n      if (this._quiz) {\n        evt.preventDefault();\n        this._quiz.startUserStroke(evt.getPoint());\n      }\n    });\n    this.target.addPointerMoveListener((evt) => {\n      if (this._quiz) {\n        evt.preventDefault();\n        this._quiz.continueUserStroke(evt.getPoint());\n      }\n    });\n    this.target.addPointerEndListener(() => {\n      this._quiz?.endUserStroke();\n    });\n  }\n}\n", "import { LitElement, TemplateResult, css, html } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators.js\";\nimport HanziWriter, { CharacterJson } from \"hanzi-writer\";\nimport { None, Option, Some } from \"client/option\";\n\n@customElement(\"quiz-element\")\nexport class QuizElement extends LitElement {\n  static styles = css`\n    #main {\n      width: 100%;\n      height: 100%;\n    }\n    #drawing {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n    #drawing svg {\n      outline: 1px solid black;\n    }\n  `;\n  static properties = {\n    character: { type: String },\n    prompt: { type: String },\n    pinyin: { type: String },\n    tone: { type: Number }\n  };\n  /**\n   * The chinese character to draw.\n   */\n  @property({\n    type: String\n  })\n  character: string = \"\";\n\n  @property()\n  prompt?: string;\n\n  /**\n   * The pinyin of the chinese character.\n   */\n  @property()\n  pinyin?: string;\n\n  /**\n   * The tone of the character.\n   */\n  @property()\n  tone?: number;\n\n  private maxDimension_ = 0;\n\n  /** Hanzi char data. */\n  private charData_?: CharacterJson;\n\n  /** Number of strokes user has done. */\n  @state()\n  private strokesDrawn_ = 0;\n\n  /** If a hanzi writer instance exists. */\n  private writer_: Option<HanziWriter> = None;\n\n  async updated() {\n    console.log(\"updated\");\n    if (this.writer_.some) {\n      return;\n    }\n    const container = this.shadowRoot?.querySelector(\"#quizContainer\");\n    if (container === null) {\n      return;\n    }\n\n    const element = this.shadowRoot?.querySelector(\"svg\") as unknown as HTMLElement;\n    this.writer_ = Some(\n      HanziWriter.create(element, this.character, {\n        width: this.maxDimension_,\n        height: this.maxDimension_,\n        showCharacter: false,\n        showOutline: false,\n        padding: 5\n      })\n    );\n    this.writer_.safeValue().quiz({\n      onMistake: (strokeData) => {\n        console.log(\"Oh no! you made a mistake on stroke \" + strokeData.strokeNum);\n        console.log(\n          \"You've made \" + strokeData.mistakesOnStroke + \" mistakes on this stroke so far\"\n        );\n        console.log(\"You've made \" + strokeData.totalMistakes + \" total mistakes on this quiz\");\n        console.log(\n          \"There are \" + strokeData.strokesRemaining + \" strokes remaining in this character\"\n        );\n        this.strokesDrawn_++;\n      },\n      onCorrectStroke: (strokeData) => {\n        console.log(\"Yes!!! You got stroke \" + strokeData.strokeNum + \" correct!\");\n        console.log(\"You made \" + strokeData.mistakesOnStroke + \" mistakes on this stroke\");\n        console.log(\"You've made \" + strokeData.totalMistakes + \" total mistakes on this quiz\");\n        console.log(\n          \"There are \" + strokeData.strokesRemaining + \" strokes remaining in this character\"\n        );\n        this.strokesDrawn_++;\n      },\n      onComplete: (summaryData) => {\n        console.log(\"You did it! You finished drawing \" + summaryData.character);\n        console.log(\"You made \" + summaryData.totalMistakes + \" total mistakes on this quiz\");\n      }\n    });\n    this.writer_.safeValue().hideOutline();\n  }\n\n  /**\n   * Creates the svg outline of the character.\n   * @param maxDimension max dimension.\n   * @returns the svg outline\n   */\n  protected createSvgOutline(maxDimension: number): TemplateResult {\n    return html` <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"${maxDimension}\"\n      height=\"${maxDimension}\"\n      id=\"grid-background-target\"\n    >\n      <line x1=\"0\" y1=\"0\" x2=\"${maxDimension}\" y2=\"${maxDimension}\" stroke=\"#DDD\" />\n      <line x1=\"${maxDimension}\" y1=\"0\" x2=\"0\" y2=\"${maxDimension}\" stroke=\"#DDD\" />\n      <line\n        x1=\"${maxDimension / 2}\"\n        y1=\"0\"\n        x2=\"${maxDimension / 2}\"\n        y2=\"${maxDimension}\"\n        stroke=\"#DDD\"\n      />\n      <line\n        x1=\"0\"\n        y1=\"${maxDimension / 2}\"\n        x2=\"${maxDimension}\"\n        y2=\"${maxDimension / 2}\"\n        stroke=\"#DDD\"\n      />\n    </svg>`;\n  }\n\n  protected override async scheduleUpdate(): Promise<void> {\n    const charData = await HanziWriter.loadCharacterData(this.character);\n    if (charData) {\n      this.charData_ = charData;\n    }\n    super.scheduleUpdate();\n  }\n\n  protected render() {\n    const w = Math.min(window.innerWidth, 960);\n    const h = window.innerHeight;\n    // Max dimension is the smallest of the 2 minus a number for padding of cards and whatnot.\n    this.maxDimension_ = Math.min(w - 250, h);\n    console.log(\"render\", w, h, this.maxDimension_);\n\n    let strokeCount = 0;\n    if (this.charData_) {\n      strokeCount = this.charData_.strokes.length;\n    }\n\n    const svgOutline = this.createSvgOutline(this.maxDimension_);\n    return html`<div id=\"main\">\n      <dile-card shadow-md title=\"Quiz\">\n        <div id=\"quizContainer\">\n          <span>${this.prompt}</span>\n        </div>\n        <div id=\"drawing\">${svgOutline}</div>\n\n        <div slot=\"footer\">\n          <span>Total Strokes ${strokeCount}</span>\n          <span>Correct Strokes ${this.strokesDrawn_}</span>\n        </div>\n      </dile-card>\n    </div>`;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"quiz-element\": QuizElement;\n  }\n}\n", "\nimport { css } from \"lit\";\n\nexport const iconStyles = css`\n    .dile-icon path, .dile-icon polygon {\n      fill: var(--dile-icon-color, #888);\n    }\n    .dile-icon path[fill=\"none\"] {\n      fill: transparent;\n    }\n    .dile-icon {\n      width: var(--dile-icon-size, 24px);\n      height: var(--dile-icon-size, 24px);\n    }\n  `;", "import { html } from 'lit';\nexport const accountIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><g><rect fill=\"none\" height=\"24\" width=\"24\"/></g><g><path d=\"M12,2C6.48,2,2,6.48,2,12s4.48,10,10,10s10-4.48,10-10S17.52,2,12,2z M12,6c1.93,0,3.5,1.57,3.5,3.5S13.93,13,12,13 s-3.5-1.57-3.5-3.5S10.07,6,12,6z M12,20c-2.03,0-4.43-0.82-6.14-2.88C7.55,15.8,9.68,15,12,15s4.45,0.8,6.14,2.12 C16.43,19.18,14.03,20,12,20z\"/></g></svg>`;", "import { html } from 'lit';\nexport const addIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"/></svg>`;\n", "import { html } from 'lit';\nexport const announcementIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path d=\"M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-7 9h-2V5h2v6zm0 4h-2v-2h2v2z\" /></svg>`;\n", "import { html } from 'lit';\nexport const appsIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M4 8h4V4H4v4zm6 12h4v-4h-4v4zm-6 0h4v-4H4v4zm0-6h4v-4H4v4zm6 0h4v-4h-4v4zm6-10v4h4V4h-4zm-6 4h4V4h-4v4zm6 6h4v-4h-4v4zm0 6h4v-4h-4v4z\"/></svg>`;", "import { html } from 'lit';\nexport const arrowDropDownIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M7 10l5 5 5-5z\"/></svg>`;\n", "import { html } from 'lit';\nexport const arrowDropUpIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M7 14l5-5 5 5z\"/></svg>`;\n\n", "import { html } from 'lit';\nexport const arrowRightIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><rect fill=\"none\" height=\"24\" width=\"24\"/><path d=\"M15,5l-1.41,1.41L18.17,11H2V13h16.17l-4.59,4.59L15,19l7-7L15,5z\"/></svg>`;\n", "import { html } from 'lit';\nexport const attachFileIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M16.5 6v11.5c0 2.21-1.79 4-4 4s-4-1.79-4-4V5c0-1.38 1.12-2.5 2.5-2.5s2.5 1.12 2.5 2.5v10.5c0 .55-.45 1-1 1s-1-.45-1-1V6H10v9.5c0 1.38 1.12 2.5 2.5 2.5s2.5-1.12 2.5-2.5V5c0-2.21-1.79-4-4-4S7 2.79 7 5v12.5c0 3.04 2.46 5.5 5.5 5.5s5.5-2.46 5.5-5.5V6h-1.5z\"/></svg>`;", "import { html } from 'lit';\nexport const attachmentIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M2 12.5C2 9.46 4.46 7 7.5 7H18c2.21 0 4 1.79 4 4s-1.79 4-4 4H9.5C8.12 15 7 13.88 7 12.5S8.12 10 9.5 10H17v2H9.41c-.55 0-.55 1 0 1H18c1.1 0 2-.9 2-2s-.9-2-2-2H7.5C5.57 9 4 10.57 4 12.5S5.57 16 7.5 16H17v2H7.5C4.46 18 2 15.54 2 12.5z\"/></svg>`;", "import { html } from 'lit';\nexport const autoAwesomeIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M19 9l1.25-2.75L23 5l-2.75-1.25L19 1l-1.25 2.75L15 5l2.75 1.25L19 9zm-7.5.5L9 4 6.5 9.5 1 12l5.5 2.5L9 20l2.5-5.5L17 12l-5.5-2.5zM19 15l-1.25 2.75L15 19l2.75 1.25L19 23l1.25-2.75L23 19l-2.75-1.25L19 15z\"/></svg>`;\n", "import { html } from 'lit';\nexport const calendarIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\"/></svg>`;\n\n", "import { html } from 'lit';\nexport const checkboxBlankIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"/></svg>`;", "import { html } from 'lit';\nexport const checkboxCheckedIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"/></svg>`;", "import { html } from 'lit';\nexport const circleIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2z\"/></svg>`;\n", "import { html } from 'lit';\nexport const circleBorderIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"/></svg>`;\n\n", "import { html } from 'lit';\nexport const clearIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/></svg>`;\n", "import { html } from 'lit';\nexport const closeIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M14.59 8L12 10.59 9.41 8 8 9.41 10.59 12 8 14.59 9.41 16 12 13.41 14.59 16 16 14.59 13.41 12 16 9.41 14.59 8zM12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"/></svg>`;", "import { html } from 'lit';\nexport const codeIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M9.4 16.6L4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0l4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z\"/></svg>`;", "import { html } from 'lit';\nexport const cookieIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><g><rect fill=\"none\" height=\"24\" width=\"24\"/></g><g><g><path d=\"M21.95,10.99c-1.79-0.03-3.7-1.95-2.68-4.22c-2.98,1-5.77-1.59-5.19-4.56C6.95,0.71,2,6.58,2,12c0,5.52,4.48,10,10,10 C17.89,22,22.54,16.92,21.95,10.99z M8.5,15C7.67,15,7,14.33,7,13.5S7.67,12,8.5,12s1.5,0.67,1.5,1.5S9.33,15,8.5,15z M10.5,10 C9.67,10,9,9.33,9,8.5S9.67,7,10.5,7S12,7.67,12,8.5S11.33,10,10.5,10z M15,16c-0.55,0-1-0.45-1-1c0-0.55,0.45-1,1-1s1,0.45,1,1 C16,15.55,15.55,16,15,16z\"/></g></g></svg>`;", "import { html } from 'lit';\nexport const cropIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 -960 960 960\" width=\"24\"><path d=\"M680-40v-160H280q-33 0-56.5-23.5T200-280v-400H40v-80h160v-160h80v640h640v80H760v160h-80Zm0-320v-320H360v-80h320q33 0 56.5 23.5T760-680v320h-80Z\"/></svg>`;\n", "import { html } from 'lit';\nexport const deleteIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"/></svg>`;", "import { html } from 'lit';\nexport const descriptionIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\"/></svg>`;", "import { html } from 'lit';\nexport const doneIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\"/></svg>`;", "import { html } from 'lit';\nexport const doubleArrowLeftIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><g><rect fill=\"none\" height=\"24\" width=\"24\"/></g><g><g><polygon points=\"17.59,18 19,16.59 14.42,12 19,7.41 17.59,6 11.59,12\"/><polygon points=\"11,18 12.41,16.59 7.83,12 12.41,7.41 11,6 5,12\"/></g></g></svg>`;\n", "import { html } from 'lit';\nexport const doubleArrowRightIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><g><rect fill=\"none\" height=\"24\" width=\"24\"/></g><g><g><polygon points=\"6.41,6 5,7.41 9.58,12 5,16.59 6.41,18 12.41,12\"/><polygon points=\"13,6 11.59,7.41 16.17,12 11.59,16.59 13,18 19,12\"/></g></g></svg>`;\n", "import { html } from 'lit';\nexport const downloadIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><g><rect fill=\"none\" height=\"24\" width=\"24\"/></g><g><path d=\"M5,20h14v-2H5V20z M19,9h-4V3H9v6H5l7,7L19,9z\"/></g></svg>`;", "import { html } from 'lit';\nexport const eastIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><rect fill=\"none\" height=\"24\" width=\"24\"/><path d=\"M15,5l-1.41,1.41L18.17,11H2V13h16.17l-4.59,4.59L15,19l7-7L15,5z\"/></svg>`;\n", "import { html } from 'lit';\nexport const editIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"/></svg>`;", "import { html } from 'lit';\nexport const emailIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z\"/></svg>`;\n", "import { html } from 'lit';\nexport const euroIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><g><rect fill=\"none\" height=\"24\" width=\"24\"/></g><g><g/><path d=\"M15,18.5c-2.51,0-4.68-1.42-5.76-3.5H15l1-2H8.58c-0.05-0.33-0.08-0.66-0.08-1s0.03-0.67,0.08-1H15l1-2H9.24 C10.32,6.92,12.5,5.5,15,5.5c1.61,0,3.09,0.59,4.23,1.57L21,5.3C19.41,3.87,17.3,3,15,3c-3.92,0-7.24,2.51-8.48,6H3l-1,2h4.06 C6.02,11.33,6,11.66,6,12s0.02,0.67,0.06,1H3l-1,2h4.52c1.24,3.49,4.56,6,8.48,6c2.31,0,4.41-0.87,6-2.3l-1.78-1.77 C18.09,17.91,16.62,18.5,15,18.5z\"/></g></svg>`;", "import { html } from 'lit';\nexport const favoriteIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"/></svg>`;\n\n", "import { html } from 'lit';\nexport const filterIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><g><path d=\"M0,0h24 M24,24H0\" fill=\"none\"/><path d=\"M4.25,5.61C6.27,8.2,10,13,10,13v6c0,0.55,0.45,1,1,1h2c0.55,0,1-0.45,1-1v-6c0,0,3.72-4.8,5.74-7.39 C20.25,4.95,19.78,4,18.95,4H5.04C4.21,4,3.74,4.95,4.25,5.61z\"/><path d=\"M0,0h24v24H0V0z\" fill=\"none\"/></g></svg>`;", "import { html } from 'lit';\nexport const filterListIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\"/></svg>`;\n\n\n", "import { html } from 'lit';\nexport const folderIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M10 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2h-8l-2-2z\"/></svg>`;", "import { html } from 'lit';\nexport const folderZipIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><g><rect fill=\"none\" height=\"24\" width=\"24\"/></g><g><path d=\"M20,6h-8l-2-2H4C2.9,4,2.01,4.9,2.01,6L2,18c0,1.1,0.9,2,2,2h16c1.1,0,2-0.9,2-2V8C22,6.9,21.1,6,20,6z M18,12h-2v2h2v2h-2 v2h-2v-2h2v-2h-2v-2h2v-2h-2V8h2v2h2V12z\"/></g></svg>`;", "import { html } from 'lit';\nexport const formatAlignCenterIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M7 15v2h10v-2H7zm-4 6h18v-2H3v2zm0-8h18v-2H3v2zm4-6v2h10V7H7zM3 3v2h18V3H3z\"/></svg>`;", "import { html } from 'lit';\nexport const formatAlignLeftIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M15 15H3v2h12v-2zm0-8H3v2h12V7zM3 13h18v-2H3v2zm0 8h18v-2H3v2zM3 3v2h18V3H3z\"/></svg>`;", "import { html } from 'lit';\nexport const formatAlignRightIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M3 21h18v-2H3v2zm6-4h12v-2H9v2zm-6-4h18v-2H3v2zm6-4h12V7H9v2zM3 3v2h18V3H3z\"/></svg>`;", "import { html } from 'lit';\nexport const formatBoldIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M15.6 10.79c.97-.67 1.65-1.77 1.65-2.79 0-2.26-1.75-4-4-4H7v14h7.04c2.09 0 3.71-1.7 3.71-3.79 0-1.52-.86-2.82-2.15-3.42zM10 6.5h3c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-3v-3zm3.5 9H10v-3h3.5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5z\"/></svg>`;", "import { html } from 'lit';\nexport const formatColorTextIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><g><rect fill=\"none\" height=\"24\" width=\"24\"/></g><g><path d=\"M2,20h20v4H2V20z M5.49,17h2.42l1.27-3.58h5.65L16.09,17h2.42L13.25,3h-2.5L5.49,17z M9.91,11.39l2.03-5.79h0.12l2.03,5.79 H9.91z\"/></g></svg>`;", "import { html } from 'lit';\nexport const formatIndentDecreaseIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M11 17h10v-2H11v2zm-8-5l4 4V8l-4 4zm0 9h18v-2H3v2zM3 3v2h18V3H3zm8 6h10V7H11v2zm0 4h10v-2H11v2z\"/></svg>`;", "import { html } from 'lit';\nexport const formatIndentIncreaseIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M3 21h18v-2H3v2zM3 8v8l4-4-4-4zm8 9h10v-2H11v2zM3 3v2h18V3H3zm8 6h10V7H11v2zm0 4h10v-2H11v2z\"/></svg>`;", "import { html } from 'lit';\nexport const formatItalicIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M10 4v3h2.21l-3.42 8H6v3h8v-3h-2.21l3.42-8H18V4z\"/></svg>`;", "import { html } from 'lit';\nexport const formatListBulletedIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M4 10.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm0-6c-.83 0-1.5.67-1.5 1.5S3.17 7.5 4 7.5 5.5 6.83 5.5 6 4.83 4.5 4 4.5zm0 12c-.83 0-1.5.68-1.5 1.5s.68 1.5 1.5 1.5 1.5-.68 1.5-1.5-.67-1.5-1.5-1.5zM7 19h14v-2H7v2zm0-6h14v-2H7v2zm0-8v2h14V5H7z\"/></svg>`;", "import { html } from 'lit';\nexport const formatListNumberedIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z\"/></svg>`;", "import { html } from 'lit';\nexport const formatQuoteIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M6 17h3l2-4V7H5v6h3zm8 0h3l2-4V7h-6v6h3z\"/></svg>`;", "import { html } from 'lit';\nexport const formatUnderlinedIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12 17c3.31 0 6-2.69 6-6V3h-2.5v8c0 1.93-1.57 3.5-3.5 3.5S8.5 12.93 8.5 11V3H6v8c0 3.31 2.69 6 6 6zm-7 2v2h14v-2H5z\"/></svg>`;", "import { html } from 'lit';\nexport const helpIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 17h-2v-2h2v2zm2.07-7.75l-.9.92C13.45 12.9 13 13.5 13 15h-2v-.5c0-1.1.45-2.1 1.17-2.83l1.24-1.26c.37-.36.59-.86.59-1.41 0-1.1-.9-2-2-2s-2 .9-2 2H8c0-2.21 1.79-4 4-4s4 1.79 4 4c0 .88-.36 1.68-.93 2.25z\"/></svg>`;\n", "import { html } from 'lit';\nexport const homeIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\"/></svg>`;", "import { html } from 'lit';\nexport const imageIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M21 19V5c0-1.1-.9-2-2-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2zM8.5 13.5l2.5 3.01L14.5 12l4.5 6H5l3.5-4.5z\"/></svg>`;", "import { html } from 'lit';\nexport const infoIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\"/></svg>`;", "import { html } from 'lit';\nexport const insertLinkIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"/></svg>`;", "import { html } from 'lit';\nexport const insertPhotoIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M21 19V5c0-1.1-.9-2-2-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2zM8.5 13.5l2.5 3.01L14.5 12l4.5 6H5l3.5-4.5z\"/></svg>`;", "import { html } from 'lit';\nexport const labelIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M17.63 5.84C17.27 5.33 16.67 5 16 5L5 5.01C3.9 5.01 3 5.9 3 7v10c0 1.1.9 1.99 2 1.99L16 19c.67 0 1.27-.33 1.63-.84L22 12l-4.37-6.16z\"/></svg>`;", "import { html } from 'lit';\nexport const lightbulbIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M9 21c0 .5.4 1 1 1h4c.6 0 1-.5 1-1v-1H9v1zm3-19C8.1 2 5 5.1 5 9c0 2.4 1.2 4.5 3 5.7V17c0 .5.4 1 1 1h6c.6 0 1-.5 1-1v-2.3c1.8-1.3 3-3.4 3-5.7 0-3.9-3.1-7-7-7z\"/></svg>`;", "import { html } from 'lit';\nexport const linkOffIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M17 7h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1 0 1.43-.98 2.63-2.31 2.98l1.46 1.46C20.88 15.61 22 13.95 22 12c0-2.76-2.24-5-5-5zm-1 4h-2.19l2 2H16zM2 4.27l3.11 3.11C3.29 8.12 2 9.91 2 12c0 2.76 2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1 0-1.59 1.21-2.9 2.76-3.07L8.73 11H8v2h2.73L13 15.27V17h1.73l4.01 4L20 19.74 3.27 3 2 4.27z\"/><path d=\"M0 24V0\" fill=\"none\"/></svg>`;\n\n", "import { html } from 'lit';\nexport const listIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M3 13h2v-2H3v2zm0 4h2v-2H3v2zm0-8h2V7H3v2zm4 4h14v-2H7v2zm0 4h14v-2H7v2zM7 7v2h14V7H7z\"/></svg>`;", "import { html } from 'lit';\nexport const loginIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><g><rect fill=\"none\" height=\"24\" width=\"24\"/></g><g><path d=\"M11,7L9.6,8.4l2.6,2.6H2v2h10.2l-2.6,2.6L11,17l5-5L11,7z M20,19h-8v2h8c1.1,0,2-0.9,2-2V5c0-1.1-0.9-2-2-2h-8v2h8V19z\"/></g></svg>`;", "import { html } from 'lit';\nexport const logoutIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M17 7l-1.41 1.41L18.17 11H8v2h10.17l-2.58 2.58L17 17l5-5zM4 5h8V3H4c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h8v-2H4V5z\"/></svg>`;", "import { html } from 'lit';\nexport const moreIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"/></svg>`;", "import { html } from 'lit';\nexport const moreVertIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"/></svg>`;", "import { html } from 'lit';\nexport const newReleasesIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M23 12l-2.44-2.78.34-3.68-3.61-.82-1.89-3.18L12 3 8.6 1.54 6.71 4.72l-3.61.81.34 3.68L1 12l2.44 2.78-.34 3.69 3.61.82 1.89 3.18L12 21l3.4 1.46 1.89-3.18 3.61-.82-.34-3.68L23 12zm-10 5h-2v-2h2v2zm0-4h-2V7h2v6z\"/></svg>`;\n", "import { html } from 'lit';\nexport const notesIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M3 18h12v-2H3v2zM3 6v2h18V6H3zm0 7h18v-2H3v2z\"/></svg>`;", "import { html } from 'lit';\nexport const notificationsIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M12 22c1.1 0 2-.9 2-2h-4c0 1.1.89 2 2 2zm6-6v-5c0-3.07-1.64-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68C7.63 5.36 6 7.92 6 11v5l-2 2v1h16v-1l-2-2z\"/></svg>`;", "import { html } from 'lit';\nexport const openWithIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 -960 960 960\" width=\"24\"><path d=\"M480-80 310-250l57-57 73 73v-166h80v165l72-73 58 58L480-80ZM250-310 80-480l169-169 57 57-72 72h166v80H235l73 72-58 58Zm460 0-57-57 73-73H560v-80h165l-73-72 58-58 170 170-170 170ZM440-560v-166l-73 73-57-57 170-170 170 170-57 57-73-73v166h-80Z\"/></svg>`;\n\n", "import { html } from 'lit';\nexport const paidIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><g><rect fill=\"none\" height=\"24\" width=\"24\"/></g><g><path d=\"M12,2C6.48,2,2,6.48,2,12s4.48,10,10,10s10-4.48,10-10S17.52,2,12,2z M12.88,17.76V19h-1.75v-1.29 c-0.74-0.18-2.39-0.77-3.02-2.96l1.65-0.67c0.06,0.22,0.58,2.09,2.4,2.09c0.93,0,1.98-0.48,1.98-1.61c0-0.96-0.7-1.46-2.28-2.03 c-1.1-0.39-3.35-1.03-3.35-3.31c0-0.1,0.01-2.4,2.62-2.96V5h1.75v1.24c1.84,0.32,2.51,1.79,2.66,2.23l-1.58,0.67 c-0.11-0.35-0.59-1.34-1.9-1.34c-0.7,0-1.81,0.37-1.81,1.39c0,0.95,0.86,1.31,2.64,1.9c2.4,0.83,3.01,2.05,3.01,3.45 C15.9,17.17,13.4,17.67,12.88,17.76z\"/></g></svg>`;\n", "import { html } from 'lit';\nexport const paletteIcon = html`<svg  class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><g><rect fill=\"none\" height=\"24\" width=\"24\"/></g><g><path d=\"M12,2C6.49,2,2,6.49,2,12s4.49,10,10,10c1.38,0,2.5-1.12,2.5-2.5c0-0.61-0.23-1.2-0.64-1.67c-0.08-0.1-0.13-0.21-0.13-0.33 c0-0.28,0.22-0.5,0.5-0.5H16c3.31,0,6-2.69,6-6C22,6.04,17.51,2,12,2z M17.5,13c-0.83,0-1.5-0.67-1.5-1.5c0-0.83,0.67-1.5,1.5-1.5 s1.5,0.67,1.5,1.5C19,12.33,18.33,13,17.5,13z M14.5,9C13.67,9,13,8.33,13,7.5C13,6.67,13.67,6,14.5,6S16,6.67,16,7.5 C16,8.33,15.33,9,14.5,9z M5,11.5C5,10.67,5.67,10,6.5,10S8,10.67,8,11.5C8,12.33,7.33,13,6.5,13S5,12.33,5,11.5z M11,7.5 C11,8.33,10.33,9,9.5,9S8,8.33,8,7.5C8,6.67,8.67,6,9.5,6S11,6.67,11,7.5z\"/></g></svg>`;\n", "import { html } from 'lit';\nexport const panToolIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 -960 960 960\" width=\"24\"><path d=\"M402-40q-30 0-56-13.5T303-92L48-465l24-23q19-19 45-22t47 12l116 81v-383q0-17 11.5-28.5T320-840q17 0 28.5 11.5T360-800v537L212-367l157 229q5 8 14 13t19 5h278q33 0 56.5-23.5T760-200v-560q0-17 11.5-28.5T800-800q17 0 28.5 11.5T840-760v560q0 66-47 113T680-40H402Zm38-440v-400q0-17 11.5-28.5T480-920q17 0 28.5 11.5T520-880v400h-80Zm160 0v-360q0-17 11.5-28.5T640-880q17 0 28.5 11.5T680-840v360h-80ZM486-300Z\"/></svg>`;\n", "import { html } from 'lit';\nexport const pdfIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.5 7.5c0 .83-.67 1.5-1.5 1.5H9v2H7.5V7H10c.83 0 1.5.67 1.5 1.5v1zm5 2c0 .83-.67 1.5-1.5 1.5h-2.5V7H15c.83 0 1.5.67 1.5 1.5v3zm4-3H19v1h1.5V11H19v2h-1.5V7h3v1.5zM9 9.5h1v-1H9v1zM4 6H2v14c0 1.1.9 2 2 2h14v-2H4V6zm10 5.5h1v-3h-1v3z\"/></svg>`;\n", "import { html } from 'lit';\nexport const photoCameraIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"></path><path d=\"M8.8,12a3.2,3.2 0 1,0 6.4,0a3.2,3.2 0 1,0 -6.4,0\"></path></circle><path d=\"M9 2L7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3.17L15 2H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z\"></path></svg>`;\n", "import { html } from 'lit';\nexport const priorityHighIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M10,19a2,2 0 1,0 4,0a2,2 0 1,0 -4,0\" /><path d=\"M10 3h4v12h-4z\"/></svg>`;\n", "import { html } from 'lit';\nexport const questionAnswerIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M21 6h-2v9H6v2c0 .55.45 1 1 1h11l4 4V7c0-.55-.45-1-1-1zm-4 6V3c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v14l4-4h10c.55 0 1-.45 1-1z\"/></svg>`;", "import { html } from 'lit';\nexport const radioCheckedIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12 7c-2.76 0-5 2.24-5 5s2.24 5 5 5 5-2.24 5-5-2.24-5-5-5zm0-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"/></svg>`;\n\n", "import { html } from 'lit';\nexport const receiptIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M18 17H6v-2h12v2zm0-4H6v-2h12v2zm0-4H6V7h12v2zM3 22l1.5-1.5L6 22l1.5-1.5L9 22l1.5-1.5L12 22l1.5-1.5L15 22l1.5-1.5L18 22l1.5-1.5L21 22V2l-1.5 1.5L18 2l-1.5 1.5L15 2l-1.5 1.5L12 2l-1.5 1.5L9 2 7.5 3.5 6 2 4.5 3.5 3 2v20z\"/></svg>`;", "import { html } from 'lit';\nexport const receiptLongIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0,0h24v24H0V0z\" fill=\"none\"/><g><path d=\"M19.5,3.5L18,2l-1.5,1.5L15,2l-1.5,1.5L12,2l-1.5,1.5L9,2L7.5,3.5L6,2v14H3v3c0,1.66,1.34,3,3,3h12c1.66,0,3-1.34,3-3V2 L19.5,3.5z M19,19c0,0.55-0.45,1-1,1s-1-0.45-1-1v-3H8V5h11V19z\"/><path d=\"M9,7h6v2h-6Z\" /><path d=\"M16,7h2v2h-2Z\" /><path d=\"M9,10h6v2h-6Z\" /><path d=\"M16,10h2v2h-2Z\" /></g></svg>`;", "import { html } from 'lit';\nexport const redoIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M18.4 10.6C16.55 8.99 14.15 8 11.5 8c-4.65 0-8.58 3.03-9.96 7.22L3.9 16c1.05-3.19 4.05-5.5 7.6-5.5 1.95 0 3.73.72 5.12 1.88L13 16h9V7l-3.6 3.6z\"/></svg>`;", "import { html } from 'lit';\nexport const refreshIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\"/></svg>`;", "import { html } from 'lit';\nexport const rotateLeftIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 -960 960 960\" width=\"24\"><path d=\"M440-80q-50-5-96-24.5T256-156l56-58q29 21 61.5 34t66.5 18v82Zm80 0v-82q104-15 172-93.5T760-438q0-117-81.5-198.5T480-718h-8l64 64-56 56-160-160 160-160 56 58-62 62h6q75 0 140.5 28.5t114 77q48.5 48.5 77 114T840-438q0 137-91 238.5T520-80ZM198-214q-32-42-51.5-88T122-398h82q5 34 18 66.5t34 61.5l-58 56Zm-76-264q6-51 25-98t51-86l58 56q-21 29-34 61.5T204-478h-82Z\"/></svg>`;\n", "import { html } from 'lit';\nexport const rotateRightIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 -960 960 960\" width=\"24\"><path d=\"M522-80v-82q34-5 66.5-18t61.5-34l56 58q-42 32-88 51.5T522-80Zm-80 0Q304-98 213-199.5T122-438q0-75 28.5-140.5t77-114q48.5-48.5 114-77T482-798h6l-62-62 56-58 160 160-160 160-56-56 64-64h-8q-117 0-198.5 81.5T202-438q0 104 68 182.5T442-162v82Zm322-134-58-56q21-29 34-61.5t18-66.5h82q-5 50-24.5 96T764-214Zm76-264h-82q-5-34-18-66.5T706-606l58-56q32 39 51 86t25 98Z\"/></svg>`;\n", "import { html } from 'lit';\nexport const saveIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 -960 960 960\" width=\"24\"><path d=\"M840-680v480q0 33-23.5 56.5T760-120H200q-33 0-56.5-23.5T120-200v-560q0-33 23.5-56.5T200-840h480l160 160Zm-80 34L646-760H200v560h560v-446ZM480-240q50 0 85-35t35-85q0-50-35-85t-85-35q-50 0-85 35t-35 85q0 50 35 85t85 35ZM240-560h360v-160H240v160Zm-40-86v446-560 114Z\"/></svg>`;\n", "import { html } from 'lit';\nexport const scaleIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><g><rect fill=\"none\" height=\"24\" width=\"24\"/></g><g><path d=\"M14,11V8c4.56-0.58,8-3.1,8-6H2c0,2.9,3.44,5.42,8,6l0,3c-3.68,0.73-8,3.61-8,11h6v-2H4.13c0.93-6.83,6.65-7.2,7.87-7.2 s6.94,0.37,7.87,7.2H16v2h6C22,14.61,17.68,11.73,14,11z M12,22c-1.1,0-2-0.9-2-2c0-0.55,0.22-1.05,0.59-1.41 C11.39,17.79,16,16,16,16s-1.79,4.61-2.59,5.41C13.05,21.78,12.55,22,12,22z\"/></g></svg>`;\n", "import { html } from 'lit';\nexport const searchIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"/></svg>`;", "import { html } from 'lit';\nexport const settingsIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><g><path d=\"M0,0h24v24H0V0z\" fill=\"none\"/><path d=\"M19.14,12.94c0.04-0.3,0.06-0.61,0.06-0.94c0-0.32-0.02-0.64-0.07-0.94l2.03-1.58c0.18-0.14,0.23-0.41,0.12-0.61 l-1.92-3.32c-0.12-0.22-0.37-0.29-0.59-0.22l-2.39,0.96c-0.5-0.38-1.03-0.7-1.62-0.94L14.4,2.81c-0.04-0.24-0.24-0.41-0.48-0.41 h-3.84c-0.24,0-0.43,0.17-0.47,0.41L9.25,5.35C8.66,5.59,8.12,5.92,7.63,6.29L5.24,5.33c-0.22-0.08-0.47,0-0.59,0.22L2.74,8.87 C2.62,9.08,2.66,9.34,2.86,9.48l2.03,1.58C4.84,11.36,4.8,11.69,4.8,12s0.02,0.64,0.07,0.94l-2.03,1.58 c-0.18,0.14-0.23,0.41-0.12,0.61l1.92,3.32c0.12,0.22,0.37,0.29,0.59,0.22l2.39-0.96c0.5,0.38,1.03,0.7,1.62,0.94l0.36,2.54 c0.05,0.24,0.24,0.41,0.48,0.41h3.84c0.24,0,0.44-0.17,0.47-0.41l0.36-2.54c0.59-0.24,1.13-0.56,1.62-0.94l2.39,0.96 c0.22,0.08,0.47,0,0.59-0.22l1.92-3.32c0.12-0.22,0.07-0.47-0.12-0.61L19.14,12.94z M12,15.6c-1.98,0-3.6-1.62-3.6-3.6 s1.62-3.6,3.6-3.6s3.6,1.62,3.6,3.6S13.98,15.6,12,15.6z\"/></g></svg>`;", "import { html } from 'lit';\nexport const shoppingCartIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M7 18c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zM1 2v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.14 0-.25-.11-.25-.25l.03-.12.9-1.63h7.45c.75 0 1.41-.41 1.75-1.03l3.58-6.49c.08-.14.12-.31.12-.48 0-.55-.45-1-1-1H5.21l-.94-2H1zm16 16c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2z\"/></svg>`;\n", "import { html } from 'lit';\nexport const sortIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M3 18h6v-2H3v2zM3 6v2h18V6H3zm0 7h12v-2H3v2z\"/></svg>`;", "import { html } from 'lit';\nexport const starIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\"/></svg>`;\n", "import { html } from 'lit';\nexport const starBorderIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M22 9.24l-7.19-.62L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21 12 17.27 18.18 21l-1.63-7.03L22 9.24zM12 15.4l-3.76 2.27 1-4.28-3.32-2.88 4.38-.38L12 6.1l1.71 4.04 4.38.38-3.32 2.88 1 4.28L12 15.4z\"/></svg>`;", "import { html } from 'lit';\nexport const starHalfIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><g><rect fill=\"none\" height=\"24\" width=\"24\" x=\"0\"/></g><g><g><g><path d=\"M22,9.24l-7.19-0.62L12,2L9.19,8.63L2,9.24l5.46,4.73L5.82,21L12,17.27L18.18,21l-1.63-7.03L22,9.24z M12,15.4V6.1 l1.71,4.04l4.38,0.38l-3.32,2.88l1,4.28L12,15.4z\"/></g></g></g></svg>`;", "import { html } from 'lit';\nexport const swapIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M16 17.01V10h-2v7.01h-3L15 21l4-3.99h-3zM9 3L5 6.99h3V14h2V6.99h3L9 3z\"/></svg>`;", "import { html } from 'lit';\nexport const switchLeftIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><rect fill=\"none\" height=\"24\" width=\"24\"/><path d=\"M8.5,8.62v6.76L5.12,12L8.5,8.62 M10,5l-7,7l7,7V5L10,5z M14,5v14l7-7L14,5z\"/></svg>`;\n", "import { html } from 'lit';\nexport const textFieldsIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><g><rect fill=\"none\" height=\"24\" width=\"24\"/></g><g><g><g><path d=\"M2.5,4v3h5v12h3V7h5V4H2.5z M21.5,9h-9v3h3v7h3v-7h3V9z\"/></g></g></g></svg>`;", "import { html } from 'lit';\nexport const thumbUpIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M1 21h4V9H1v12zm22-11c0-1.1-.9-2-2-2h-6.31l.95-4.57.03-.32c0-.41-.17-.79-.44-1.06L14.17 1 7.59 7.59C7.22 7.95 7 8.45 7 9v10c0 1.1.9 2 2 2h9c.83 0 1.54-.5 1.84-1.22l3.02-7.05c.09-.23.14-.47.14-.73v-2z\"/></svg>`;", "import { html } from 'lit';\nexport const thumbDownIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 -960 960 960\" width=\"24\"><path d=\"M240-840h400v520L360-40l-50-50q-7-7-11.5-19t-4.5-23v-14l44-174H120q-32 0-56-24t-24-56v-80q0-7 1.5-15t4.5-15l120-282q9-20 30-34t44-14Zm480 520v-520h160v520H720Z\"/></svg>`;", "import { html } from 'lit';\nexport const timerIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><g><rect fill=\"none\" height=\"24\" width=\"24\"/></g><g><g><path d=\"M9,1h6v2h-6Z\" /><path d=\"M19.03,7.39l1.42-1.42c-0.43-0.51-0.9-0.99-1.41-1.41l-1.42,1.42C16.07,4.74,14.12,4,12,4c-4.97,0-9,4.03-9,9 c0,4.97,4.02,9,9,9s9-4.03,9-9C21,10.88,20.26,8.93,19.03,7.39z M13,14h-2V8h2V14z\"/></g></g></svg>`;", "import { html } from 'lit';\nexport const tuneIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M3 17v2h6v-2H3zM3 5v2h10V5H3zm10 16v-2h8v-2h-8v-2h-2v6h2zM7 9v2H3v2h4v2h2V9H7zm14 4v-2H11v2h10zm-6-4h2V7h4V5h-4V3h-2v6z\"/></svg>`;", "import { html } from 'lit';\nexport const undoIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12.5 8c-2.65 0-5.05.99-6.9 2.6L2 7v9h9l-3.62-3.62c1.39-1.16 3.16-1.88 5.12-1.88 3.54 0 6.55 2.31 7.6 5.5l2.37-.78C21.08 11.03 17.15 8 12.5 8z\"/></svg>`;", "import { html } from 'lit';\nexport const uploadIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M9 16h6v-6h4l-7-7-7 7h4zm-4 2h14v2H5z\"/></svg>`;", "import { html } from 'lit';\nexport const videocamIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M17 10.5V7c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h12c.55 0 1-.45 1-1v-3.5l4 4v-11l-4 4z\"/></svg>`;", "import { html } from 'lit';\nexport const warningIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\"/></svg>`;\n\n", "import { html } from 'lit';\nexport const zoomInIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 -960 960 960\" width=\"24\"><path d=\"M784-120 532-372q-30 24-69 38t-83 14q-109 0-184.5-75.5T120-580q0-109 75.5-184.5T380-840q109 0 184.5 75.5T640-580q0 44-14 83t-38 69l252 252-56 56ZM380-400q75 0 127.5-52.5T560-580q0-75-52.5-127.5T380-760q-75 0-127.5 52.5T200-580q0 75 52.5 127.5T380-400Zm-40-60v-80h-80v-80h80v-80h80v80h80v80h-80v80h-80Z\"/></svg>`;\n", "import { html } from 'lit';\nexport const zoomOutIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 -960 960 960\" width=\"24\"><path d=\"M784-120 532-372q-30 24-69 38t-83 14q-109 0-184.5-75.5T120-580q0-109 75.5-184.5T380-840q109 0 184.5 75.5T640-580q0 44-14 83t-38 69l252 252-56 56ZM380-400q75 0 127.5-52.5T560-580q0-75-52.5-127.5T380-760q-75 0-127.5 52.5T200-580q0 75 52.5 127.5T380-400ZM280-540v-80h200v80H280Z\"/></svg>`;\n", "import { html } from 'lit';\nexport const zoomOutMapIcon = html`<svg class=\"dile-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 -960 960 960\" width=\"24\"><path d=\"M120-120v-240h80v104l124-124 56 56-124 124h104v80H120Zm480 0v-80h104L580-324l56-56 124 124v-104h80v240H600ZM324-580 200-704v104h-80v-240h240v80H256l124 124-56 56Zm312 0-56-56 124-124H600v-80h240v240h-80v-104L636-580Z\" /></svg>`;\n", "/* eslint-disable no-console */\nimport { LitElement, html, css } from \"lit\";\nimport { customElement } from \"lit/decorators.js\";\nimport { accountIcon } from \"@dile/icons\";\nimport {\n  getAuth,\n  setPersistence,\n  signInWithPopup,\n  indexedDBLocalPersistence,\n  GoogleAuthProvider,\n  signInWithEmailAndPassword\n} from \"firebase/auth\";\nimport { GetApp } from \"client/store\";\n\n@customElement(\"login-element\")\nexport class LoginElement extends LitElement {\n  static styles = css`\n    p {\n      color: green;\n    }\n  `;\n\n  protected passLogin() {\n    const emailElem = this.shadowRoot?.querySelector(\"#email\") as HTMLInputElement;\n    const passwordElem = this.shadowRoot?.querySelector(\"#password\") as HTMLInputElement;\n\n    const email = emailElem.value;\n    const pass = passwordElem.value;\n    console.log(\"pass login\", email, pass);\n\n    const app = GetApp();\n    if (app.none) {\n      throw new Error(\"App undefined...\");\n    }\n\n    const auth = getAuth(app.safeValue());\n    setPersistence(auth, indexedDBLocalPersistence)\n      .then(() => {\n        // In memory persistence will be applied to the signed in Google user\n        // even though the persistence was set to 'none' and a page redirect\n        // occurred.\n        return signInWithEmailAndPassword(auth, email, pass);\n      })\n      .then(() => {\n        console.log(\"logged in!\");\n        const options = {\n          bubbles: true,\n          composed: true\n        };\n        this.dispatchEvent(new CustomEvent(\"logIn\", options));\n      })\n      .catch((error) => {\n        console.error(\"googleLogin error\", error);\n        throw new Error(error);\n      });\n  }\n\n  protected googleLogin() {\n    console.log(\"googleLogin\");\n    const app = GetApp();\n    console.log(app);\n    if (app.none) {\n      throw new Error(\"App undefined...\");\n    }\n\n    console.log('1');\n    const auth = getAuth(app.safeValue());\n    console.log('2');\n    setPersistence(auth, indexedDBLocalPersistence)\n      .then(() => {\n        console.log('3');\n        const provider = new GoogleAuthProvider();\n        // In memory persistence will be applied to the signed in Google user\n        // even though the persistence was set to 'none' and a page redirect\n        // occurred.\n        return signInWithPopup(auth, provider);\n      })\n      .then(() => {\n        console.log(\"logged in!\");\n        const options = {\n          bubbles: true,\n          composed: true\n        };\n        this.dispatchEvent(new CustomEvent(\"logIn\", options));\n      })\n      .catch((error) => {\n        console.error(\"googleLogin error\", error);\n        throw new Error(error);\n      });\n  }\n\n  protected render() {\n    return html`<div>\n      <dile-card shadow-md title=\"Login\">\n        <div>\n          <dile-input id=\"email\" name=\"email\" label=\"Email\"></dile-input>\n          <dile-input id=\"password\" name=\"password\" label=\"Password\" type=\"password\"></dile-input>\n        </div>\n\n        <div slot=\"footer\">\n          <dile-button @click=\"${this.passLogin}\">Login!</dile-button>\n        </div>\n      </dile-card>\n      </br>\n      <dile-button-icon @click=\"${this.googleLogin}\" .icon=\"${accountIcon}\">Google Login</dile-button-icon>\n    </div>`;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"login-element\": LoginElement;\n  }\n}\n", "import { LitElement, html, css } from 'lit';\n\nexport class DileCard extends LitElement {\n    static styles = [\n      css`\n        * {\n          box-sizing: border-box;\n        }\n        :host {\n          display: block;\n          align-items: stretch;\n        }\n        section {\n          border: var(--dile-card-border, 1px solid #ccc);\n          border-radius: var(--dile-card-border-radius, 0.5rem);\n          background-color: var(--dile-card-background-color, #fff);\n          color: var(--dile-card-text-color, #303030);\n          width: 100%;\n          text-align: var(--dile-card-text-align, left);\n          font-weight: var(--dile-card-font-weight, normal);\n          box-shadow: var(--dile-card-box-shadow, 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1));\n        }\n        h1, main, footer {\n          padding-right: var(--dile-card-padding-x, 1rem);\n          padding-left: var(--dile-card-padding-x, 1rem);\n        }\n        h1 {\n          padding-top: var(--dile-card-padding-y, 1rem);\n          font-size: var(--dile-card-title-font-size, 1.5rem);\n          font-weight: var(--dile-card-title-font-weight, 300);\n          color: var(--dile-card-title-color, var(--dile-card-text-color, #303030));\n          margin: 0;\n          margin-bottom: var(--dile-card-title-margin-bottom, 0);\n        }\n        main {\n          padding-top: var(--dile-card-padding-y, 1rem);\n          padding-bottom: var(--dile-card-padding-y, 1rem);\n        }\n        footer {\n          border-top: var(--dile-card-footer-border-separator, 1px solid #ccc);\n          padding-top: var(--dile-card-footer-padding-top, 0.75rem);\n          padding-bottom: var(--dile-card-padding-y, 1rem);\n          background-color: var(--dile-card-footer-background-color, transparent);\n          overflow: hidden;\n          border-bottom-left-radius: var(--dile-card-border-radius, 0.5rem);\n          border-bottom-right-radius: var(--dile-card-border-radius, 0.5rem);\n        }\n        :host([shadow-none]) section {\n          box-shadow: var(--dile-card-box-shadow, 0 0 #0000);\n        }\n        :host([shadow-sm]) section {\n          box-shadow: var(--dile-card-box-shadow, 0 1px 2px 0 rgb(0 0 0 / 0.05));\n        }\n        :host([shadow-md]) section {\n          box-shadow: var(--dile-card-box-shadow, 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1));\n        }\n        :host([shadow-lg]) section {\n          box-shadow: var(--dile-card-box-shadow, 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1));\n        }\n        :host([shadow-xl]) section {\n          box-shadow: var(--dile-card-box-shadow, 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1));\n        }\n        :host([shadow-2xl]) section {\n          box-shadow: var(--dile-card-box-shadow, 0 25px 50px -12px rgb(0 0 0 / 0.25));\n        }\n\n      `\n    ];\n\n    static get properties() {\n      return {\n        title: { type: String }\n      };\n    }\n\n    render() {\n      return html`\n        <section>\n          ${this.titleTemplate}\n          <main>\n            <slot></slot>\n          </main>\n          ${this.footerTemplate}\n        </section>\n      `;\n    }\n\n    get titleTemplate() {\n      return this.title \n          ? html`<h1>${this.title}</h1>`\n          : ''\n    }\n\n\n    get footerTemplate() {\n      return html`\n        ${this.hasSlot('footer') \n          ? html`\n            <footer>\n                <slot name=\"footer\"></slot>\n            </footer>\n            `\n          : ''\n        }\n      `;\n    }\n    \n    hasSlot(name) {\n        return this.querySelector(`[slot=\"${name}\"]`) !== null;\n    }\n}", "import { DileCard } from \"./src/DileCard.js\";\n\nwindow.customElements.define(\"dile-card\", DileCard);\n", "import { html, css, LitElement } from \"lit\";\n\nexport class DileButton extends LitElement {\n  static get properties() {\n    return {\n      disabled: { type: Boolean },\n      name: { type: String },\n    };\n  }\n\n  constructor() {\n    super();\n    this.disabled = false;\n  }\n\n  static get styles() {\n    return css`\n      :host {\n        display: inline-block;\n      }\n      button {\n        cursor: pointer;\n        padding-top: var(--dile-button-padding-y, 0.5rem);\n        padding-bottom: var(--dile-button-padding-y, 0.5rem);\n        padding-right: var(--dile-button-padding-x, 0.8rem);\n        padding-left: var(--dile-button-padding-x, 0.8rem);\n        border-radius: var(--dile-button-border-radius, 2rem);\n        border-width:  var(--dile-button-border-width, 3px);\n        border-color:  var(--dile-button-border-color, #07193b);\n        background-color: var(--dile-button-background-color, #7BB93D);\n        transition-property: background-color, color;\n        transition-duration: 0.3s;\n        transition-timing-function: ease-in-out;\n        border-style: solid;\n        color: var(--dile-button-text-color, #fff); \n        font-size: var(--dile-button-font-size, 1rem);\n        font-weight: var(--dile-button-font-weight, bold);\n        text-transform: var(--dile-button-text-transform, none);\n        letter-spacing: var(--dile-button-letter-spacing, 0);\n      }\n      button:hover {\n        background-color: var(--dile-button-hover-background-color, #f3f3ae);\n        color: var(--dile-button-hover-text-color, #303030);\n        border-color:  var(--dile-button-hover-border-color, #666666);\n      }\n      button:focus {\n        outline: none;\n        box-shadow: 0 0 0 calc(0px + var(--dile-button-ring-offset-width, 3px)) var(--dile-button-ring-color, #12c9e9);\n        border-color: var(--dile-button-ring-color, #12c9e9);\n      }\n\n      :host([disabled]) button {\n        cursor: auto;\n        background-color: var(--dile-button-disabled-background-color, #ccc);\n        color: var(--dile-button-disabled-text-color, #999);\n        border-color: var(--dile-button-disabled-border-color, #bbb);\n      }\n      :host([disabled]) button:focus {\n        outline: none;\n        box-shadow: none;\n\n      }\n      :host([disabled]) button:active {\n        outline: none;\n        border-color: #aaa;\n        box-shadow: none;\n      }\n      button {\n        user-select: none;\n      }\n    `;\n  }\n\n  render() {\n    return html`\n      <button @click=\"${this.doClick}\"><slot></slot></button>\n    `;\n  }\n\n  doClick(e) {\n    if (this.disabled) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  }\n}\n", "import { DileButton } from \"./src/DileButton.js\";\n\nwindow.customElements.define(\"dile-button\", DileButton);\n", "import { html, css, LitElement } from \"lit\";\nimport { iconStyles } from '@dile/icons/index.js';\n\nexport class DileIcon extends LitElement {\n  static get properties() {\n    return {\n      icon: { type: Object },\n    };\n  }\n\n  static get styles() {\n    return [\n      iconStyles,\n      css`\n        :host {\n          display: inline-block;\n          transition-duration: 0.3s;\n          transition-timing-function: ease-in-out;\n          transition-property: background-color;\n        }\n        span {\n          display: flex;\n          align-items: center;\n        }\n        path {\n          transition-duration: 0.3s;\n          transition-timing-function: ease-in-out;\n          transition-property: fill;\n        }\n        :host([rounded]) {\n          background-color: var(--dile-icon-rounded-background-color, #eee);\n          border-radius: 50%;\n          padding: var(--dile-icon-rounded-padding, 0.5rem);\n        }\n    `];\n  }\n\n  render() {\n    return html`\n      <span>${this.icon}</span>\n    `;\n  }\n}\n", "import { DileIcon } from \"./src/DileIcon.js\";\n\nwindow.customElements.define(\"dile-icon\", DileIcon);\n", "import { html, css, LitElement } from \"lit\";\nimport { DileButton } from './DileButton.js';\nimport '../../icon/icon.js';\n\nexport class DileButtonIcon extends DileButton {\n  static get properties() {\n    return {\n      icon: { type: Object },\n    };\n  }\n\n  static get styles() {\n    return [\n      super.styles,\n      css`\n        button {\n          display: flex;\n          align-items: center;\n        }\n        dile-icon {\n          margin-right: var(--dile-button-icon-separation, 0.3rem);\n        }\n        button:hover {\n          --dile-icon-color: var(--dile-button-icon-hover-color, #303030);\n        }\n      `\n    ];\n  }\n\n  render() {\n    return html`\n      <button @click=\"${this.doClick}\">\n          <dile-icon .icon=${this.icon}></dile-icon>\n          <slot></slot>\n      </button>\n    `;\n  }\n}\n", "import { DileButtonIcon } from \"./src/DileButtonIcon.js\";\n\nwindow.customElements.define(\"dile-button-icon\", DileButtonIcon);\n", "/**\n *\n * # DileEmmitChange\n *\n * Mixin to detect changes in form components\n *\n */\n\n export const DileEmmitChange = (superclass) => class extends superclass {\n\n    emmitChange() {\n        this.dispatchEvent(new CustomEvent('element-changed', {\n          bubbles: true,\n          composed: true,\n          detail: {\n            name: this.name,\n            value: this.value\n          }\n        }));\n      }\n      \n  }", "import { css } from 'lit';\n\nexport const messageStyles = css`\n  .message span {\n    display: block;\n    padding-top: var(--dile-input-message-padding-top, 4px);\n    font-size: var(--dile-input-message-font-size, 0.875rem);\n    color: var(--dile-input-message-color, #888);\n\n  }\n  .errored-msg span {\n    color: var(--dile-input-message-error-color, #c00);\n  }\n`;", "import { LitElement, html, css } from 'lit';\nimport { DileEmmitChange } from '../../../mixins/form/index.js';\nimport { messageStyles } from './message-styles.js';\n\nexport class DileInput extends DileEmmitChange(LitElement) {\n\n    /**\n     * Fired when user press enter key.\n     *\n     * @event enter-pressed\n     */\n\n    /**\n     * Liten to the native input event to recive text input updates\n     *\n     * @event input\n     */\n\n    static get properties() {\n        return {\n          /** Label to the element */\n          label: { type: String },\n\n          /** Input type */\n          type: { type: String },\n\n          /** Set a placeholder to the input element */\n          placeholder: { type: String },\n\n          /** Disable the input field */\n          disabled: { type: Boolean },\n\n          /** Set initial value to the input. This property syncs to the input field value property */\n          value: { type: String },\n\n          /** Name for this input field */\n          name: { type: String },\n\n          /** Has error on this input field */\n          errored: { type: Boolean },\n\n          /** Disable the autocomplete of the input field */\n          disableAutocomplete: { type: Boolean },\n\n          /** ReadOnly attribute */\n          readonly: { type: Boolean },\n\n          /** Select all content on focus */\n          selectOnFocus: { type: Boolean },\n\n          /** Message Displayed */\n          message: { type: String },\n\n          /** Text placed on the right side of the input  */\n          labelRight: { type: String },\n\n          /** Hide errors on input */\n          hideErrorOnInput: { type: Boolean },\n\n          /** Set the application focus to this the input component after the initialization */\n          focusOnStart: { type: Boolean },\n        };\n    }\n\n    firstUpdated() {\n      if(this.focusOnStart) {\n        this.focus();\n      }\n    }\n\n    updated(changedProperties) {\n      if(changedProperties.has('value')) {\n        this.emmitChange();\n      }\n    }\n\n    constructor() {\n        super();\n        this.placeholder = '';\n        this.label = '';\n        this.labelRight = '';\n        this.value = '';\n        this.disabled = false;\n        this.disableAutocomplete = false;\n        this.name = '';\n        this.type = 'text';\n        this.types = ['text', 'password', 'email', 'number', 'tel', 'url', 'search', 'date', 'time', 'datetime', 'datetime-local', 'month', 'week'];     \n    }\n\n    static get styles() {\n        return [\n          messageStyles,\n          css`\n            * {\n              box-sizing: border-box;\n            }\n            :host {\n              display: block;\n              margin-bottom: 10px;\n            }\n            :host([type=\"hidden\"]) {\n              display: none;\n            }\n            main {\n              width: var(--dile-input-section-width, 100%);\n            }\n            label {\n              display: block;\n              margin-bottom: var(--dile-input-label-margin-bottom, 4px);\n              font-size: var(--dile-input-label-font-size, 1em);\n              color: var(--dile-input-label-color, #59e);\n              font-weight: var(--dile-input-label-font-weight, normal);\n            }\n            input {\n              box-sizing: border-box;\n              border-radius: var(--dile-input-border-radius, 5px);\n              border: var(--dile-input-border-width, 1px) solid var(--dile-input-border-color, #888);\n              font-size: var(--dile-input-font-size, 1em);\n              line-height: var(--dile-input-line-height, 1.5em);\n              padding: var(--dile-input-padding, 5px);\n              background-color: var(--dile-input-background-color, #fff);\n              color: var(--dile-input-color, #303030);\n              text-align: var(--dile-input-text-align, left);\n              width: 100%;\n              flex-grow: 1;\n            }\n            input:focus {\n              outline: none;\n              border-color: var(--dile-input-focus-border-color, #6af)\n            }\n            input::placeholder {\n              color: var(--dile-input-placeholder-color, #ccc);\n            }\n            input:disabled {\n              background-color: #f5f5f5;\n              border-color: var(--dile-input-disabled-border-color, #eee);\n            }\n            .errored {\n              border-color: var(--dile-input-error-border-color, #c00);\n            }\n            section.for-input {\n              display: flex;\n              align-items: center;\n              width: 100%;\n            }\n            .labelright {\n              margin-left: var(--dile-input-label-right-margin-left, 10px);\n              color: var(--dile-input-label-color, #59e);\n              font-size: var(--dile-input-label-right-font-size, 1.2em);\n            }\n          `\n        ];\n    }\n    \n    render() {\n        return html`\n          <main>\n            ${this.label\n              ? html`<label for=\"textField\">${this.label}</label>`\n              : \"\"}\n             <section class=\"for-input\">\n              <input\n                type=\"${this.availableType(this.type)}\"\n                id=\"textField\"\n                name=\"${this.name}\"\n                placeholder=\"${this.placeholder}\"\n                ?disabled=\"${this.disabled}\"\n                ?readonly=\"${this.readonly}\"\n                autocomplete=\"${this.disableAutocomplete ? \"off\" : \"on\"}\"\n                .value=\"${this.computeValue(this.value)}\"\n                class=\"${this.errored ? 'errored' : ''}\"\n                @keypress=\"${this._lookForEnter}\"\n                @input=\"${this._input}\"\n                @blur=\"${this.doBlur}\"\n                @focus=\"${this.doFocus}\"\n              /> \n              ${this.labelRight \n                ? html`<span class=\"labelright\">${this.labelRight}</span>`\n                : ''\n              }\n            </section>\n            ${this.messageTemplate}\n          </main>\n        `;\n    }\n\n    get messageTemplate() {\n      return html`\n        ${this.message \n          ? html`<div class=\"message ${this.errored ? 'errored-msg' : ''}\"><span>${this.message}</span></div>`\n          : ''\n        }\n      `\n    }\n\n    /**\n     * Private method to dispatch events on enter key pressed\n     */\n    _lookForEnter(e) {\n        let keycode = (e.keyCode ? e.keyCode : e.which);\n        if (keycode == '13') {\n            this.dispatchEvent(new CustomEvent('enter-pressed'));\n        }\n    }\n    _input(e) {\n        this.value = e.target.value;\n        if (this.hideErrorOnInput && this.errored) {\n          this.clearError();  \n        }\n    }\n    \n    clearError() {\n      this.errored = false;\n      this.message = '';\n    }\n\n    availableType(type) {\n        if(this.types.includes(type)) {\n            return type;\n        }\n        return 'text';\n    }\n\n    get el() {\n        return this.shadowRoot.querySelector('input');\n    }\n\n    doBlur() {\n      //\n    }\n\n    doFocus() {\n      if(this.selectOnFocus) {\n        this.el.select();\n      }\n    }\n\n    computeValue(value) {\n      return value;\n    }\n\n    focus() {\n      this.el.focus();\n    }\n}", "import { DileInput } from './src/DileInput.js';\n\nwindow.customElements.define('dile-input', DileInput);", "// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\n// import { getAnalytics } from \"firebase/analytics\";\nimport \"./components/router\";\nimport \"./components/quiz\";\nimport \"./components/login\";\nimport \"@dile/ui/components/card/card.js\";\nimport \"@dile/ui/components/button/button.js\";\nimport \"@dile/ui/components/button/button-icon.js\";\nimport \"@dile/ui/components/input/input\";\nimport { SetApp } from \"./store\";\nimport { getAuth } from \"firebase/auth\";\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCdf3S2HDEw3Vq4XqxU-5CsEx5jbtveUm0\",\n  authDomain: \"hanziwriter-35e9a.firebaseapp.com\",\n  projectId: \"hanziwriter-35e9a\",\n  storageBucket: \"hanziwriter-35e9a.appspot.com\",\n  messagingSenderId: \"77786650624\",\n  appId: \"1:77786650624:web:8b3ab6a98332316453e0e5\",\n  measurementId: \"G-BMN2W33RJG\"\n};\n\ndocument.addEventListener(\"DOMContentLoaded\", async () => {\n  console.log(\"DOMContentLoaded\");\n  // Initialize Firebase\n  const app = initializeApp(firebaseConfig);\n  await SetApp(app);\n\n  const auth = getAuth(app);\n  if (auth.currentUser !== null) {\n    console.log(\"signed in user!\");\n  }\n\n  // const analytics = getAnalytics(app);\n  console.log(\"success\");\n});\n"],
  "mappings": "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",
  "names": ["stringToByteArray", "p", "i", "c", "c2", "c3", "c4", "u", "e", "e", "name", "ua", "e", "_", "a", "b", "k", "querystring", "e", "i", "name", "e", "callbacks", "LogLevel", "name", "c", "name", "version", "target", "DEFAULT_ENTRY_NAME", "appName", "appCompatName", "analyticsName", "analyticsCompatName", "appCheckName", "appCheckCompatName", "authName", "authCompatName", "databaseName", "databaseCompatName", "functionsName", "functionsCompatName", "installationsName", "installationsCompatName", "messagingName", "messagingCompatName", "performanceName", "performanceCompatName", "remoteConfigName", "remoteConfigCompatName", "storageName", "storageCompatName", "firestoreName", "firestoreCompatName", "vertexName", "packageName", "app", "e", "app", "name", "name", "DEFAULT_ENTRY_NAME", "name", "DEFAULT_ENTRY_NAME", "app", "version", "e", "app", "name", "version", "name", "version", "s", "e", "t", "p", "i", "e", "_", "e", "e", "o", "n", "reload", "name", "p", "ua", "ua", "e", "_", "i", "app", "p", "jsHelpers._recaptchaEnterpriseScriptUrl", "jsHelpers\r\n                        ._loadJS", "app", "auth", "signInWithEmailLink", "IDP_REQUEST_URI", "signInWithPhoneNumber", "linkWithPhoneNumber", "_link", "e", "ua", "_POLLING_INTERVAL_MS", "key", "storedValue", "i", "DB_NAME", "DB_VERSION", "e", "jsHelpers._generateCallbackName", "_linkUser", "e", "e", "e", "v", "i", "js._generateCallbackName", "js\r\n                ._loadJS", "js._gapiScriptUrl", "gapiLoader._loadGapi", "gapi", "window", "name", "ua", "promise", "app", "auth", "version", "global", "globalThis", "supportsAdoptingStyleSheets", "ShadowRoot", "ShadyCSS", "nativeShadow", "Document", "prototype", "CSSStyleSheet", "constructionToken", "Symbol", "cssTagCache", "WeakMap", "CSSResult", "cssText", "strings", "safeToken", "this", "Error", "_strings", "styleSheet", "_styleSheet", "cacheable", "length", "get", "replaceSync", "set", "toString", "unsafeCSS", "value", "String", "css", "values", "reduce", "acc", "v", "idx", "adoptStyles", "renderRoot", "styles", "adoptedStyleSheets", "map", "s", "style", "document", "createElement", "nonce", "setAttribute", "textContent", "appendChild", "getCompatibleStyle", "sheet", "rule", "cssRules", "is", "defineProperty", "getOwnPropertyDescriptor", "getOwnPropertyNames", "getOwnPropertySymbols", "getPrototypeOf", "Object", "global", "globalThis", "trustedTypes", "emptyStringForBooleanAttribute", "emptyScript", "polyfillSupport", "reactiveElementPolyfillSupport", "JSCompiler_renameProperty", "prop", "_obj", "defaultConverter", "value", "type", "Boolean", "Array", "JSON", "stringify", "fromValue", "Number", "parse", "e", "notEqual", "old", "defaultPropertyDeclaration", "attribute", "String", "converter", "reflect", "hasChanged", "Symbol", "metadata", "litPropertyMetadata", "WeakMap", "ReactiveElement", "HTMLElement", "initializer", "this", "__prepare", "_initializers", "push", "observedAttributes", "finalize", "__attributeToPropertyMap", "keys", "name", "options", "state", "elementProperties", "set", "noAccessor", "key", "descriptor", "getPropertyDescriptor", "prototype", "get", "v", "call", "oldValue", "requestUpdate", "configurable", "enumerable", "hasOwnProperty", "superCtor", "Map", "finalized", "props", "properties", "propKeys", "p", "createProperty", "attr", "__attributeNameForProperty", "elementStyles", "finalizeStyles", "styles", "isArray", "Set", "flat", "Infinity", "reverse", "s", "unshift", "getCompatibleStyle", "toLowerCase", "constructor", "super", "__instanceProperties", "isUpdatePending", "hasUpdated", "__reflectingProperty", "__initialize", "__updatePromise", "Promise", "res", "enableUpdating", "_$changedProperties", "__saveInstanceProperties", "forEach", "i", "controller", "__controllers", "add", "renderRoot", "isConnected", "hostConnected", "delete", "instanceProperties", "size", "createRenderRoot", "shadowRoot", "attachShadow", "shadowRootOptions", "adoptStyles", "connectedCallback", "c", "_requestedUpdate", "disconnectedCallback", "hostDisconnected", "_old", "_$attributeToProperty", "attrValue", "toAttribute", "removeAttribute", "setAttribute", "ctor", "propName", "getPropertyOptions", "fromAttribute", "_$changeProperty", "__enqueueUpdate", "has", "__reflectingProperties", "reject", "result", "scheduleUpdate", "performUpdate", "wrapped", "shouldUpdate", "changedProperties", "willUpdate", "hostUpdate", "update", "__markUpdated", "_$didUpdate", "_changedProperties", "hostUpdated", "firstUpdated", "updated", "updateComplete", "getUpdateComplete", "__propertyToAttribute", "mode", "reactiveElementVersions", "global", "globalThis", "trustedTypes", "policy", "createPolicy", "createHTML", "s", "boundAttributeSuffix", "marker", "Math", "random", "toFixed", "slice", "markerMatch", "nodeMarker", "d", "document", "createMarker", "createComment", "isPrimitive", "value", "isArray", "Array", "isIterable", "Symbol", "iterator", "SPACE_CHAR", "textEndRegex", "commentEndRegex", "comment2EndRegex", "tagEndRegex", "RegExp", "singleQuoteAttrEndRegex", "doubleQuoteAttrEndRegex", "rawTextElement", "tag", "type", "strings", "values", "_$litType$", "html", "svg", "noChange", "for", "nothing", "templateCache", "WeakMap", "walker", "createTreeWalker", "trustFromTemplateString", "tsa", "stringFromTSA", "hasOwnProperty", "Error", "getTemplateHtml", "l", "length", "attrNames", "rawTextEndRegex", "regex", "i", "attrName", "match", "attrNameEndIndex", "lastIndex", "exec", "test", "end", "startsWith", "push", "Template", "constructor", "options", "node", "this", "parts", "nodeIndex", "attrNameIndex", "partCount", "el", "createElement", "currentNode", "content", "svgElement", "firstChild", "replaceWith", "childNodes", "nextNode", "nodeType", "hasAttributes", "name", "getAttributeNames", "endsWith", "realName", "statics", "getAttribute", "split", "m", "index", "ctor", "PropertyPart", "BooleanAttributePart", "EventPart", "AttributePart", "removeAttribute", "tagName", "textContent", "emptyScript", "append", "data", "indexOf", "_options", "innerHTML", "resolveDirective", "part", "parent", "attributeIndex", "currentDirective", "__directives", "__directive", "nextDirectiveConstructor", "_$initialize", "_$resolve", "TemplateInstance", "template", "_$parts", "_$disconnectableChildren", "_$template", "_$parent", "parentNode", "_$isConnected", "fragment", "creationScope", "importNode", "partIndex", "templatePart", "ChildPart", "nextSibling", "ElementPart", "_$setValue", "__isConnected", "startNode", "endNode", "_$committedValue", "_$startNode", "_$endNode", "isConnected", "directiveParent", "_$clear", "_commitText", "_commitTemplateResult", "_commitNode", "_commitIterable", "insertBefore", "_insert", "createTextNode", "result", "_$getTemplate", "h", "_update", "instance", "_clone", "get", "set", "itemParts", "itemPart", "item", "start", "from", "_$notifyConnectionChanged", "n", "remove", "element", "fill", "String", "valueIndex", "noCommit", "change", "v", "_commitValue", "setAttribute", "toggleAttribute", "super", "newListener", "oldListener", "shouldRemoveListener", "capture", "once", "passive", "shouldAddListener", "removeEventListener", "addEventListener", "event", "call", "host", "handleEvent", "polyfillSupport", "global", "litHtmlPolyfillSupport", "Template", "ChildPart", "litHtmlVersions", "push", "render", "value", "container", "options", "partOwnerNode", "renderBefore", "part", "endNode", "insertBefore", "createMarker", "_$setValue", "LitElement", "ReactiveElement", "constructor", "this", "renderOptions", "host", "__childPart", "createRenderRoot", "renderRoot", "super", "renderBefore", "firstChild", "changedProperties", "value", "render", "hasUpdated", "isConnected", "update", "connectedCallback", "setConnected", "disconnectedCallback", "noChange", "globalThis", "litElementHydrateSupport", "polyfillSupport", "litElementPolyfillSupport", "_$changedProperties", "globalThis", "litElementVersions", "push", "customElement", "tagName", "classOrTarget", "context", "addInitializer", "customElements", "define", "defaultPropertyDeclaration", "attribute", "type", "String", "converter", "defaultConverter", "reflect", "hasChanged", "notEqual", "standardProperty", "options", "target", "context", "kind", "metadata", "properties", "globalThis", "litPropertyMetadata", "get", "set", "Map", "name", "v", "oldValue", "call", "this", "requestUpdate", "_$changeProperty", "value", "Error", "property", "protoOrTarget", "nameOrContext", "proto", "hasOwnProperty", "constructor", "createProperty", "wrapped", "Object", "getOwnPropertyDescriptor", "state", "options", "property", "attribute", "s", "app", "r", "t", "globalObj", "window", "global", "performanceNow", "performance", "now", "Date", "requestAnimationFrame", "callback", "setTimeout", "cancelAnimationFrame", "clearTimeout", "arrLast", "arr", "length", "fixIndex", "index", "selectIndex", "copyAndMergeDeep", "base", "override", "output", "key", "baseVal", "overrideVal", "Array", "isArray", "inflate", "scope", "obj", "parts", "split", "final", "current", "i", "cap", "count", "counter", "average", "sum", "reduce", "acc", "val", "colorStringToVals", "colorString", "normalizedColor", "toUpperCase", "trim", "test", "hexParts", "substring", "hexStr", "join", "r", "parseInt", "slice", "g", "b", "a", "rgbMatch", "match", "parseFloat", "Error", "string", "replace", "objRepeat", "item", "times", "objRepeatCb", "cb", "ua", "navigator", "userAgent", "isMsBrowser", "indexOf", "noop", "RenderState", "constructor", "character", "options", "onStateChange", "_mutationChains", "_onStateChange", "state", "drawingFadeDuration", "drawingWidth", "drawingColor", "strokeColor", "outlineColor", "radicalColor", "highlightColor", "main", "opacity", "showCharacter", "strokes", "outline", "showOutline", "highlight", "userStrokes", "displayPortion", "overwriteOnStateChange", "updateState", "stateChanges", "nextState", "run", "mutations", "scopes", "map", "mut", "cancelMutations", "Promise", "resolve", "mutationChain", "_isActive", "_index", "_resolve", "_mutations", "_loop", "loop", "_scopes", "push", "_run", "filter", "chain", "canceled", "activeMutation", "then", "_getActiveMutations", "pauseAll", "forEach", "mutation", "pause", "resumeAll", "resume", "scopesToCancel", "chainId", "scopeToCancel", "startsWith", "_cancelMutationChain", "cancelAll", "cancel", "subtract", "p1", "p2", "x", "y", "magnitude", "point", "Math", "sqrt", "pow", "distance", "point1", "point2", "equals", "round", "precision", "multiplier", "points", "lastPoint", "pointsSansFirst", "dist", "cosineSimilarity", "rawDotProduct", "_extendPointOnLine", "vect", "norm", "frechetDist", "curve1", "curve2", "longCurve", "shortCurve", "calcVal", "j", "prevResultsCol", "curResultsCol", "max", "lastResult", "min", "subdivideCurve", "curve", "maxLen", "newCurve", "prevPoint", "segLen", "numNewPoints", "ceil", "newSegLen", "outlineCurve", "numPoints", "curveLen", "segmentLen", "outlinePoints", "endPoint", "remainingCurvePoints", "remainingDist", "outlinePointFound", "nextPointDist", "shift", "nextPoint", "normalizeCurve", "outlinedCurve", "meanX", "meanY", "mean", "translatedCurve", "scale", "scaledCurve", "rotate", "theta", "cos", "sin", "_filterParallelPoints", "filteredPoints", "numFilteredPoints", "curVect", "prevVect", "isParallel", "pop", "getPathString", "close", "start", "remainingPoints", "pathString", "roundedPoint", "extendStart", "newStart", "extendedPoints", "unshift", "Stroke", "path", "strokeNum", "isInRadical", "getStartingPoint", "getEndingPoint", "getLength", "getVectors", "vector", "getDistance", "distances", "strokePoint", "getAverageDistance", "totalDist", "Character", "symbol", "generateStrokes", "radStrokes", "medians", "pointData", "parseCharData", "charJson", "CHARACTER_BOUNDS", "from", "to", "preScaledWidth", "preScaledHeight", "Positioner", "padding", "width", "height", "effectiveWidth", "effectiveHeight", "scaleX", "scaleY", "xCenteringBuffer", "yCenteringBuffer", "xOffset", "yOffset", "convertExternalPoint", "COSINE_SIMILARITY_THRESHOLD", "START_AND_END_DIST_THRESHOLD", "FRECHET_THRESHOLD", "MIN_LEN_THRESHOLD", "strokeMatches", "userStroke", "stripDuplicates", "isMatch", "meta", "isStrokeBackwards", "avgDist", "getMatchData", "laterStrokes", "closestMatchDist", "checkBackwards", "leniencyAdjustment", "leniency", "startAndEndMatches", "closestStroke", "startingDist", "endingDist", "getEdgeVectors", "vectors", "directionMatches", "stroke", "edgeVectors", "strokeVectors", "similarities", "edgeVector", "strokeSimilarities", "strokeVector", "avgSimilarity", "lengthMatches", "firstPoint", "rest", "dedupedPoints", "SHAPE_FIT_ROTATIONS", "PI", "shapeFit", "normCurve1", "normCurve2", "minDist", "Infinity", "isOutlineVisible", "averageDistanceThreshold", "distMod", "withinDistThresh", "startAndEndMatch", "directionMatch", "shapeMatch", "lengthMatch", "backwardsMatchData", "reverse", "UserStroke", "id", "startingPoint", "startingExternalPoint", "externalPoints", "appendPoint", "externalPoint", "Delay", "duration", "_duration", "_startTime", "_paused", "_runningPromise", "_timeout", "elapsedDelay", "undefined", "Mutation", "valuesOrCallable", "_tick", "timing", "_startPauseTime", "progress", "_pausedDuration", "_renderState", "_values", "_frameHandle", "easedProgress", "ease", "getPartialValues", "_startState", "_valuesOrCallable", "_force", "force", "renderState", "_inflateValues", "isAlreadyAtEnd", "values", "startValues", "endValues", "target", "endValue", "startValue", "showStrokes", "charName", "hideCharacter", "updateColor", "colorName", "colorVal", "highlightStroke", "color", "speed", "animateStroke", "animateSingleStroke", "mutationStateFunc", "curCharState", "mutationState", "showStroke", "animateCharacter", "fadeDuration", "delayBetweenStrokes", "concat", "animateCharacterLoop", "delayBetweenLoops", "startQuiz", "startStrokeNum", "characterActions", "startUserStroke", "updateUserStroke", "userStrokeId", "removeUserStroke", "highlightCompleteChar", "getDrawnPath", "geometry", "Quiz", "positioner", "_currentStrokeIndex", "_mistakesOnStroke", "_totalMistakes", "_character", "_positioner", "_options", "startIndex", "quizStartStrokeNum", "quizActions", "strokeFadeDuration", "_userStroke", "endUserStroke", "strokeId", "continueUserStroke", "nextPoints", "setPositioner", "acceptBackwardsStrokes", "markStrokeCorrectAfterMisses", "currentStroke", "_getCurrentStroke", "isForceAccepted", "isAccepted", "_handleSuccess", "_handleFailure", "showHintAfterMisses", "strokeHighlightSpeed", "_getStrokeData", "isCorrect", "mistakesOnStroke", "totalMistakes", "strokesRemaining", "drawnPath", "isBackwards", "nextStroke", "onComplete", "highlightOnComplete", "highlightCompleteColor", "strokeHighlightDuration", "animation", "isComplete", "onCorrectStroke", "onMistake", "createElm", "elmType", "document", "createElementNS", "attr", "elm", "name", "value", "setAttributeNS", "attrs", "attrsMap", "Object", "keys", "attrName", "urlIdRef", "prefix", "location", "href", "removeElm", "parentNode", "removeChild", "StrokeRendererBase", "_pathLength", "STROKE_WIDTH", "_getStrokeDashoffset", "_getColor", "StrokeRenderer", "_oldProps", "mount", "_animationPath", "svg", "_clip", "_strokePath", "maskId", "style", "extendedMaskPoints", "toString", "fill", "appendChild", "defs", "render", "props", "_this$_oldProps", "strokeDashoffset", "_this$_oldProps2", "CharacterRenderer", "_strokeRenderers", "subTarget", "createSubRenderTarget", "_group", "strokeRenderer", "display", "removeProperty", "colorsChanged", "_this$_oldProps3", "_this$_oldProps4", "UserStrokeRenderer", "_path", "strokeWidth", "destroy", "HanziWriterRenderer", "_mainCharRenderer", "_outlineCharRenderer", "_highlightCharRenderer", "_userStrokeRenderers", "positionedTarget", "group", "_positionedTarget", "userStrokeProps", "newStrokeRenderer", "innerHTML", "RenderTargetBase", "node", "addPointerStartListener", "addEventListener", "evt", "_eventify", "_getMousePoint", "_getTouchPoint", "addPointerMoveListener", "addPointerEndListener", "getBoundingClientRect", "updateDimensions", "setAttribute", "pointFunc", "getPoint", "call", "preventDefault", "left", "top", "clientX", "clientY", "touches", "RenderTarget", "_pt", "createSVGPoint", "init", "elmOrId", "element", "getElementById", "nodeType", "nodeName", "localPt", "matrixTransform", "getScreenCTM", "_this$node$getScreenC", "inverse", "_this$node$getScreenC2", "createRenderTarget", "drawPath", "ctx", "beginPath", "moveTo", "lineTo", "pathStringToCanvas", "pathParts", "part", "commands", "cmd", "rawParams", "params", "param", "bezierCurveTo", "quadraticCurveTo", "usePath2D", "Path2D", "_path2D", "_pathCmd", "_extendedMaskPoints", "save", "clip", "globalAlpha", "dashOffset", "strokeStyle", "fillStyle", "lineWidth", "lineCap", "lineJoin", "setLineDash", "lineDashOffset", "restore", "renderUserStroke", "_target", "_animationFrame", "getContext", "clearRect", "translate", "transform", "draw", "canvas", "createElement", "VERSION", "getCharDataUrl", "char", "defaultCharDataLoader", "onLoad", "onError", "xhr", "XMLHttpRequest", "overrideMimeType", "open", "onerror", "event", "onreadystatechange", "readyState", "status", "JSON", "parse", "responseText", "send", "defaultOptions", "charDataLoader", "onLoadCharDataError", "onLoadCharDataSuccess", "renderer", "strokeAnimationSpeed", "outlineWidth", "rendererOverride", "LoadingManager", "_loadCounter", "_isLoading", "loadingFailed", "_debouncedLoad", "wrappedResolve", "data", "wrappedReject", "reason", "_reject", "returnedData", "catch", "_setupLoadingPromise", "reject", "err", "_loadingChar", "loadCharData", "promise", "HanziWriter", "canvasRenderer", "svgRenderer", "_renderer", "_assignOptions", "_loadingManager", "_setupListeners", "create", "writer", "setCharacter", "loadCharacterData", "loadingManager", "_loadingOptions", "getScalingTransform", "_withData", "_this$_renderState", "res", "_this$_renderState2", "cancelQuiz", "_this$_renderState3", "_this$_renderState4", "loopCharacterAnimation", "pauseAnimation", "_this$_renderState5", "resumeAnimation", "_this$_renderState6", "_this$_renderState7", "hideOutline", "_this$_renderState8", "_hanziWriterRenderer", "hanziWriterRenderer", "_initAndMountHanziWriterRenderer", "_quiz", "fixedColorVal", "mappedColor", "_this$_renderState9", "quiz", "quizOptions", "skipQuizStroke", "_char", "_withDataPromise", "pathStrings", "getCharacterData", "mergedOptions", "strokeAnimationDuration", "_fillWidthAndHeight", "filledOpts", "minDim", "func", "s", "w", "h", "n", "r", "t", "s", "app", "t", "s", "name", "s", "e", "s", "s", "e", "app"]
}
